{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '@material-ui/icons/GetApp';\nimport { fetchRelatedRecords, useDataProvider, useNotify, useListContext } from 'ra-core';\nimport Button from './Button';\n/**\n * Export the selected rows\n *\n * To be used inside the <List bulkActionButtons> prop.\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkExportButton = function (props) {\n  var onClick = props.onClick,\n    _a = props.label,\n    label = _a === void 0 ? 'ra.action.export' : _a,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    customExporter = props.exporter,\n    rest = __rest(props, [\"onClick\", \"label\", \"icon\", \"exporter\"]);\n  var _c = useListContext(props),\n    exporterFromContext = _c.exporter,\n    resource = _c.resource,\n    selectedIds = _c.selectedIds;\n  var exporter = customExporter || exporterFromContext;\n  var dataProvider = useDataProvider();\n  var notify = useNotify();\n  var handleClick = useCallback(function (event) {\n    exporter && dataProvider.getMany(resource, {\n      ids: selectedIds\n    }).then(function (_a) {\n      var data = _a.data;\n      return exporter(data, fetchRelatedRecords(dataProvider), dataProvider, resource);\n    }).catch(function (error) {\n      console.error(error);\n      notify('ra.notification.http_error', {\n        type: 'warning'\n      });\n    });\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [dataProvider, exporter, notify, onClick, resource, selectedIds]);\n  return React.createElement(Button, __assign({\n    onClick: handleClick,\n    label: label\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(DownloadIcon, null);\nvar sanitizeRestProps = function (_a) {\n  var basePath = _a.basePath,\n    filterValues = _a.filterValues,\n    selectedIds = _a.selectedIds,\n    resource = _a.resource,\n    rest = __rest(_a, [\"basePath\", \"filterValues\", \"selectedIds\", \"resource\"]);\n  return rest;\n};\nBulkExportButton.propTypes = {\n  basePath: PropTypes.string,\n  exporter: PropTypes.func,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  icon: PropTypes.element\n};\nexport default BulkExportButton;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useCallback","PropTypes","DownloadIcon","fetchRelatedRecords","useDataProvider","useNotify","useListContext","Button","BulkExportButton","props","onClick","_a","label","_b","icon","defaultIcon","customExporter","exporter","rest","_c","exporterFromContext","resource","selectedIds","dataProvider","notify","handleClick","event","getMany","ids","then","data","catch","error","console","type","createElement","sanitizeRestProps","basePath","filterValues","propTypes","string","func","arrayOf","any","element"],"sources":["/node_modules/ra-ui-materialui/esm/button/BulkExportButton.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '@material-ui/icons/GetApp';\nimport { fetchRelatedRecords, useDataProvider, useNotify, useListContext, } from 'ra-core';\nimport Button from './Button';\n/**\n * Export the selected rows\n *\n * To be used inside the <List bulkActionButtons> prop.\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkExportButton = function (props) {\n    var onClick = props.onClick, _a = props.label, label = _a === void 0 ? 'ra.action.export' : _a, _b = props.icon, icon = _b === void 0 ? defaultIcon : _b, customExporter = props.exporter, rest = __rest(props, [\"onClick\", \"label\", \"icon\", \"exporter\"]);\n    var _c = useListContext(props), exporterFromContext = _c.exporter, resource = _c.resource, selectedIds = _c.selectedIds;\n    var exporter = customExporter || exporterFromContext;\n    var dataProvider = useDataProvider();\n    var notify = useNotify();\n    var handleClick = useCallback(function (event) {\n        exporter &&\n            dataProvider\n                .getMany(resource, { ids: selectedIds })\n                .then(function (_a) {\n                var data = _a.data;\n                return exporter(data, fetchRelatedRecords(dataProvider), dataProvider, resource);\n            })\n                .catch(function (error) {\n                console.error(error);\n                notify('ra.notification.http_error', {\n                    type: 'warning',\n                });\n            });\n        if (typeof onClick === 'function') {\n            onClick(event);\n        }\n    }, [dataProvider, exporter, notify, onClick, resource, selectedIds]);\n    return (React.createElement(Button, __assign({ onClick: handleClick, label: label }, sanitizeRestProps(rest)), icon));\n};\nvar defaultIcon = React.createElement(DownloadIcon, null);\nvar sanitizeRestProps = function (_a) {\n    var basePath = _a.basePath, filterValues = _a.filterValues, selectedIds = _a.selectedIds, resource = _a.resource, rest = __rest(_a, [\"basePath\", \"filterValues\", \"selectedIds\", \"resource\"]);\n    return rest;\n};\nBulkExportButton.propTypes = {\n    basePath: PropTypes.string,\n    exporter: PropTypes.func,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    icon: PropTypes.element,\n};\nexport default BulkExportButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}