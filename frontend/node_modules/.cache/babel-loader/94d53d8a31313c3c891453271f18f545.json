{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport var GET_LIST = 'GET_LIST';\nexport var GET_ONE = 'GET_ONE';\nexport var GET_MANY = 'GET_MANY';\nexport var GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\nexport var CREATE = 'CREATE';\nexport var UPDATE = 'UPDATE';\nexport var UPDATE_MANY = 'UPDATE_MANY';\nexport var DELETE = 'DELETE';\nexport var DELETE_MANY = 'DELETE_MANY';\nexport var fetchActionsWithRecordResponse = ['getOne', 'create', 'update'];\nexport var fetchActionsWithArrayOfIdentifiedRecordsResponse = ['getList', 'getMany', 'getManyReference'];\nexport var fetchActionsWithArrayOfRecordsResponse = __spreadArray(__spreadArray([], fetchActionsWithArrayOfIdentifiedRecordsResponse, true), ['updateMany', 'deleteMany'], false);\nexport var fetchActionsWithTotalResponse = ['getList', 'getManyReference'];\nexport var sanitizeFetchType = function (fetchType) {\n  switch (fetchType) {\n    case GET_LIST:\n      return 'getList';\n    case GET_ONE:\n      return 'getOne';\n    case GET_MANY:\n      return 'getMany';\n    case GET_MANY_REFERENCE:\n      return 'getManyReference';\n    case CREATE:\n      return 'create';\n    case UPDATE:\n      return 'update';\n    case UPDATE_MANY:\n      return 'updateMany';\n    case DELETE:\n      return 'delete';\n    case DELETE_MANY:\n      return 'deleteMany';\n    default:\n      return fetchType;\n  }\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","GET_LIST","GET_ONE","GET_MANY","GET_MANY_REFERENCE","CREATE","UPDATE","UPDATE_MANY","DELETE","DELETE_MANY","fetchActionsWithRecordResponse","fetchActionsWithArrayOfIdentifiedRecordsResponse","fetchActionsWithArrayOfRecordsResponse","fetchActionsWithTotalResponse","sanitizeFetchType","fetchType"],"sources":["/node_modules/ra-core/esm/core/dataFetchActions.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport var GET_LIST = 'GET_LIST';\nexport var GET_ONE = 'GET_ONE';\nexport var GET_MANY = 'GET_MANY';\nexport var GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\nexport var CREATE = 'CREATE';\nexport var UPDATE = 'UPDATE';\nexport var UPDATE_MANY = 'UPDATE_MANY';\nexport var DELETE = 'DELETE';\nexport var DELETE_MANY = 'DELETE_MANY';\nexport var fetchActionsWithRecordResponse = ['getOne', 'create', 'update'];\nexport var fetchActionsWithArrayOfIdentifiedRecordsResponse = [\n    'getList',\n    'getMany',\n    'getManyReference',\n];\nexport var fetchActionsWithArrayOfRecordsResponse = __spreadArray(__spreadArray([], fetchActionsWithArrayOfIdentifiedRecordsResponse, true), [\n    'updateMany',\n    'deleteMany',\n], false);\nexport var fetchActionsWithTotalResponse = ['getList', 'getManyReference'];\nexport var sanitizeFetchType = function (fetchType) {\n    switch (fetchType) {\n        case GET_LIST:\n            return 'getList';\n        case GET_ONE:\n            return 'getOne';\n        case GET_MANY:\n            return 'getMany';\n        case GET_MANY_REFERENCE:\n            return 'getManyReference';\n        case CREATE:\n            return 'create';\n        case UPDATE:\n            return 'update';\n        case UPDATE_MANY:\n            return 'updateMany';\n        case DELETE:\n            return 'delete';\n        case DELETE_MANY:\n            return 'deleteMany';\n        default:\n            return fetchType;\n    }\n};\n"],"mappings":"AAAA,IAAIA,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,IAAI,CAACG,MAAM,EAAEG,EAAE,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;IACjF,IAAIE,EAAE,IAAI,EAAEF,CAAC,IAAIJ,IAAI,CAAC,EAAE;MACpB,IAAI,CAACM,EAAE,EAAEA,EAAE,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,EAAE,CAAC,EAAEI,CAAC,CAAC;MACpDE,EAAE,CAACF,CAAC,CAAC,GAAGJ,IAAI,CAACI,CAAC,CAAC;IACnB;EACJ;EACA,OAAOL,EAAE,CAACY,MAAM,CAACL,EAAE,IAAIC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,OAAO,IAAIY,QAAQ,GAAG,UAAU;AAChC,OAAO,IAAIC,OAAO,GAAG,SAAS;AAC9B,OAAO,IAAIC,QAAQ,GAAG,UAAU;AAChC,OAAO,IAAIC,kBAAkB,GAAG,oBAAoB;AACpD,OAAO,IAAIC,MAAM,GAAG,QAAQ;AAC5B,OAAO,IAAIC,MAAM,GAAG,QAAQ;AAC5B,OAAO,IAAIC,WAAW,GAAG,aAAa;AACtC,OAAO,IAAIC,MAAM,GAAG,QAAQ;AAC5B,OAAO,IAAIC,WAAW,GAAG,aAAa;AACtC,OAAO,IAAIC,8BAA8B,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC1E,OAAO,IAAIC,gDAAgD,GAAG,CAC1D,SAAS,EACT,SAAS,EACT,kBAAkB,CACrB;AACD,OAAO,IAAIC,sCAAsC,GAAGzB,aAAa,CAACA,aAAa,CAAC,EAAE,EAAEwB,gDAAgD,EAAE,IAAI,CAAC,EAAE,CACzI,YAAY,EACZ,YAAY,CACf,EAAE,KAAK,CAAC;AACT,OAAO,IAAIE,6BAA6B,GAAG,CAAC,SAAS,EAAE,kBAAkB,CAAC;AAC1E,OAAO,IAAIC,iBAAiB,GAAG,SAAAA,CAAUC,SAAS,EAAE;EAChD,QAAQA,SAAS;IACb,KAAKd,QAAQ;MACT,OAAO,SAAS;IACpB,KAAKC,OAAO;MACR,OAAO,QAAQ;IACnB,KAAKC,QAAQ;MACT,OAAO,SAAS;IACpB,KAAKC,kBAAkB;MACnB,OAAO,kBAAkB;IAC7B,KAAKC,MAAM;MACP,OAAO,QAAQ;IACnB,KAAKC,MAAM;MACP,OAAO,QAAQ;IACnB,KAAKC,WAAW;MACZ,OAAO,YAAY;IACvB,KAAKC,MAAM;MACP,OAAO,QAAQ;IACnB,KAAKC,WAAW;MACZ,OAAO,YAAY;IACvB;MACI,OAAOM,SAAS;EAAC;AAE7B,CAAC"},"metadata":{},"sourceType":"module"}