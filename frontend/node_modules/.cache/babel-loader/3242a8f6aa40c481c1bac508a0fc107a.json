{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport classnames from 'classnames';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nvar useStyles = makeStyles({\n  list: {\n    display: 'flex',\n    listStyleType: 'none'\n  },\n  image: {\n    margin: '0.5rem',\n    maxHeight: '10rem'\n  }\n}, {\n  name: 'RaImageField'\n});\nvar ImageField = function (props) {\n  var className = props.className,\n    classesOverride = props.classes,\n    emptyText = props.emptyText,\n    source = props.source,\n    src = props.src,\n    title = props.title,\n    rest = __rest(props, [\"className\", \"classes\", \"emptyText\", \"source\", \"src\", \"title\"]);\n  var record = useRecordContext(props);\n  var sourceValue = get(record, source);\n  var classes = useStyles(props);\n  if (!sourceValue) {\n    return emptyText ? React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText) : React.createElement(\"div\", __assign({\n      className: className\n    }, sanitizeFieldRestProps(rest)));\n  }\n  if (Array.isArray(sourceValue)) {\n    return React.createElement(\"ul\", __assign({\n      className: classnames(classes.list, className)\n    }, sanitizeFieldRestProps(rest)), sourceValue.map(function (file, index) {\n      var fileTitleValue = get(file, title) || title;\n      var srcValue = get(file, src) || title;\n      return React.createElement(\"li\", {\n        key: index\n      }, React.createElement(\"img\", {\n        alt: fileTitleValue,\n        title: fileTitleValue,\n        src: srcValue,\n        className: classes.image\n      }));\n    }));\n  }\n  var titleValue = get(record, title) || title;\n  return React.createElement(\"div\", __assign({\n    className: className\n  }, sanitizeFieldRestProps(rest)), React.createElement(\"img\", {\n    title: titleValue,\n    alt: titleValue,\n    src: sourceValue,\n    className: classes.image\n  }));\n};\n// What? TypeScript loses the displayName if we don't set it explicitly\nImageField.displayName = 'ImageField';\nImageField.defaultProps = {\n  addLabel: true\n};\nImageField.propTypes = __assign(__assign({}, fieldPropTypes), {\n  src: PropTypes.string,\n  title: PropTypes.string\n});\nexport default ImageField;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","get","makeStyles","Typography","classnames","useRecordContext","sanitizeFieldRestProps","fieldPropTypes","useStyles","list","display","listStyleType","image","margin","maxHeight","name","ImageField","props","className","classesOverride","classes","emptyText","source","src","title","rest","record","sourceValue","createElement","component","variant","Array","isArray","map","file","index","fileTitleValue","srcValue","key","alt","titleValue","displayName","defaultProps","addLabel","propTypes","string"],"sources":["/node_modules/ra-ui-materialui/esm/field/ImageField.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport classnames from 'classnames';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nvar useStyles = makeStyles({\n    list: {\n        display: 'flex',\n        listStyleType: 'none',\n    },\n    image: {\n        margin: '0.5rem',\n        maxHeight: '10rem',\n    },\n}, { name: 'RaImageField' });\nvar ImageField = function (props) {\n    var className = props.className, classesOverride = props.classes, emptyText = props.emptyText, source = props.source, src = props.src, title = props.title, rest = __rest(props, [\"className\", \"classes\", \"emptyText\", \"source\", \"src\", \"title\"]);\n    var record = useRecordContext(props);\n    var sourceValue = get(record, source);\n    var classes = useStyles(props);\n    if (!sourceValue) {\n        return emptyText ? (React.createElement(Typography, __assign({ component: \"span\", variant: \"body2\", className: className }, sanitizeFieldRestProps(rest)), emptyText)) : (React.createElement(\"div\", __assign({ className: className }, sanitizeFieldRestProps(rest))));\n    }\n    if (Array.isArray(sourceValue)) {\n        return (React.createElement(\"ul\", __assign({ className: classnames(classes.list, className) }, sanitizeFieldRestProps(rest)), sourceValue.map(function (file, index) {\n            var fileTitleValue = get(file, title) || title;\n            var srcValue = get(file, src) || title;\n            return (React.createElement(\"li\", { key: index },\n                React.createElement(\"img\", { alt: fileTitleValue, title: fileTitleValue, src: srcValue, className: classes.image })));\n        })));\n    }\n    var titleValue = get(record, title) || title;\n    return (React.createElement(\"div\", __assign({ className: className }, sanitizeFieldRestProps(rest)),\n        React.createElement(\"img\", { title: titleValue, alt: titleValue, src: sourceValue, className: classes.image })));\n};\n// What? TypeScript loses the displayName if we don't set it explicitly\nImageField.displayName = 'ImageField';\nImageField.defaultProps = {\n    addLabel: true,\n};\nImageField.propTypes = __assign(__assign({}, fieldPropTypes), { src: PropTypes.string, title: PropTypes.string });\nexport default ImageField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}