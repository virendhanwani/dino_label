{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { cloneElement, useCallback, useMemo, useRef } from 'react';\nimport { FormHelperText } from '@material-ui/core';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { ValidationError } from 'ra-core';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useArrayInput } from './useArrayInput';\nimport { useSimpleFormIteratorStyles } from './useSimpleFormIteratorStyles';\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\nimport { SimpleFormIteratorItem } from './SimpleFormIteratorItem';\nimport { AddItemButton as DefaultAddItemButton } from './AddItemButton';\nimport { RemoveItemButton as DefaultRemoveItemButton } from './RemoveItemButton';\nimport { ReOrderButtons as DefaultReOrderButtons } from './ReOrderButtons';\nexport var SimpleFormIterator = function (props) {\n  var _a = props.addButton,\n    addButton = _a === void 0 ? React.createElement(DefaultAddItemButton, null) : _a,\n    _b = props.removeButton,\n    removeButton = _b === void 0 ? React.createElement(DefaultRemoveItemButton, null) : _b,\n    _c = props.reOrderButtons,\n    reOrderButtons = _c === void 0 ? React.createElement(DefaultReOrderButtons, null) : _c,\n    basePath = props.basePath,\n    children = props.children,\n    className = props.className,\n    record = props.record,\n    resource = props.resource,\n    source = props.source,\n    disabled = props.disabled,\n    disableAdd = props.disableAdd,\n    disableRemove = props.disableRemove,\n    disableReordering = props.disableReordering,\n    variant = props.variant,\n    margin = props.margin,\n    TransitionProps = props.TransitionProps,\n    defaultValue = props.defaultValue,\n    _d = props.getItemLabel,\n    getItemLabel = _d === void 0 ? DefaultLabelFn : _d;\n  var classes = useSimpleFormIteratorStyles(props);\n  var _e = useArrayInput(props),\n    fields = _e.fields,\n    meta = _e.meta;\n  var error = meta.error,\n    submitFailed = meta.submitFailed;\n  var nodeRef = useRef(null);\n  // We need a unique id for each field for a proper enter/exit animation\n  // so we keep an internal map between the field position and an auto-increment id\n  var nextId = useRef(fields && fields.length ? fields.length : defaultValue ? defaultValue.length : 0);\n  // We check whether we have a defaultValue (which must be an array) before checking\n  // the fields prop which will always be empty for a new record.\n  // Without it, our ids wouldn't match the default value and we would get key warnings\n  // on the CssTransition element inside our render method\n  var ids = useRef(nextId.current > 0 ? Array.from(Array(nextId.current).keys()) : []);\n  var removeField = useCallback(function (index) {\n    ids.current.splice(index, 1);\n    fields.remove(index);\n  }, [fields]);\n  var addField = useCallback(function (item) {\n    if (item === void 0) {\n      item = undefined;\n    }\n    ids.current.push(nextId.current++);\n    fields.push(item);\n  }, [fields]);\n  // add field and call the onClick event of the button passed as addButton prop\n  var handleAddButtonClick = function (originalOnClickHandler) {\n    return function (event) {\n      addField();\n      if (originalOnClickHandler) {\n        originalOnClickHandler(event);\n      }\n    };\n  };\n  var handleReorder = useCallback(function (origin, destination) {\n    var item = ids.current[origin];\n    ids.current[origin] = ids.current[destination];\n    ids.current[destination] = item;\n    fields.move(origin, destination);\n  }, [fields]);\n  var records = get(record, source);\n  var context = useMemo(function () {\n    return {\n      total: fields.length,\n      add: addField,\n      remove: removeField,\n      reOrder: handleReorder\n    };\n  }, [fields.length, addField, removeField, handleReorder]);\n  return fields ? React.createElement(SimpleFormIteratorContext.Provider, {\n    value: context\n  }, React.createElement(\"ul\", {\n    className: classNames(classes.root, className)\n  }, submitFailed && typeof error !== 'object' && error && React.createElement(FormHelperText, {\n    error: true\n  }, React.createElement(ValidationError, {\n    error: error\n  })), React.createElement(TransitionGroup, {\n    component: null\n  }, fields.map(function (member, index) {\n    return React.createElement(CSSTransition, __assign({\n      nodeRef: nodeRef,\n      key: index,\n      timeout: 500,\n      classNames: \"fade\"\n    }, TransitionProps), React.createElement(SimpleFormIteratorItem, {\n      basePath: basePath,\n      classes: classes,\n      disabled: disabled,\n      disableRemove: disableRemove,\n      disableReordering: disableReordering,\n      fields: fields,\n      getItemLabel: getItemLabel,\n      index: index,\n      margin: margin,\n      member: member,\n      meta: meta,\n      onRemoveField: removeField,\n      onReorder: handleReorder,\n      record: records && records[index] || {},\n      removeButton: removeButton,\n      reOrderButtons: reOrderButtons,\n      resource: resource,\n      source: source,\n      variant: variant,\n      ref: nodeRef\n    }, children));\n  })), !disabled && !disableAdd && React.createElement(\"li\", {\n    className: classes.line\n  }, React.createElement(\"span\", {\n    className: classes.action\n  }, cloneElement(addButton, {\n    onClick: handleAddButtonClick(addButton.props.onClick),\n    className: classNames('button-add', \"button-add-\" + source)\n  }))))) : null;\n};\nSimpleFormIterator.defaultProps = {\n  disableAdd: false,\n  disableRemove: false\n};\nSimpleFormIterator.propTypes = {\n  defaultValue: PropTypes.any,\n  addButton: PropTypes.element,\n  removeButton: PropTypes.element,\n  basePath: PropTypes.string,\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  // @ts-ignore\n  fields: PropTypes.object,\n  meta: PropTypes.object,\n  // @ts-ignore\n  record: PropTypes.object,\n  source: PropTypes.string,\n  resource: PropTypes.string,\n  translate: PropTypes.func,\n  disableAdd: PropTypes.bool,\n  disableRemove: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  TransitionProps: PropTypes.shape({})\n};\nvar DefaultLabelFn = function (index) {\n  return index + 1;\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","cloneElement","useCallback","useMemo","useRef","FormHelperText","classNames","get","PropTypes","ValidationError","CSSTransition","TransitionGroup","useArrayInput","useSimpleFormIteratorStyles","SimpleFormIteratorContext","SimpleFormIteratorItem","AddItemButton","DefaultAddItemButton","RemoveItemButton","DefaultRemoveItemButton","ReOrderButtons","DefaultReOrderButtons","SimpleFormIterator","props","_a","addButton","createElement","_b","removeButton","_c","reOrderButtons","basePath","children","className","record","resource","source","disabled","disableAdd","disableRemove","disableReordering","variant","margin","TransitionProps","defaultValue","_d","getItemLabel","DefaultLabelFn","classes","_e","fields","meta","error","submitFailed","nodeRef","nextId","ids","current","Array","from","keys","removeField","index","splice","remove","addField","item","undefined","push","handleAddButtonClick","originalOnClickHandler","event","handleReorder","origin","destination","move","records","context","total","add","reOrder","Provider","value","root","component","map","member","key","timeout","onRemoveField","onReorder","ref","line","action","onClick","defaultProps","propTypes","any","element","string","node","object","translate","func","bool","oneOfType","shape"],"sources":["/node_modules/ra-ui-materialui/esm/input/ArrayInput/SimpleFormIterator.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { cloneElement, useCallback, useMemo, useRef, } from 'react';\nimport { FormHelperText } from '@material-ui/core';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { ValidationError } from 'ra-core';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useArrayInput } from './useArrayInput';\nimport { useSimpleFormIteratorStyles } from './useSimpleFormIteratorStyles';\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\nimport { SimpleFormIteratorItem, } from './SimpleFormIteratorItem';\nimport { AddItemButton as DefaultAddItemButton } from './AddItemButton';\nimport { RemoveItemButton as DefaultRemoveItemButton } from './RemoveItemButton';\nimport { ReOrderButtons as DefaultReOrderButtons } from './ReOrderButtons';\nexport var SimpleFormIterator = function (props) {\n    var _a = props.addButton, addButton = _a === void 0 ? React.createElement(DefaultAddItemButton, null) : _a, _b = props.removeButton, removeButton = _b === void 0 ? React.createElement(DefaultRemoveItemButton, null) : _b, _c = props.reOrderButtons, reOrderButtons = _c === void 0 ? React.createElement(DefaultReOrderButtons, null) : _c, basePath = props.basePath, children = props.children, className = props.className, record = props.record, resource = props.resource, source = props.source, disabled = props.disabled, disableAdd = props.disableAdd, disableRemove = props.disableRemove, disableReordering = props.disableReordering, variant = props.variant, margin = props.margin, TransitionProps = props.TransitionProps, defaultValue = props.defaultValue, _d = props.getItemLabel, getItemLabel = _d === void 0 ? DefaultLabelFn : _d;\n    var classes = useSimpleFormIteratorStyles(props);\n    var _e = useArrayInput(props), fields = _e.fields, meta = _e.meta;\n    var error = meta.error, submitFailed = meta.submitFailed;\n    var nodeRef = useRef(null);\n    // We need a unique id for each field for a proper enter/exit animation\n    // so we keep an internal map between the field position and an auto-increment id\n    var nextId = useRef(fields && fields.length\n        ? fields.length\n        : defaultValue\n            ? defaultValue.length\n            : 0);\n    // We check whether we have a defaultValue (which must be an array) before checking\n    // the fields prop which will always be empty for a new record.\n    // Without it, our ids wouldn't match the default value and we would get key warnings\n    // on the CssTransition element inside our render method\n    var ids = useRef(nextId.current > 0 ? Array.from(Array(nextId.current).keys()) : []);\n    var removeField = useCallback(function (index) {\n        ids.current.splice(index, 1);\n        fields.remove(index);\n    }, [fields]);\n    var addField = useCallback(function (item) {\n        if (item === void 0) { item = undefined; }\n        ids.current.push(nextId.current++);\n        fields.push(item);\n    }, [fields]);\n    // add field and call the onClick event of the button passed as addButton prop\n    var handleAddButtonClick = function (originalOnClickHandler) { return function (event) {\n        addField();\n        if (originalOnClickHandler) {\n            originalOnClickHandler(event);\n        }\n    }; };\n    var handleReorder = useCallback(function (origin, destination) {\n        var item = ids.current[origin];\n        ids.current[origin] = ids.current[destination];\n        ids.current[destination] = item;\n        fields.move(origin, destination);\n    }, [fields]);\n    var records = get(record, source);\n    var context = useMemo(function () { return ({\n        total: fields.length,\n        add: addField,\n        remove: removeField,\n        reOrder: handleReorder,\n    }); }, [fields.length, addField, removeField, handleReorder]);\n    return fields ? (React.createElement(SimpleFormIteratorContext.Provider, { value: context },\n        React.createElement(\"ul\", { className: classNames(classes.root, className) },\n            submitFailed && typeof error !== 'object' && error && (React.createElement(FormHelperText, { error: true },\n                React.createElement(ValidationError, { error: error }))),\n            React.createElement(TransitionGroup, { component: null }, fields.map(function (member, index) { return (React.createElement(CSSTransition, __assign({ nodeRef: nodeRef, key: index, timeout: 500, classNames: \"fade\" }, TransitionProps),\n                React.createElement(SimpleFormIteratorItem, { basePath: basePath, classes: classes, disabled: disabled, disableRemove: disableRemove, disableReordering: disableReordering, fields: fields, getItemLabel: getItemLabel, index: index, margin: margin, member: member, meta: meta, onRemoveField: removeField, onReorder: handleReorder, record: (records && records[index]) || {}, removeButton: removeButton, reOrderButtons: reOrderButtons, resource: resource, source: source, variant: variant, ref: nodeRef }, children))); })),\n            !disabled && !disableAdd && (React.createElement(\"li\", { className: classes.line },\n                React.createElement(\"span\", { className: classes.action }, cloneElement(addButton, {\n                    onClick: handleAddButtonClick(addButton.props.onClick),\n                    className: classNames('button-add', \"button-add-\" + source),\n                }))))))) : null;\n};\nSimpleFormIterator.defaultProps = {\n    disableAdd: false,\n    disableRemove: false,\n};\nSimpleFormIterator.propTypes = {\n    defaultValue: PropTypes.any,\n    addButton: PropTypes.element,\n    removeButton: PropTypes.element,\n    basePath: PropTypes.string,\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    // @ts-ignore\n    fields: PropTypes.object,\n    meta: PropTypes.object,\n    // @ts-ignore\n    record: PropTypes.object,\n    source: PropTypes.string,\n    resource: PropTypes.string,\n    translate: PropTypes.func,\n    disableAdd: PropTypes.bool,\n    disableRemove: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    TransitionProps: PropTypes.shape({}),\n};\nvar DefaultLabelFn = function (index) { return index + 1; };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}