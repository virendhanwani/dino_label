{"ast":null,"code":"import * as React from 'react';\nimport CoreAdminContext from './CoreAdminContext';\nimport CoreAdminUI from './CoreAdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <Core dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Core>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdmin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </CoreAdmin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <CoreAdmin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\n * import { useEffect, useState } from 'react';\n * import {\n *     CoreAdminContext,\n *     CoreAdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdminContext dataProvider={myDataProvider}>\n *         <UI />\n *     </CoreAdminContext>\n * );\n *\n * const UI = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <CoreAdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </CoreAdminUI>\n *     );\n * };\n */\nvar CoreAdmin = function (props) {\n  var appLayout = props.appLayout,\n    authProvider = props.authProvider,\n    catchAll = props.catchAll,\n    children = props.children,\n    customReducers = props.customReducers,\n    _a = props.customRoutes,\n    customRoutes = _a === void 0 ? [] : _a,\n    customSagas = props.customSagas,\n    dashboard = props.dashboard,\n    dataProvider = props.dataProvider,\n    disableTelemetry = props.disableTelemetry,\n    history = props.history,\n    i18nProvider = props.i18nProvider,\n    initialState = props.initialState,\n    layout = props.layout,\n    loading = props.loading,\n    loginPage = props.loginPage,\n    logoutButton = props.logoutButton,\n    menu = props.menu,\n    // deprecated, use a custom layout instead\n    theme = props.theme,\n    _b = props.title,\n    title = _b === void 0 ? 'React Admin' : _b;\n  return React.createElement(CoreAdminContext, {\n    authProvider: authProvider,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    history: history,\n    customReducers: customReducers,\n    customSagas: customSagas,\n    initialState: initialState\n  }, React.createElement(CoreAdminUI, {\n    layout: appLayout || layout,\n    customRoutes: customRoutes,\n    dashboard: dashboard,\n    disableTelemetry: disableTelemetry,\n    menu: menu,\n    catchAll: catchAll,\n    theme: theme,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    logout: authProvider ? logoutButton : undefined\n  }, children));\n};\nexport default CoreAdmin;","map":{"version":3,"names":["React","CoreAdminContext","CoreAdminUI","CoreAdmin","props","appLayout","authProvider","catchAll","children","customReducers","_a","customRoutes","customSagas","dashboard","dataProvider","disableTelemetry","history","i18nProvider","initialState","layout","loading","loginPage","logoutButton","menu","theme","_b","title","createElement","logout","undefined"],"sources":["/node_modules/ra-core/esm/core/CoreAdmin.js"],"sourcesContent":["import * as React from 'react';\nimport CoreAdminContext from './CoreAdminContext';\nimport CoreAdminUI from './CoreAdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <Core dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Core>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdmin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </CoreAdmin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <CoreAdmin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\n * import { useEffect, useState } from 'react';\n * import {\n *     CoreAdminContext,\n *     CoreAdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdminContext dataProvider={myDataProvider}>\n *         <UI />\n *     </CoreAdminContext>\n * );\n *\n * const UI = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <CoreAdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </CoreAdminUI>\n *     );\n * };\n */\nvar CoreAdmin = function (props) {\n    var appLayout = props.appLayout, authProvider = props.authProvider, catchAll = props.catchAll, children = props.children, customReducers = props.customReducers, _a = props.customRoutes, customRoutes = _a === void 0 ? [] : _a, customSagas = props.customSagas, dashboard = props.dashboard, dataProvider = props.dataProvider, disableTelemetry = props.disableTelemetry, history = props.history, i18nProvider = props.i18nProvider, initialState = props.initialState, layout = props.layout, loading = props.loading, loginPage = props.loginPage, logoutButton = props.logoutButton, menu = props.menu, // deprecated, use a custom layout instead\n    theme = props.theme, _b = props.title, title = _b === void 0 ? 'React Admin' : _b;\n    return (React.createElement(CoreAdminContext, { authProvider: authProvider, dataProvider: dataProvider, i18nProvider: i18nProvider, history: history, customReducers: customReducers, customSagas: customSagas, initialState: initialState },\n        React.createElement(CoreAdminUI, { layout: appLayout || layout, customRoutes: customRoutes, dashboard: dashboard, disableTelemetry: disableTelemetry, menu: menu, catchAll: catchAll, theme: theme, title: title, loading: loading, loginPage: loginPage, logout: authProvider ? logoutButton : undefined }, children)));\n};\nexport default CoreAdmin;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC7B,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAAEC,YAAY,GAAGF,KAAK,CAACE,YAAY;IAAEC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IAAEC,QAAQ,GAAGJ,KAAK,CAACI,QAAQ;IAAEC,cAAc,GAAGL,KAAK,CAACK,cAAc;IAAEC,EAAE,GAAGN,KAAK,CAACO,YAAY;IAAEA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAAEE,WAAW,GAAGR,KAAK,CAACQ,WAAW;IAAEC,SAAS,GAAGT,KAAK,CAACS,SAAS;IAAEC,YAAY,GAAGV,KAAK,CAACU,YAAY;IAAEC,gBAAgB,GAAGX,KAAK,CAACW,gBAAgB;IAAEC,OAAO,GAAGZ,KAAK,CAACY,OAAO;IAAEC,YAAY,GAAGb,KAAK,CAACa,YAAY;IAAEC,YAAY,GAAGd,KAAK,CAACc,YAAY;IAAEC,MAAM,GAAGf,KAAK,CAACe,MAAM;IAAEC,OAAO,GAAGhB,KAAK,CAACgB,OAAO;IAAEC,SAAS,GAAGjB,KAAK,CAACiB,SAAS;IAAEC,YAAY,GAAGlB,KAAK,CAACkB,YAAY;IAAEC,IAAI,GAAGnB,KAAK,CAACmB,IAAI;IAAE;IAChlBC,KAAK,GAAGpB,KAAK,CAACoB,KAAK;IAAEC,EAAE,GAAGrB,KAAK,CAACsB,KAAK;IAAEA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,aAAa,GAAGA,EAAE;EACjF,OAAQzB,KAAK,CAAC2B,aAAa,CAAC1B,gBAAgB,EAAE;IAAEK,YAAY,EAAEA,YAAY;IAAEQ,YAAY,EAAEA,YAAY;IAAEG,YAAY,EAAEA,YAAY;IAAED,OAAO,EAAEA,OAAO;IAAEP,cAAc,EAAEA,cAAc;IAAEG,WAAW,EAAEA,WAAW;IAAEM,YAAY,EAAEA;EAAa,CAAC,EACxOlB,KAAK,CAAC2B,aAAa,CAACzB,WAAW,EAAE;IAAEiB,MAAM,EAAEd,SAAS,IAAIc,MAAM;IAAER,YAAY,EAAEA,YAAY;IAAEE,SAAS,EAAEA,SAAS;IAAEE,gBAAgB,EAAEA,gBAAgB;IAAEQ,IAAI,EAAEA,IAAI;IAAEhB,QAAQ,EAAEA,QAAQ;IAAEiB,KAAK,EAAEA,KAAK;IAAEE,KAAK,EAAEA,KAAK;IAAEN,OAAO,EAAEA,OAAO;IAAEC,SAAS,EAAEA,SAAS;IAAEO,MAAM,EAAEtB,YAAY,GAAGgB,YAAY,GAAGO;EAAU,CAAC,EAAErB,QAAQ,CAAC,CAAC;AAC/T,CAAC;AACD,eAAeL,SAAS"},"metadata":{},"sourceType":"module"}