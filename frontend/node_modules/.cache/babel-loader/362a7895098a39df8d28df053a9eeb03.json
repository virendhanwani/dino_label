{"ast":null,"code":"export var COMMON_MIME_TYPES = new Map([['avi', 'video/avi'], ['gif', 'image/gif'], ['ico', 'image/x-icon'], ['jpeg', 'image/jpeg'], ['jpg', 'image/jpeg'], ['mkv', 'video/x-matroska'], ['mov', 'video/quicktime'], ['mp4', 'video/mp4'], ['pdf', 'application/pdf'], ['png', 'image/png'], ['zip', 'application/zip'], ['doc', 'application/msword'], ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']]);\nexport function toFileWithPath(file, path) {\n  var f = withMimeType(file);\n  if (typeof f.path !== 'string') {\n    // on electron, path is already set to the absolute path\n    var webkitRelativePath = file.webkitRelativePath;\n    Object.defineProperty(f, 'path', {\n      value: typeof path === 'string' ? path\n      // If <input webkitdirectory> is set,\n      // the File will have a {webkitRelativePath} property\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\n      : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,\n      writable: false,\n      configurable: false,\n      enumerable: true\n    });\n  }\n  return f;\n}\nfunction withMimeType(file) {\n  var name = file.name;\n  var hasExtension = name && name.lastIndexOf('.') !== -1;\n  if (hasExtension && !file.type) {\n    var ext = name.split('.').pop().toLowerCase();\n    var type = COMMON_MIME_TYPES.get(ext);\n    if (type) {\n      Object.defineProperty(file, 'type', {\n        value: type,\n        writable: false,\n        configurable: false,\n        enumerable: true\n      });\n    }\n  }\n  return file;\n}","map":{"version":3,"sources":["../../src/file.ts"],"names":[],"mappings":"AAAA,OAAO,IAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC,CACrC,CAAC,KAAK,EAAE,WAAW,CAAC,EACpB,CAAC,KAAK,EAAE,WAAW,CAAC,EACpB,CAAC,KAAK,EAAE,cAAc,CAAC,EACvB,CAAC,MAAM,EAAE,YAAY,CAAC,EACtB,CAAC,KAAK,EAAE,YAAY,CAAC,EACrB,CAAC,KAAK,EAAE,kBAAkB,CAAC,EAC3B,CAAC,KAAK,EAAE,iBAAiB,CAAC,EAC1B,CAAC,KAAK,EAAE,WAAW,CAAC,EACpB,CAAC,KAAK,EAAE,iBAAiB,CAAC,EAC1B,CAAC,KAAK,EAAE,WAAW,CAAC,EACpB,CAAC,KAAK,EAAE,iBAAiB,CAAC,EAC1B,CAAC,KAAK,EAAE,oBAAoB,CAAC,EAC7B,CAAC,MAAM,EAAE,yEAAyE,CAAC,CACtF,CAAC;AAGF,OAAM,SAAU,cAAc,CAAC,IAAkB,EAAE,IAAa,EAAA;EAC5D,IAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC;EAC5B,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;IAAE;IACvB,IAAA,kBAAkB,GAAI,IAA0B,CAAA,kBAA9B;IACzB,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,MAAM,EAAE;MAC7B,KAAK,EAAE,OAAO,IAAI,KAAK,QAAQ,GACzB;MACF;MACA;MACA;MAAA,EACE,OAAO,kBAAkB,KAAK,QAAQ,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,GACnE,kBAAkB,GAClB,IAAI,CAAC,IAAI;MACnB,QAAQ,EAAE,KAAK;MACf,YAAY,EAAE,KAAK;MACnB,UAAU,EAAE;KACf,CAAC;EACL;EAED,OAAO,CAAC;AACZ;AAeA,SAAS,YAAY,CAAC,IAAkB,EAAA;EAC7B,IAAA,IAAI,GAAI,IAAI,CAAA,IAAR;EACX,IAAM,YAAY,GAAG,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EAEzD,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAC5B,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CACtB,GAAG,EAAG,CAAC,WAAW,EAAE;IACzB,IAAM,IAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC;IACvC,IAAI,IAAI,EAAE;MACN,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;QAChC,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,KAAK;QACf,YAAY,EAAE,KAAK;QACnB,UAAU,EAAE;OACf,CAAC;IACL;EACJ;EAED,OAAO,IAAI;AACf","sourceRoot":"","sourcesContent":["export var COMMON_MIME_TYPES = new Map([\n    ['avi', 'video/avi'],\n    ['gif', 'image/gif'],\n    ['ico', 'image/x-icon'],\n    ['jpeg', 'image/jpeg'],\n    ['jpg', 'image/jpeg'],\n    ['mkv', 'video/x-matroska'],\n    ['mov', 'video/quicktime'],\n    ['mp4', 'video/mp4'],\n    ['pdf', 'application/pdf'],\n    ['png', 'image/png'],\n    ['zip', 'application/zip'],\n    ['doc', 'application/msword'],\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']\n]);\nexport function toFileWithPath(file, path) {\n    var f = withMimeType(file);\n    if (typeof f.path !== 'string') { // on electron, path is already set to the absolute path\n        var webkitRelativePath = file.webkitRelativePath;\n        Object.defineProperty(f, 'path', {\n            value: typeof path === 'string'\n                ? path\n                // If <input webkitdirectory> is set,\n                // the File will have a {webkitRelativePath} property\n                // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\n                : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0\n                    ? webkitRelativePath\n                    : file.name,\n            writable: false,\n            configurable: false,\n            enumerable: true\n        });\n    }\n    return f;\n}\nfunction withMimeType(file) {\n    var name = file.name;\n    var hasExtension = name && name.lastIndexOf('.') !== -1;\n    if (hasExtension && !file.type) {\n        var ext = name.split('.')\n            .pop().toLowerCase();\n        var type = COMMON_MIME_TYPES.get(ext);\n        if (type) {\n            Object.defineProperty(file, 'type', {\n                value: type,\n                writable: false,\n                configurable: false,\n                enumerable: true\n            });\n        }\n    }\n    return file;\n}\n//# sourceMappingURL=file.js.map"]},"metadata":{},"sourceType":"module"}