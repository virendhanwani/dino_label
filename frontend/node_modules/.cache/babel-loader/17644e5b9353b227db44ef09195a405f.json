{"ast":null,"code":"import inferElementFromValues from './inferElementFromValues';\nimport getValuesFromRecords from './getValuesFromRecords';\n/**\n * Get a list of React-admin field components from a list of records\n *\n * @example\n * const records = [\n *     {\n *         \"id\": 1,\n *         \"title\": \"Lorem Ipsum\",\n *         \"views\": 254,\n *         \"user_id\": 123,\n *     },\n *     {\n *         \"id\": 2,\n *         \"title\": \"Sic Dolor amet\",\n *         \"user_id\": 456,\n *     },\n * ];\n * const types = {\n *     id: NumberField,\n *     string: TextField,\n *     number: NumberField,\n *     reference: ReferenceField\n * };\n * const components = getElementsFromRecords(records, types);\n * // [\n * //    <NumberField source=\"id\" />,\n * //    <TextField source=\"title\" />,\n * //    <NumberField source=\"views\" />,\n * //    <ReferenceField source=\"user_id\" reference=\"users\"><NumberField source=\"id\" /></ReferenceField>,\n * // ];\n */\nexport default (function (records, types) {\n  var fieldValues = getValuesFromRecords(records);\n  return Object.keys(fieldValues).reduce(function (fields, fieldName) {\n    return fields.concat(inferElementFromValues(fieldName, fieldValues[fieldName], types));\n  }, []).filter(function (inferredElement) {\n    return inferredElement.isDefined();\n  });\n});","map":{"version":3,"names":["inferElementFromValues","getValuesFromRecords","records","types","fieldValues","Object","keys","reduce","fields","fieldName","concat","filter","inferredElement","isDefined"],"sources":["/node_modules/ra-core/esm/inference/getElementsFromRecords.js"],"sourcesContent":["import inferElementFromValues from './inferElementFromValues';\nimport getValuesFromRecords from './getValuesFromRecords';\n/**\n * Get a list of React-admin field components from a list of records\n *\n * @example\n * const records = [\n *     {\n *         \"id\": 1,\n *         \"title\": \"Lorem Ipsum\",\n *         \"views\": 254,\n *         \"user_id\": 123,\n *     },\n *     {\n *         \"id\": 2,\n *         \"title\": \"Sic Dolor amet\",\n *         \"user_id\": 456,\n *     },\n * ];\n * const types = {\n *     id: NumberField,\n *     string: TextField,\n *     number: NumberField,\n *     reference: ReferenceField\n * };\n * const components = getElementsFromRecords(records, types);\n * // [\n * //    <NumberField source=\"id\" />,\n * //    <TextField source=\"title\" />,\n * //    <NumberField source=\"views\" />,\n * //    <ReferenceField source=\"user_id\" reference=\"users\"><NumberField source=\"id\" /></ReferenceField>,\n * // ];\n */\nexport default (function (records, types) {\n    var fieldValues = getValuesFromRecords(records);\n    return Object.keys(fieldValues)\n        .reduce(function (fields, fieldName) {\n        return fields.concat(inferElementFromValues(fieldName, fieldValues[fieldName], types));\n    }, [])\n        .filter(function (inferredElement) { return inferredElement.isDefined(); });\n});\n"],"mappings":"AAAA,OAAOA,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUC,OAAO,EAAEC,KAAK,EAAE;EACtC,IAAIC,WAAW,GAAGH,oBAAoB,CAACC,OAAO,CAAC;EAC/C,OAAOG,MAAM,CAACC,IAAI,CAACF,WAAW,CAAC,CAC1BG,MAAM,CAAC,UAAUC,MAAM,EAAEC,SAAS,EAAE;IACrC,OAAOD,MAAM,CAACE,MAAM,CAACV,sBAAsB,CAACS,SAAS,EAAEL,WAAW,CAACK,SAAS,CAAC,EAAEN,KAAK,CAAC,CAAC;EAC1F,CAAC,EAAE,EAAE,CAAC,CACDQ,MAAM,CAAC,UAAUC,eAAe,EAAE;IAAE,OAAOA,eAAe,CAACC,SAAS,EAAE;EAAE,CAAC,CAAC;AACnF,CAAC"},"metadata":{},"sourceType":"module"}