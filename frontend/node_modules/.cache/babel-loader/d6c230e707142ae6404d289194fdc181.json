{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useCallback, useMemo, Children } from 'react';\nimport { useSafeSetState } from '../util/hooks';\nimport { TranslationContext } from './TranslationContext';\n/**\n * Creates a translation context, available to its children\n *\n * @example\n *     const MyApp = () => (\n *         <Provider store={store}>\n *             <TranslationProvider i18nProvider={i18nProvider}>\n *                 <!-- Child components go here -->\n *             </TranslationProvider>\n *         </Provider>\n *     );\n */\nvar TranslationProvider = function (props) {\n  var i18nProvider = props.i18nProvider,\n    children = props.children;\n  var _a = useSafeSetState({\n      locale: i18nProvider ? i18nProvider.getLocale() : 'en',\n      i18nProvider: i18nProvider\n    }),\n    state = _a[0],\n    setState = _a[1];\n  var setLocale = useCallback(function (newLocale) {\n    return setState(function (state) {\n      return __assign(__assign({}, state), {\n        locale: newLocale\n      });\n    });\n  }, [setState]);\n  // Allow locale modification by including setLocale in the context\n  // This can't be done in the initial state because setState doesn't exist yet\n  var value = useMemo(function () {\n    return __assign(__assign({}, state), {\n      setLocale: setLocale\n    });\n  }, [setLocale, state]);\n  return React.createElement(TranslationContext.Provider, {\n    value: value\n  }, Children.only(children));\n};\nexport default TranslationProvider;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useCallback","useMemo","Children","useSafeSetState","TranslationContext","TranslationProvider","props","i18nProvider","children","_a","locale","getLocale","state","setState","setLocale","newLocale","value","createElement","Provider","only"],"sources":["/node_modules/ra-core/esm/i18n/TranslationProvider.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useCallback, useMemo, Children } from 'react';\nimport { useSafeSetState } from '../util/hooks';\nimport { TranslationContext } from './TranslationContext';\n/**\n * Creates a translation context, available to its children\n *\n * @example\n *     const MyApp = () => (\n *         <Provider store={store}>\n *             <TranslationProvider i18nProvider={i18nProvider}>\n *                 <!-- Child components go here -->\n *             </TranslationProvider>\n *         </Provider>\n *     );\n */\nvar TranslationProvider = function (props) {\n    var i18nProvider = props.i18nProvider, children = props.children;\n    var _a = useSafeSetState({\n        locale: i18nProvider ? i18nProvider.getLocale() : 'en',\n        i18nProvider: i18nProvider,\n    }), state = _a[0], setState = _a[1];\n    var setLocale = useCallback(function (newLocale) {\n        return setState(function (state) { return (__assign(__assign({}, state), { locale: newLocale })); });\n    }, [setState]);\n    // Allow locale modification by including setLocale in the context\n    // This can't be done in the initial state because setState doesn't exist yet\n    var value = useMemo(function () { return (__assign(__assign({}, state), { setLocale: setLocale })); }, [setLocale, state]);\n    return (React.createElement(TranslationContext.Provider, { value: value }, Children.only(children)));\n};\nexport default TranslationProvider;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAOO,KAAK,IAAIC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACvC,IAAIC,YAAY,GAAGD,KAAK,CAACC,YAAY;IAAEC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;EAChE,IAAIC,EAAE,GAAGN,eAAe,CAAC;MACrBO,MAAM,EAAEH,YAAY,GAAGA,YAAY,CAACI,SAAS,EAAE,GAAG,IAAI;MACtDJ,YAAY,EAAEA;IAClB,CAAC,CAAC;IAAEK,KAAK,GAAGH,EAAE,CAAC,CAAC,CAAC;IAAEI,QAAQ,GAAGJ,EAAE,CAAC,CAAC,CAAC;EACnC,IAAIK,SAAS,GAAGd,WAAW,CAAC,UAAUe,SAAS,EAAE;IAC7C,OAAOF,QAAQ,CAAC,UAAUD,KAAK,EAAE;MAAE,OAAQ3B,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2B,KAAK,CAAC,EAAE;QAAEF,MAAM,EAAEK;MAAU,CAAC,CAAC;IAAG,CAAC,CAAC;EACxG,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EACd;EACA;EACA,IAAIG,KAAK,GAAGf,OAAO,CAAC,YAAY;IAAE,OAAQhB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2B,KAAK,CAAC,EAAE;MAAEE,SAAS,EAAEA;IAAU,CAAC,CAAC;EAAG,CAAC,EAAE,CAACA,SAAS,EAAEF,KAAK,CAAC,CAAC;EAC1H,OAAQb,KAAK,CAACkB,aAAa,CAACb,kBAAkB,CAACc,QAAQ,EAAE;IAAEF,KAAK,EAAEA;EAAM,CAAC,EAAEd,QAAQ,CAACiB,IAAI,CAACX,QAAQ,CAAC,CAAC;AACvG,CAAC;AACD,eAAeH,mBAAmB"},"metadata":{},"sourceType":"module"}