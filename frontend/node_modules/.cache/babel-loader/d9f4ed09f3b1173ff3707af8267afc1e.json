{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n// List of properties we expect in the options\nvar OptionsProperties = ['action', 'fetch', 'meta', 'onFailure', 'onSuccess', 'undoable', 'mutationMode', 'enabled'];\nvar isDataProviderOptions = function (value) {\n  if (typeof value === 'undefined') return [];\n  var options = value;\n  return Object.keys(options).some(function (key) {\n    return OptionsProperties.includes(key);\n  });\n};\n// As all dataProvider methods do not have the same signature, we must differentiate\n// standard methods which have the (resource, params, options) signature\n// from the custom ones\nexport var getDataProviderCallArguments = function (args) {\n  var lastArg = args[args.length - 1];\n  var allArguments = __spreadArray([], args, true);\n  var resource;\n  var payload;\n  var options;\n  if (isDataProviderOptions(lastArg)) {\n    options = lastArg;\n    allArguments = allArguments.slice(0, args.length - 1);\n  }\n  if (typeof allArguments[0] === 'string') {\n    resource = allArguments[0];\n    payload = allArguments[1];\n  }\n  return {\n    resource: resource,\n    payload: payload,\n    allArguments: allArguments,\n    options: options\n  };\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","OptionsProperties","isDataProviderOptions","value","options","Object","keys","some","key","includes","getDataProviderCallArguments","args","lastArg","allArguments","resource","payload"],"sources":["/node_modules/ra-core/esm/dataProvider/getDataProviderCallArguments.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// List of properties we expect in the options\nvar OptionsProperties = [\n    'action',\n    'fetch',\n    'meta',\n    'onFailure',\n    'onSuccess',\n    'undoable',\n    'mutationMode',\n    'enabled',\n];\nvar isDataProviderOptions = function (value) {\n    if (typeof value === 'undefined')\n        return [];\n    var options = value;\n    return Object.keys(options).some(function (key) { return OptionsProperties.includes(key); });\n};\n// As all dataProvider methods do not have the same signature, we must differentiate\n// standard methods which have the (resource, params, options) signature\n// from the custom ones\nexport var getDataProviderCallArguments = function (args) {\n    var lastArg = args[args.length - 1];\n    var allArguments = __spreadArray([], args, true);\n    var resource;\n    var payload;\n    var options;\n    if (isDataProviderOptions(lastArg)) {\n        options = lastArg;\n        allArguments = allArguments.slice(0, args.length - 1);\n    }\n    if (typeof allArguments[0] === 'string') {\n        resource = allArguments[0];\n        payload = allArguments[1];\n    }\n    return {\n        resource: resource,\n        payload: payload,\n        allArguments: allArguments,\n        options: options,\n    };\n};\n"],"mappings":"AAAA,IAAIA,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,IAAI,CAACG,MAAM,EAAEG,EAAE,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;IACjF,IAAIE,EAAE,IAAI,EAAEF,CAAC,IAAIJ,IAAI,CAAC,EAAE;MACpB,IAAI,CAACM,EAAE,EAAEA,EAAE,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,EAAE,CAAC,EAAEI,CAAC,CAAC;MACpDE,EAAE,CAACF,CAAC,CAAC,GAAGJ,IAAI,CAACI,CAAC,CAAC;IACnB;EACJ;EACA,OAAOL,EAAE,CAACY,MAAM,CAACL,EAAE,IAAIC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD;AACA,IAAIY,iBAAiB,GAAG,CACpB,QAAQ,EACR,OAAO,EACP,MAAM,EACN,WAAW,EACX,WAAW,EACX,UAAU,EACV,cAAc,EACd,SAAS,CACZ;AACD,IAAIC,qBAAqB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACzC,IAAI,OAAOA,KAAK,KAAK,WAAW,EAC5B,OAAO,EAAE;EACb,IAAIC,OAAO,GAAGD,KAAK;EACnB,OAAOE,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC,CAACG,IAAI,CAAC,UAAUC,GAAG,EAAE;IAAE,OAAOP,iBAAiB,CAACQ,QAAQ,CAACD,GAAG,CAAC;EAAE,CAAC,CAAC;AAChG,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIE,4BAA4B,GAAG,SAAAA,CAAUC,IAAI,EAAE;EACtD,IAAIC,OAAO,GAAGD,IAAI,CAACA,IAAI,CAACnB,MAAM,GAAG,CAAC,CAAC;EACnC,IAAIqB,YAAY,GAAG1B,aAAa,CAAC,EAAE,EAAEwB,IAAI,EAAE,IAAI,CAAC;EAChD,IAAIG,QAAQ;EACZ,IAAIC,OAAO;EACX,IAAIX,OAAO;EACX,IAAIF,qBAAqB,CAACU,OAAO,CAAC,EAAE;IAChCR,OAAO,GAAGQ,OAAO;IACjBC,YAAY,GAAGA,YAAY,CAACf,KAAK,CAAC,CAAC,EAAEa,IAAI,CAACnB,MAAM,GAAG,CAAC,CAAC;EACzD;EACA,IAAI,OAAOqB,YAAY,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IACrCC,QAAQ,GAAGD,YAAY,CAAC,CAAC,CAAC;IAC1BE,OAAO,GAAGF,YAAY,CAAC,CAAC,CAAC;EAC7B;EACA,OAAO;IACHC,QAAQ,EAAEA,QAAQ;IAClBC,OAAO,EAAEA,OAAO;IAChBF,YAAY,EAAEA,YAAY;IAC1BT,OAAO,EAAEA;EACb,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}