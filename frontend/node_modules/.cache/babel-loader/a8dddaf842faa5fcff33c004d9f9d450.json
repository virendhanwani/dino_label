{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useReferenceArrayInputController } from './useReferenceArrayInputController';\n/**\n * An Input component for fields containing a list of references to another resource.\n * Useful for 'hasMany' relationship.\n *\n * @example\n * The post object has many tags, so the post resource looks like:\n * {\n *    id: 1234,\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\n * }\n *\n * ReferenceArrayInput component fetches the current resources (using\n * `dataProvider.getMany()`) as well as possible resources (using\n * `dataProvider.getList()` REST method) in the reference endpoint. It then\n * delegates rendering to a subcomponent, to which it passes the possible\n * choices as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<SelectArrayInput>`\n * or <CheckboxGroupInput>.\n *\n * @example\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\n *                 <SelectArrayInput optionText=\"name\" />\n *             </ReferenceArrayInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      perPage={100}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      sort={{ field: 'name', order: 'ASC' }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filter={{ is_public: true }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * The enclosed component may filter results. ReferenceArrayInput passes a\n * `setFilter` function as prop to its child component. It uses the value to\n * create a filter for the query - by default { q: [searchText] }. You can\n * customize the mapping searchText => searchQuery by setting a custom\n * `filterToQuery` function prop:\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filterToQuery={searchText => ({ name: searchText })}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n */\nvar ReferenceArrayInputController = function (_a) {\n  var basePath = _a.basePath,\n    children = _a.children,\n    _b = _a.filter,\n    filter = _b === void 0 ? {} : _b,\n    input = _a.input,\n    _c = _a.filterToQuery,\n    filterToQuery = _c === void 0 ? function (searchText) {\n      return {\n        q: searchText\n      };\n    } : _c,\n    _d = _a.perPage,\n    perPage = _d === void 0 ? 25 : _d,\n    reference = _a.reference,\n    resource = _a.resource,\n    _e = _a.sort,\n    sort = _e === void 0 ? {\n      field: 'id',\n      order: 'DESC'\n    } : _e,\n    source = _a.source,\n    enableGetChoices = _a.enableGetChoices;\n  var _f = useReferenceArrayInputController({\n      basePath: basePath,\n      filter: filter,\n      filterToQuery: filterToQuery,\n      input: input,\n      perPage: perPage,\n      sort: sort,\n      reference: reference,\n      resource: resource,\n      source: source,\n      enableGetChoices: enableGetChoices\n    }),\n    setFilter = _f.setFilter,\n    controllerProps = __rest(_f, [\"setFilter\"]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var debouncedSetFilter = useCallback(debounce(setFilter, 500), [setFilter]);\n  return children(__assign(__assign({}, controllerProps), {\n    setFilter: debouncedSetFilter\n  }));\n};\nexport default ReferenceArrayInputController;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useCallback","debounce","useReferenceArrayInputController","ReferenceArrayInputController","_a","basePath","children","_b","filter","input","_c","filterToQuery","searchText","q","_d","perPage","reference","resource","_e","sort","field","order","source","enableGetChoices","_f","setFilter","controllerProps","debouncedSetFilter"],"sources":["/node_modules/ra-core/esm/controller/input/ReferenceArrayInputController.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useReferenceArrayInputController } from './useReferenceArrayInputController';\n/**\n * An Input component for fields containing a list of references to another resource.\n * Useful for 'hasMany' relationship.\n *\n * @example\n * The post object has many tags, so the post resource looks like:\n * {\n *    id: 1234,\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\n * }\n *\n * ReferenceArrayInput component fetches the current resources (using\n * `dataProvider.getMany()`) as well as possible resources (using\n * `dataProvider.getList()` REST method) in the reference endpoint. It then\n * delegates rendering to a subcomponent, to which it passes the possible\n * choices as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<SelectArrayInput>`\n * or <CheckboxGroupInput>.\n *\n * @example\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\n *                 <SelectArrayInput optionText=\"name\" />\n *             </ReferenceArrayInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      perPage={100}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      sort={{ field: 'name', order: 'ASC' }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filter={{ is_public: true }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * The enclosed component may filter results. ReferenceArrayInput passes a\n * `setFilter` function as prop to its child component. It uses the value to\n * create a filter for the query - by default { q: [searchText] }. You can\n * customize the mapping searchText => searchQuery by setting a custom\n * `filterToQuery` function prop:\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filterToQuery={searchText => ({ name: searchText })}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n */\nvar ReferenceArrayInputController = function (_a) {\n    var basePath = _a.basePath, children = _a.children, _b = _a.filter, filter = _b === void 0 ? {} : _b, input = _a.input, _c = _a.filterToQuery, filterToQuery = _c === void 0 ? function (searchText) { return ({ q: searchText }); } : _c, _d = _a.perPage, perPage = _d === void 0 ? 25 : _d, reference = _a.reference, resource = _a.resource, _e = _a.sort, sort = _e === void 0 ? { field: 'id', order: 'DESC' } : _e, source = _a.source, enableGetChoices = _a.enableGetChoices;\n    var _f = useReferenceArrayInputController({\n        basePath: basePath,\n        filter: filter,\n        filterToQuery: filterToQuery,\n        input: input,\n        perPage: perPage,\n        sort: sort,\n        reference: reference,\n        resource: resource,\n        source: source,\n        enableGetChoices: enableGetChoices,\n    }), setFilter = _f.setFilter, controllerProps = __rest(_f, [\"setFilter\"]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var debouncedSetFilter = useCallback(debounce(setFilter, 500), [\n        setFilter,\n    ]);\n    return children(__assign(__assign({}, controllerProps), { setFilter: debouncedSetFilter }));\n};\nexport default ReferenceArrayInputController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}