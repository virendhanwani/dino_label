{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { Children, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormWithRedirect } from 'ra-core';\nimport get from 'lodash/get';\nimport { useRouteMatch, useLocation } from 'react-router';\nimport { TabbedFormView } from './TabbedFormView';\n/**\n * Form layout where inputs are divided by tab, one input per line.\n *\n * Pass FormTab components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import {\n *     Edit,\n *     TabbedForm,\n *     FormTab,\n *     Datagrid,\n *     TextField,\n *     DateField,\n *     TextInput,\n *     ReferenceManyField,\n *     NumberInput,\n *     DateInput,\n *     BooleanInput,\n *     EditButton\n * } from 'react-admin';\n *\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <TabbedForm>\n *             <FormTab label=\"summary\">\n *                 <TextInput disabled label=\"Id\" source=\"id\" />\n *                 <TextInput source=\"title\" validate={required()} />\n *                 <TextInput multiline source=\"teaser\" validate={required()} />\n *             </FormTab>\n *             <FormTab label=\"body\">\n *                 <RichTextInput source=\"body\" validate={required()} addLabel={false} />\n *             </FormTab>\n *             <FormTab label=\"Miscellaneous\">\n *                 <TextInput label=\"Password (if protected post)\" source=\"password\" type=\"password\" />\n *                 <DateInput label=\"Publication date\" source=\"published_at\" />\n *                 <NumberInput source=\"average_note\" validate={[ number(), minValue(0) ]} />\n *                 <BooleanInput label=\"Allow comments?\" source=\"commentable\" defaultValue />\n *                 <TextInput disabled label=\"Nb views\" source=\"views\" />\n *             </FormTab>\n *             <FormTab label=\"comments\">\n *                 <ReferenceManyField reference=\"comments\" target=\"post_id\" addLabel={false}>\n *                     <Datagrid>\n *                         <TextField source=\"body\" />\n *                         <DateField source=\"created_at\" />\n *                         <EditButton />\n *                     </Datagrid>\n *                 </ReferenceManyField>\n *             </FormTab>\n *         </TabbedForm>\n *     </Edit>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} FormTab elements\n * @prop {Object} initialValues\n * @prop {Function} validate\n * @prop {boolean} submitOnEnter\n * @prop {string} redirect\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n * @prop {string} variant Apply variant to all inputs. Possible values are 'standard', 'outlined', and 'filled' (default)\n * @prop {string} margin Apply variant to all inputs. Possible values are 'none', 'normal', and 'dense' (default)\n * @prop {boolean} sanitizeEmptyValues Whether or not deleted record attributes should be recreated with a `null` value (default: true)\n *\n * @param {Props} props\n */\nexport var TabbedForm = function (props) {\n  var match = useRouteMatch();\n  var location = useLocation();\n  var formRootPathname = match ? match.url : location.pathname;\n  return React.createElement(FormWithRedirect, __assign({}, props, {\n    formRootPathname: formRootPathname,\n    render: function (formProps) {\n      return React.createElement(TabbedFormView, __assign({}, formProps));\n    }\n  }));\n};\nTabbedForm.propTypes = {\n  children: PropTypes.node,\n  initialValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  // @ts-ignore\n  record: PropTypes.object,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  save: PropTypes.func,\n  saving: PropTypes.bool,\n  submitOnEnter: PropTypes.bool,\n  undoable: PropTypes.bool,\n  validate: PropTypes.func,\n  sanitizeEmptyValues: PropTypes.bool\n};\nexport var findTabsWithErrors = function (children, errors) {\n  console.warn('Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/CreateEdit.html#grouping-inputs');\n  return Children.toArray(children).reduce(function (acc, child) {\n    if (!isValidElement(child)) {\n      return acc;\n    }\n    var inputs = Children.toArray(child.props.children);\n    if (inputs.some(function (input) {\n      return isValidElement(input) && get(errors, input.props.source);\n    })) {\n      return __spreadArray(__spreadArray([], acc, true), [child.props.label], false);\n    }\n    return acc;\n  }, []);\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","pack","l","ar","Array","slice","concat","React","Children","isValidElement","PropTypes","FormWithRedirect","get","useRouteMatch","useLocation","TabbedFormView","TabbedForm","props","match","location","formRootPathname","url","pathname","createElement","render","formProps","propTypes","children","node","initialValues","oneOfType","object","func","mutationMode","oneOf","record","redirect","string","bool","save","saving","submitOnEnter","undoable","validate","sanitizeEmptyValues","findTabsWithErrors","errors","console","warn","toArray","reduce","acc","child","inputs","some","input","source","label"],"sources":["/node_modules/ra-ui-materialui/esm/form/TabbedForm.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { Children, isValidElement, } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormWithRedirect, } from 'ra-core';\nimport get from 'lodash/get';\nimport { useRouteMatch, useLocation } from 'react-router';\nimport { TabbedFormView } from './TabbedFormView';\n/**\n * Form layout where inputs are divided by tab, one input per line.\n *\n * Pass FormTab components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import {\n *     Edit,\n *     TabbedForm,\n *     FormTab,\n *     Datagrid,\n *     TextField,\n *     DateField,\n *     TextInput,\n *     ReferenceManyField,\n *     NumberInput,\n *     DateInput,\n *     BooleanInput,\n *     EditButton\n * } from 'react-admin';\n *\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <TabbedForm>\n *             <FormTab label=\"summary\">\n *                 <TextInput disabled label=\"Id\" source=\"id\" />\n *                 <TextInput source=\"title\" validate={required()} />\n *                 <TextInput multiline source=\"teaser\" validate={required()} />\n *             </FormTab>\n *             <FormTab label=\"body\">\n *                 <RichTextInput source=\"body\" validate={required()} addLabel={false} />\n *             </FormTab>\n *             <FormTab label=\"Miscellaneous\">\n *                 <TextInput label=\"Password (if protected post)\" source=\"password\" type=\"password\" />\n *                 <DateInput label=\"Publication date\" source=\"published_at\" />\n *                 <NumberInput source=\"average_note\" validate={[ number(), minValue(0) ]} />\n *                 <BooleanInput label=\"Allow comments?\" source=\"commentable\" defaultValue />\n *                 <TextInput disabled label=\"Nb views\" source=\"views\" />\n *             </FormTab>\n *             <FormTab label=\"comments\">\n *                 <ReferenceManyField reference=\"comments\" target=\"post_id\" addLabel={false}>\n *                     <Datagrid>\n *                         <TextField source=\"body\" />\n *                         <DateField source=\"created_at\" />\n *                         <EditButton />\n *                     </Datagrid>\n *                 </ReferenceManyField>\n *             </FormTab>\n *         </TabbedForm>\n *     </Edit>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} FormTab elements\n * @prop {Object} initialValues\n * @prop {Function} validate\n * @prop {boolean} submitOnEnter\n * @prop {string} redirect\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n * @prop {string} variant Apply variant to all inputs. Possible values are 'standard', 'outlined', and 'filled' (default)\n * @prop {string} margin Apply variant to all inputs. Possible values are 'none', 'normal', and 'dense' (default)\n * @prop {boolean} sanitizeEmptyValues Whether or not deleted record attributes should be recreated with a `null` value (default: true)\n *\n * @param {Props} props\n */\nexport var TabbedForm = function (props) {\n    var match = useRouteMatch();\n    var location = useLocation();\n    var formRootPathname = match ? match.url : location.pathname;\n    return (React.createElement(FormWithRedirect, __assign({}, props, { formRootPathname: formRootPathname, render: function (formProps) { return React.createElement(TabbedFormView, __assign({}, formProps)); } })));\n};\nTabbedForm.propTypes = {\n    children: PropTypes.node,\n    initialValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    // @ts-ignore\n    record: PropTypes.object,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    save: PropTypes.func,\n    saving: PropTypes.bool,\n    submitOnEnter: PropTypes.bool,\n    undoable: PropTypes.bool,\n    validate: PropTypes.func,\n    sanitizeEmptyValues: PropTypes.bool,\n};\nexport var findTabsWithErrors = function (children, errors) {\n    console.warn('Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/CreateEdit.html#grouping-inputs');\n    return Children.toArray(children).reduce(function (acc, child) {\n        if (!isValidElement(child)) {\n            return acc;\n        }\n        var inputs = Children.toArray(child.props.children);\n        if (inputs.some(function (input) {\n            return isValidElement(input) && get(errors, input.props.source);\n        })) {\n            return __spreadArray(__spreadArray([], acc, true), [child.props.label], false);\n        }\n        return acc;\n    }, []);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}