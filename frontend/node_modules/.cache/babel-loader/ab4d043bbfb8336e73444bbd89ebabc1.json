{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CardContentInner from '../layout/CardContentInner';\nimport Labeled from '../input/Labeled';\nvar sanitizeRestProps = function (_a) {\n  var children = _a.children,\n    className = _a.className,\n    record = _a.record,\n    resource = _a.resource,\n    basePath = _a.basePath,\n    version = _a.version,\n    initialValues = _a.initialValues,\n    translate = _a.translate,\n    rest = __rest(_a, [\"children\", \"className\", \"record\", \"resource\", \"basePath\", \"version\", \"initialValues\", \"translate\"]);\n  return rest;\n};\n/**\n * Simple Layout for a Show view, showing fields in one column.\n *\n * Receives the current `record` from the parent `<Show>` component,\n * and passes it to its children. Children should be Field-like components.\n *\n * @example\n *     // in src/posts.js\n *     import * as React from \"react\";\n *     import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n *     export const PostShow = (props) => (\n *         <Show {...props}>\n *             <SimpleShowLayout>\n *                 <TextField source=\"title\" />\n *             </SimpleShowLayout>\n *         </Show>\n *     );\n *\n *     // in src/App.js\n *     import * as React from \"react\";\n *     import { Admin, Resource } from 'react-admin';\n *\n *     import { PostShow } from './posts';\n *\n *     const App = () => (\n *         <Admin dataProvider={...}>\n *             <Resource name=\"posts\" show={PostShow} />\n *         </Admin>\n *     );\n *     export default App;\n */\nvar SimpleShowLayout = function (_a) {\n  var basePath = _a.basePath,\n    className = _a.className,\n    children = _a.children,\n    record = _a.record,\n    resource = _a.resource,\n    version = _a.version,\n    rest = __rest(_a, [\"basePath\", \"className\", \"children\", \"record\", \"resource\", \"version\"]);\n  return React.createElement(CardContentInner, __assign({\n    className: className,\n    key: version\n  }, sanitizeRestProps(rest)), Children.map(children, function (field) {\n    return field && isValidElement(field) ? React.createElement(\"div\", {\n      key: field.props.source,\n      className: classnames(\"ra-field ra-field-\" + field.props.source, field.props.className)\n    }, field.props.addLabel ? React.createElement(Labeled, {\n      record: record,\n      resource: resource,\n      basePath: basePath,\n      label: field.props.label,\n      source: field.props.source,\n      disabled: false,\n      fullWidth: field.props.fullWidth\n    }, field) : typeof field.type === 'string' ? field : cloneElement(field, {\n      record: record,\n      resource: resource,\n      basePath: basePath\n    })) : null;\n  }));\n};\nSimpleShowLayout.propTypes = {\n  basePath: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  version: PropTypes.number\n};\nexport default SimpleShowLayout;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","Children","isValidElement","cloneElement","PropTypes","classnames","CardContentInner","Labeled","sanitizeRestProps","_a","children","className","record","resource","basePath","version","initialValues","translate","rest","SimpleShowLayout","createElement","key","map","field","props","source","addLabel","label","disabled","fullWidth","type","propTypes","string","node","object","number"],"sources":["/node_modules/ra-ui-materialui/esm/detail/SimpleShowLayout.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CardContentInner from '../layout/CardContentInner';\nimport Labeled from '../input/Labeled';\nvar sanitizeRestProps = function (_a) {\n    var children = _a.children, className = _a.className, record = _a.record, resource = _a.resource, basePath = _a.basePath, version = _a.version, initialValues = _a.initialValues, translate = _a.translate, rest = __rest(_a, [\"children\", \"className\", \"record\", \"resource\", \"basePath\", \"version\", \"initialValues\", \"translate\"]);\n    return rest;\n};\n/**\n * Simple Layout for a Show view, showing fields in one column.\n *\n * Receives the current `record` from the parent `<Show>` component,\n * and passes it to its children. Children should be Field-like components.\n *\n * @example\n *     // in src/posts.js\n *     import * as React from \"react\";\n *     import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n *     export const PostShow = (props) => (\n *         <Show {...props}>\n *             <SimpleShowLayout>\n *                 <TextField source=\"title\" />\n *             </SimpleShowLayout>\n *         </Show>\n *     );\n *\n *     // in src/App.js\n *     import * as React from \"react\";\n *     import { Admin, Resource } from 'react-admin';\n *\n *     import { PostShow } from './posts';\n *\n *     const App = () => (\n *         <Admin dataProvider={...}>\n *             <Resource name=\"posts\" show={PostShow} />\n *         </Admin>\n *     );\n *     export default App;\n */\nvar SimpleShowLayout = function (_a) {\n    var basePath = _a.basePath, className = _a.className, children = _a.children, record = _a.record, resource = _a.resource, version = _a.version, rest = __rest(_a, [\"basePath\", \"className\", \"children\", \"record\", \"resource\", \"version\"]);\n    return (React.createElement(CardContentInner, __assign({ className: className, key: version }, sanitizeRestProps(rest)), Children.map(children, function (field) {\n        return field && isValidElement(field) ? (React.createElement(\"div\", { key: field.props.source, className: classnames(\"ra-field ra-field-\" + field.props.source, field.props.className) }, field.props.addLabel ? (React.createElement(Labeled, { record: record, resource: resource, basePath: basePath, label: field.props.label, source: field.props.source, disabled: false, fullWidth: field.props.fullWidth }, field)) : typeof field.type === 'string' ? (field) : (cloneElement(field, {\n            record: record,\n            resource: resource,\n            basePath: basePath,\n        })))) : null;\n    })));\n};\nSimpleShowLayout.propTypes = {\n    basePath: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    record: PropTypes.object,\n    resource: PropTypes.string,\n    version: PropTypes.number,\n};\nexport default SimpleShowLayout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}