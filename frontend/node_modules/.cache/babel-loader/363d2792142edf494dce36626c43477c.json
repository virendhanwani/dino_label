{"ast":null,"code":"import * as React from 'react';\nimport { createContext, useRef } from 'react';\nexport var SideEffectContext = createContext({});\nexport var SideEffectContextProvider = function (_a) {\n  var children = _a.children,\n    value = _a.value;\n  return React.createElement(SideEffectContext.Provider, {\n    value: value\n  }, children);\n};\n/**\n * Get modifiers for a save() function, and the way to update them.\n *\n * Used in useCreateController and useEditController.\n *\n * @example\n *\n * const {\n *     onSuccessRef,\n *     setOnSuccess,\n *     onFailureRef,\n *     setOnFailure,\n *     transformRef,\n *     setTransform,\n * } = useSaveModifiers({ onSuccess, onFailure, transform });\n */\nexport var useSaveModifiers = function (_a) {\n  var onSuccess = _a.onSuccess,\n    onFailure = _a.onFailure,\n    transform = _a.transform;\n  var onSuccessRef = useRef(onSuccess);\n  var setOnSuccess = function (onSuccess) {\n    onSuccessRef.current = function (response) {\n      // reset onSuccess for next submission\n      onSuccessRef.current = undefined;\n      return onSuccess(response);\n    };\n  };\n  var onFailureRef = useRef(onFailure);\n  var setOnFailure = function (onFailure) {\n    onFailureRef.current = function (error) {\n      // reset onFailure for next submission\n      onFailureRef.current = undefined;\n      return onFailure(error);\n    };\n  };\n  var transformRef = useRef(transform);\n  var setTransform = function (transform) {\n    transformRef.current = function (data) {\n      // reset transform for next submission\n      transformRef.current = undefined;\n      return transform(data);\n    };\n  };\n  return {\n    onSuccessRef: onSuccessRef,\n    setOnSuccess: setOnSuccess,\n    onFailureRef: onFailureRef,\n    setOnFailure: setOnFailure,\n    transformRef: transformRef,\n    setTransform: setTransform\n  };\n};","map":{"version":3,"names":["React","createContext","useRef","SideEffectContext","SideEffectContextProvider","_a","children","value","createElement","Provider","useSaveModifiers","onSuccess","onFailure","transform","onSuccessRef","setOnSuccess","current","response","undefined","onFailureRef","setOnFailure","error","transformRef","setTransform","data"],"sources":["/node_modules/ra-core/esm/controller/saveModifiers.js"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useRef } from 'react';\nexport var SideEffectContext = createContext({});\nexport var SideEffectContextProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(SideEffectContext.Provider, { value: value }, children));\n};\n/**\n * Get modifiers for a save() function, and the way to update them.\n *\n * Used in useCreateController and useEditController.\n *\n * @example\n *\n * const {\n *     onSuccessRef,\n *     setOnSuccess,\n *     onFailureRef,\n *     setOnFailure,\n *     transformRef,\n *     setTransform,\n * } = useSaveModifiers({ onSuccess, onFailure, transform });\n */\nexport var useSaveModifiers = function (_a) {\n    var onSuccess = _a.onSuccess, onFailure = _a.onFailure, transform = _a.transform;\n    var onSuccessRef = useRef(onSuccess);\n    var setOnSuccess = function (onSuccess) {\n        onSuccessRef.current = function (response) {\n            // reset onSuccess for next submission\n            onSuccessRef.current = undefined;\n            return onSuccess(response);\n        };\n    };\n    var onFailureRef = useRef(onFailure);\n    var setOnFailure = function (onFailure) {\n        onFailureRef.current = function (error) {\n            // reset onFailure for next submission\n            onFailureRef.current = undefined;\n            return onFailure(error);\n        };\n    };\n    var transformRef = useRef(transform);\n    var setTransform = function (transform) {\n        transformRef.current = function (data) {\n            // reset transform for next submission\n            transformRef.current = undefined;\n            return transform(data);\n        };\n    };\n    return {\n        onSuccessRef: onSuccessRef,\n        setOnSuccess: setOnSuccess,\n        onFailureRef: onFailureRef,\n        setOnFailure: setOnFailure,\n        transformRef: transformRef,\n        setTransform: setTransform,\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,MAAM,QAAQ,OAAO;AAC7C,OAAO,IAAIC,iBAAiB,GAAGF,aAAa,CAAC,CAAC,CAAC,CAAC;AAChD,OAAO,IAAIG,yBAAyB,GAAG,SAAAA,CAAUC,EAAE,EAAE;EACjD,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAQ;IAAEC,KAAK,GAAGF,EAAE,CAACE,KAAK;EAC5C,OAAQP,KAAK,CAACQ,aAAa,CAACL,iBAAiB,CAACM,QAAQ,EAAE;IAAEF,KAAK,EAAEA;EAAM,CAAC,EAAED,QAAQ,CAAC;AACvF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,gBAAgB,GAAG,SAAAA,CAAUL,EAAE,EAAE;EACxC,IAAIM,SAAS,GAAGN,EAAE,CAACM,SAAS;IAAEC,SAAS,GAAGP,EAAE,CAACO,SAAS;IAAEC,SAAS,GAAGR,EAAE,CAACQ,SAAS;EAChF,IAAIC,YAAY,GAAGZ,MAAM,CAACS,SAAS,CAAC;EACpC,IAAII,YAAY,GAAG,SAAAA,CAAUJ,SAAS,EAAE;IACpCG,YAAY,CAACE,OAAO,GAAG,UAAUC,QAAQ,EAAE;MACvC;MACAH,YAAY,CAACE,OAAO,GAAGE,SAAS;MAChC,OAAOP,SAAS,CAACM,QAAQ,CAAC;IAC9B,CAAC;EACL,CAAC;EACD,IAAIE,YAAY,GAAGjB,MAAM,CAACU,SAAS,CAAC;EACpC,IAAIQ,YAAY,GAAG,SAAAA,CAAUR,SAAS,EAAE;IACpCO,YAAY,CAACH,OAAO,GAAG,UAAUK,KAAK,EAAE;MACpC;MACAF,YAAY,CAACH,OAAO,GAAGE,SAAS;MAChC,OAAON,SAAS,CAACS,KAAK,CAAC;IAC3B,CAAC;EACL,CAAC;EACD,IAAIC,YAAY,GAAGpB,MAAM,CAACW,SAAS,CAAC;EACpC,IAAIU,YAAY,GAAG,SAAAA,CAAUV,SAAS,EAAE;IACpCS,YAAY,CAACN,OAAO,GAAG,UAAUQ,IAAI,EAAE;MACnC;MACAF,YAAY,CAACN,OAAO,GAAGE,SAAS;MAChC,OAAOL,SAAS,CAACW,IAAI,CAAC;IAC1B,CAAC;EACL,CAAC;EACD,OAAO;IACHV,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA,YAAY;IAC1BI,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA,YAAY;IAC1BE,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA;EAClB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}