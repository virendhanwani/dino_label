{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport isEqual from 'lodash/isEqual';\nimport { FETCH_END } from '../../../actions';\nimport { CREATE, DELETE, DELETE_MANY, GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE, UPDATE, UPDATE_MANY } from '../../../core';\nimport getFetchedAt from '../../../util/getFetchedAt';\n/**\n * Make the fetchedAt property non enumerable\n */\nexport var hideFetchedAt = function (records) {\n  Object.defineProperty(records, 'fetchedAt', {\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n  return records;\n};\n/**\n * Add new records to the pool, and remove outdated ones.\n *\n * This is the equivalent of a stale-while-revalidate caching strategy:\n * The cached data is displayed before fetching, and stale data is removed\n * only once fresh data is fetched.\n */\nexport var addRecordsAndRemoveOutdated = function (newRecords, oldRecords) {\n  if (newRecords === void 0) {\n    newRecords = [];\n  }\n  var newRecordsById = {};\n  newRecords.forEach(function (record) {\n    return newRecordsById[record.id] = record;\n  });\n  var newFetchedAt = getFetchedAt(newRecords.map(function (_a) {\n    var id = _a.id;\n    return id;\n  }), oldRecords.fetchedAt);\n  var records = {\n    fetchedAt: newFetchedAt\n  };\n  Object.keys(newFetchedAt).forEach(function (id) {\n    return records[id] = newRecordsById[id] ? isEqual(newRecordsById[id], oldRecords[id]) ? oldRecords[id] // do not change the record to avoid a redraw\n    : newRecordsById[id] : oldRecords[id];\n  });\n  return hideFetchedAt(records);\n};\n/**\n * Add new records to the pool, without touching the other ones.\n */\nexport var addRecords = function (newRecords, oldRecords) {\n  if (newRecords === void 0) {\n    newRecords = [];\n  }\n  var newRecordsById = __assign({}, oldRecords);\n  newRecords.forEach(function (record) {\n    newRecordsById[record.id] = isEqual(record, oldRecords[record.id]) ? oldRecords[record.id] : record;\n  });\n  var updatedFetchedAt = getFetchedAt(newRecords.map(function (_a) {\n    var id = _a.id;\n    return id;\n  }), oldRecords.fetchedAt);\n  Object.defineProperty(newRecordsById, 'fetchedAt', {\n    value: __assign(__assign({}, oldRecords.fetchedAt), updatedFetchedAt),\n    enumerable: false\n  });\n  return newRecordsById;\n};\nexport var addOneRecord = function (newRecord, oldRecords, date) {\n  var _a, _b;\n  if (date === void 0) {\n    date = new Date();\n  }\n  var newRecordsById = __assign(__assign({}, oldRecords), (_a = {}, _a[newRecord.id] = isEqual(newRecord, oldRecords[newRecord.id]) ? oldRecords[newRecord.id] // do not change the record to avoid a redraw\n  : newRecord, _a));\n  return Object.defineProperty(newRecordsById, 'fetchedAt', {\n    value: __assign(__assign({}, oldRecords.fetchedAt), (_b = {}, _b[newRecord.id] = date, _b)),\n    enumerable: false\n  });\n};\nvar includesNotStrict = function (items, element) {\n  return items.some(function (item) {\n    return item == element;\n  });\n}; // eslint-disable-line eqeqeq\n/**\n * Remove records from the pool\n */\nexport var removeRecords = function (removedRecordIds, oldRecords) {\n  if (removedRecordIds === void 0) {\n    removedRecordIds = [];\n  }\n  var records = Object.entries(oldRecords).filter(function (_a) {\n    var key = _a[0];\n    return !includesNotStrict(removedRecordIds, key);\n  }).reduce(function (obj, _a) {\n    var _b;\n    var key = _a[0],\n      val = _a[1];\n    return __assign(__assign({}, obj), (_b = {}, _b[key] = val, _b));\n  }, {\n    fetchedAt: {} // TypeScript warns later if this is not defined\n  });\n\n  records.fetchedAt = Object.entries(oldRecords.fetchedAt).filter(function (_a) {\n    var key = _a[0];\n    return !includesNotStrict(removedRecordIds, key);\n  }).reduce(function (obj, _a) {\n    var _b;\n    var key = _a[0],\n      val = _a[1];\n    return __assign(__assign({}, obj), (_b = {}, _b[key] = val, _b));\n  }, {});\n  return hideFetchedAt(records);\n};\nvar initialState = hideFetchedAt({\n  fetchedAt: {}\n});\nvar dataReducer = function (previousState, _a) {\n  if (previousState === void 0) {\n    previousState = initialState;\n  }\n  var payload = _a.payload,\n    meta = _a.meta;\n  if (meta && meta.optimistic) {\n    if (meta.fetch === UPDATE) {\n      var updatedRecord = __assign(__assign({}, previousState[payload.id]), payload.data);\n      return addOneRecord(updatedRecord, previousState);\n    }\n    if (meta.fetch === UPDATE_MANY) {\n      var updatedRecords = payload.ids.map(function (id) {\n        return __assign(__assign({}, previousState[id]), payload.data);\n      });\n      return addRecordsAndRemoveOutdated(updatedRecords, previousState);\n    }\n    if (meta.fetch === DELETE) {\n      return removeRecords([payload.id], previousState);\n    }\n    if (meta.fetch === DELETE_MANY) {\n      return removeRecords(payload.ids, previousState);\n    }\n  }\n  if (!meta || !meta.fetchResponse || meta.fetchStatus !== FETCH_END) {\n    return previousState;\n  }\n  switch (meta.fetchResponse) {\n    case GET_LIST:\n      return addRecordsAndRemoveOutdated(payload.data, previousState);\n    case GET_MANY:\n    case GET_MANY_REFERENCE:\n      return addRecords(payload.data, previousState);\n    case UPDATE:\n    case CREATE:\n    case GET_ONE:\n      return addOneRecord(payload.data, previousState);\n    default:\n      return previousState;\n  }\n};\nexport var getRecord = function (state, id) {\n  return state[id];\n};\nexport default dataReducer;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","isEqual","FETCH_END","CREATE","DELETE","DELETE_MANY","GET_LIST","GET_MANY","GET_MANY_REFERENCE","GET_ONE","UPDATE","UPDATE_MANY","getFetchedAt","hideFetchedAt","records","defineProperty","enumerable","configurable","writable","addRecordsAndRemoveOutdated","newRecords","oldRecords","newRecordsById","forEach","record","id","newFetchedAt","map","_a","fetchedAt","keys","addRecords","updatedFetchedAt","value","addOneRecord","newRecord","date","_b","Date","includesNotStrict","items","element","some","item","removeRecords","removedRecordIds","entries","filter","key","reduce","obj","val","initialState","dataReducer","previousState","payload","meta","optimistic","fetch","updatedRecord","data","updatedRecords","ids","fetchResponse","fetchStatus","getRecord","state"],"sources":["/node_modules/ra-core/esm/reducer/admin/resource/data.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport isEqual from 'lodash/isEqual';\nimport { FETCH_END } from '../../../actions';\nimport { CREATE, DELETE, DELETE_MANY, GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE, UPDATE, UPDATE_MANY, } from '../../../core';\nimport getFetchedAt from '../../../util/getFetchedAt';\n/**\n * Make the fetchedAt property non enumerable\n */\nexport var hideFetchedAt = function (records) {\n    Object.defineProperty(records, 'fetchedAt', {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n    });\n    return records;\n};\n/**\n * Add new records to the pool, and remove outdated ones.\n *\n * This is the equivalent of a stale-while-revalidate caching strategy:\n * The cached data is displayed before fetching, and stale data is removed\n * only once fresh data is fetched.\n */\nexport var addRecordsAndRemoveOutdated = function (newRecords, oldRecords) {\n    if (newRecords === void 0) { newRecords = []; }\n    var newRecordsById = {};\n    newRecords.forEach(function (record) { return (newRecordsById[record.id] = record); });\n    var newFetchedAt = getFetchedAt(newRecords.map(function (_a) {\n        var id = _a.id;\n        return id;\n    }), oldRecords.fetchedAt);\n    var records = { fetchedAt: newFetchedAt };\n    Object.keys(newFetchedAt).forEach(function (id) {\n        return (records[id] = newRecordsById[id]\n            ? isEqual(newRecordsById[id], oldRecords[id])\n                ? oldRecords[id] // do not change the record to avoid a redraw\n                : newRecordsById[id]\n            : oldRecords[id]);\n    });\n    return hideFetchedAt(records);\n};\n/**\n * Add new records to the pool, without touching the other ones.\n */\nexport var addRecords = function (newRecords, oldRecords) {\n    if (newRecords === void 0) { newRecords = []; }\n    var newRecordsById = __assign({}, oldRecords);\n    newRecords.forEach(function (record) {\n        newRecordsById[record.id] = isEqual(record, oldRecords[record.id])\n            ? oldRecords[record.id]\n            : record;\n    });\n    var updatedFetchedAt = getFetchedAt(newRecords.map(function (_a) {\n        var id = _a.id;\n        return id;\n    }), oldRecords.fetchedAt);\n    Object.defineProperty(newRecordsById, 'fetchedAt', {\n        value: __assign(__assign({}, oldRecords.fetchedAt), updatedFetchedAt),\n        enumerable: false,\n    });\n    return newRecordsById;\n};\nexport var addOneRecord = function (newRecord, oldRecords, date) {\n    var _a, _b;\n    if (date === void 0) { date = new Date(); }\n    var newRecordsById = __assign(__assign({}, oldRecords), (_a = {}, _a[newRecord.id] = isEqual(newRecord, oldRecords[newRecord.id])\n        ? oldRecords[newRecord.id] // do not change the record to avoid a redraw\n        : newRecord, _a));\n    return Object.defineProperty(newRecordsById, 'fetchedAt', {\n        value: __assign(__assign({}, oldRecords.fetchedAt), (_b = {}, _b[newRecord.id] = date, _b)),\n        enumerable: false,\n    });\n};\nvar includesNotStrict = function (items, element) {\n    return items.some(function (item) { return item == element; });\n}; // eslint-disable-line eqeqeq\n/**\n * Remove records from the pool\n */\nexport var removeRecords = function (removedRecordIds, oldRecords) {\n    if (removedRecordIds === void 0) { removedRecordIds = []; }\n    var records = Object.entries(oldRecords)\n        .filter(function (_a) {\n        var key = _a[0];\n        return !includesNotStrict(removedRecordIds, key);\n    })\n        .reduce(function (obj, _a) {\n        var _b;\n        var key = _a[0], val = _a[1];\n        return (__assign(__assign({}, obj), (_b = {}, _b[key] = val, _b)));\n    }, {\n        fetchedAt: {}, // TypeScript warns later if this is not defined\n    });\n    records.fetchedAt = Object.entries(oldRecords.fetchedAt)\n        .filter(function (_a) {\n        var key = _a[0];\n        return !includesNotStrict(removedRecordIds, key);\n    })\n        .reduce(function (obj, _a) {\n        var _b;\n        var key = _a[0], val = _a[1];\n        return (__assign(__assign({}, obj), (_b = {}, _b[key] = val, _b)));\n    }, {});\n    return hideFetchedAt(records);\n};\nvar initialState = hideFetchedAt({ fetchedAt: {} });\nvar dataReducer = function (previousState, _a) {\n    if (previousState === void 0) { previousState = initialState; }\n    var payload = _a.payload, meta = _a.meta;\n    if (meta && meta.optimistic) {\n        if (meta.fetch === UPDATE) {\n            var updatedRecord = __assign(__assign({}, previousState[payload.id]), payload.data);\n            return addOneRecord(updatedRecord, previousState);\n        }\n        if (meta.fetch === UPDATE_MANY) {\n            var updatedRecords = payload.ids.map(function (id) { return (__assign(__assign({}, previousState[id]), payload.data)); });\n            return addRecordsAndRemoveOutdated(updatedRecords, previousState);\n        }\n        if (meta.fetch === DELETE) {\n            return removeRecords([payload.id], previousState);\n        }\n        if (meta.fetch === DELETE_MANY) {\n            return removeRecords(payload.ids, previousState);\n        }\n    }\n    if (!meta || !meta.fetchResponse || meta.fetchStatus !== FETCH_END) {\n        return previousState;\n    }\n    switch (meta.fetchResponse) {\n        case GET_LIST:\n            return addRecordsAndRemoveOutdated(payload.data, previousState);\n        case GET_MANY:\n        case GET_MANY_REFERENCE:\n            return addRecords(payload.data, previousState);\n        case UPDATE:\n        case CREATE:\n        case GET_ONE:\n            return addOneRecord(payload.data, previousState);\n        default:\n            return previousState;\n    }\n};\nexport var getRecord = function (state, id) { return state[id]; };\nexport default dataReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}