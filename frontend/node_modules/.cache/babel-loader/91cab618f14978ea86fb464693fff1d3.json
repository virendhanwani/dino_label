{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext } from 'ra-core';\nimport purify from 'dompurify';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nexport var removeTags = function (input) {\n  return input ? input.replace(/<[^>]+>/gm, '') : '';\n};\nvar RichTextField = memo(function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    stripTags = props.stripTags,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"stripTags\"]);\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  return React.createElement(Typography, __assign({\n    className: className,\n    variant: \"body2\",\n    component: \"span\"\n  }, sanitizeFieldRestProps(rest)), value == null && emptyText ? emptyText : stripTags ? removeTags(value) : React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: purify.sanitize(value)\n    }\n  }));\n});\nRichTextField.defaultProps = {\n  addLabel: true,\n  stripTags: false\n};\nRichTextField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  stripTags: PropTypes.bool\n});\nRichTextField.displayName = 'RichTextField';\nexport default RichTextField;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","PropTypes","get","Typography","useRecordContext","purify","sanitizeFieldRestProps","fieldPropTypes","removeTags","input","replace","RichTextField","props","className","emptyText","source","stripTags","rest","record","value","createElement","variant","component","dangerouslySetInnerHTML","__html","sanitize","defaultProps","addLabel","propTypes","bool","displayName"],"sources":["/node_modules/ra-ui-materialui/esm/field/RichTextField.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext } from 'ra-core';\nimport purify from 'dompurify';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nexport var removeTags = function (input) {\n    return input ? input.replace(/<[^>]+>/gm, '') : '';\n};\nvar RichTextField = memo(function (props) {\n    var className = props.className, emptyText = props.emptyText, source = props.source, stripTags = props.stripTags, rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"stripTags\"]);\n    var record = useRecordContext(props);\n    var value = get(record, source);\n    return (React.createElement(Typography, __assign({ className: className, variant: \"body2\", component: \"span\" }, sanitizeFieldRestProps(rest)), value == null && emptyText ? (emptyText) : stripTags ? (removeTags(value)) : (React.createElement(\"span\", { dangerouslySetInnerHTML: {\n            __html: purify.sanitize(value),\n        } }))));\n});\nRichTextField.defaultProps = {\n    addLabel: true,\n    stripTags: false,\n};\nRichTextField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), { stripTags: PropTypes.bool });\nRichTextField.displayName = 'RichTextField';\nexport default RichTextField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}