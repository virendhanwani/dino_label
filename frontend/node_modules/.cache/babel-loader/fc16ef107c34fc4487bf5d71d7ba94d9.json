{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkDeleteWithConfirmButton from './BulkDeleteWithConfirmButton';\nimport BulkDeleteWithUndoButton from './BulkDeleteWithUndoButton';\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkDeleteButton = function (props) {\n  return props.undoable ? React.createElement(BulkDeleteWithUndoButton, __assign({}, props)) : React.createElement(BulkDeleteWithConfirmButton, __assign({}, props));\n};\nBulkDeleteButton.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  undoable: PropTypes.bool,\n  icon: PropTypes.element\n};\nBulkDeleteButton.defaultProps = {\n  undoable: true\n};\nexport default BulkDeleteButton;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","PropTypes","BulkDeleteWithConfirmButton","BulkDeleteWithUndoButton","BulkDeleteButton","props","undoable","createElement","propTypes","basePath","string","label","resource","selectedIds","arrayOf","any","bool","icon","element","defaultProps"],"sources":["/node_modules/ra-ui-materialui/esm/button/BulkDeleteButton.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkDeleteWithConfirmButton from './BulkDeleteWithConfirmButton';\nimport BulkDeleteWithUndoButton from './BulkDeleteWithUndoButton';\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkDeleteButton = function (props) {\n    return props.undoable ? (React.createElement(BulkDeleteWithUndoButton, __assign({}, props))) : (React.createElement(BulkDeleteWithConfirmButton, __assign({}, props)));\n};\nBulkDeleteButton.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    undoable: PropTypes.bool,\n    icon: PropTypes.element,\n};\nBulkDeleteButton.defaultProps = {\n    undoable: true,\n};\nexport default BulkDeleteButton;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAO,KAAKO,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,2BAA2B,MAAM,+BAA+B;AACvE,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACpC,OAAOA,KAAK,CAACC,QAAQ,GAAIN,KAAK,CAACO,aAAa,CAACJ,wBAAwB,EAAEjB,QAAQ,CAAC,CAAC,CAAC,EAAEmB,KAAK,CAAC,CAAC,GAAKL,KAAK,CAACO,aAAa,CAACL,2BAA2B,EAAEhB,QAAQ,CAAC,CAAC,CAAC,EAAEmB,KAAK,CAAC,CAAE;AAC1K,CAAC;AACDD,gBAAgB,CAACI,SAAS,GAAG;EACzBC,QAAQ,EAAER,SAAS,CAACS,MAAM;EAC1BC,KAAK,EAAEV,SAAS,CAACS,MAAM;EACvBE,QAAQ,EAAEX,SAAS,CAACS,MAAM;EAC1BG,WAAW,EAAEZ,SAAS,CAACa,OAAO,CAACb,SAAS,CAACc,GAAG,CAAC;EAC7CT,QAAQ,EAAEL,SAAS,CAACe,IAAI;EACxBC,IAAI,EAAEhB,SAAS,CAACiB;AACpB,CAAC;AACDd,gBAAgB,CAACe,YAAY,GAAG;EAC5Bb,QAAQ,EAAE;AACd,CAAC;AACD,eAAeF,gBAAgB"},"metadata":{},"sourceType":"module"}