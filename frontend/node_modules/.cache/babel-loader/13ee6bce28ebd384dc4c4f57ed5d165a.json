{"ast":null,"code":"import { isValidElement, cloneElement, useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for choices handling.\n *\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n */\nvar useChoices = function (_a) {\n  var _b = _a.optionText,\n    optionText = _b === void 0 ? 'name' : _b,\n    _c = _a.optionValue,\n    optionValue = _c === void 0 ? 'id' : _c,\n    _d = _a.disableValue,\n    disableValue = _d === void 0 ? 'disabled' : _d,\n    _e = _a.translateChoice,\n    translateChoice = _e === void 0 ? true : _e;\n  var translate = useTranslate();\n  var getChoiceText = useCallback(function (choice) {\n    if (isValidElement(optionText)) {\n      return cloneElement(optionText, {\n        record: choice\n      });\n    }\n    var choiceName = typeof optionText === 'function' ? optionText(choice) : get(choice, optionText);\n    return isValidElement(choiceName) ? choiceName : translateChoice ? translate(choiceName, {\n      _: choiceName\n    }) : String(choiceName);\n  }, [optionText, translate, translateChoice]);\n  var getChoiceValue = useCallback(function (choice) {\n    return get(choice, optionValue);\n  }, [optionValue]);\n  var getDisableValue = useCallback(function (choice) {\n    return get(choice, disableValue);\n  }, [disableValue]);\n  return {\n    getChoiceText: getChoiceText,\n    getChoiceValue: getChoiceValue,\n    getDisableValue: getDisableValue\n  };\n};\nexport default useChoices;","map":{"version":3,"names":["isValidElement","cloneElement","useCallback","get","useTranslate","useChoices","_a","_b","optionText","_c","optionValue","_d","disableValue","_e","translateChoice","translate","getChoiceText","choice","record","choiceName","_","String","getChoiceValue","getDisableValue"],"sources":["/node_modules/ra-core/esm/form/useChoices.js"],"sourcesContent":["import { isValidElement, cloneElement, useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for choices handling.\n *\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n */\nvar useChoices = function (_a) {\n    var _b = _a.optionText, optionText = _b === void 0 ? 'name' : _b, _c = _a.optionValue, optionValue = _c === void 0 ? 'id' : _c, _d = _a.disableValue, disableValue = _d === void 0 ? 'disabled' : _d, _e = _a.translateChoice, translateChoice = _e === void 0 ? true : _e;\n    var translate = useTranslate();\n    var getChoiceText = useCallback(function (choice) {\n        if (isValidElement(optionText)) {\n            return cloneElement(optionText, {\n                record: choice,\n            });\n        }\n        var choiceName = typeof optionText === 'function'\n            ? optionText(choice)\n            : get(choice, optionText);\n        return isValidElement(choiceName)\n            ? choiceName\n            : translateChoice\n                ? translate(choiceName, { _: choiceName })\n                : String(choiceName);\n    }, [optionText, translate, translateChoice]);\n    var getChoiceValue = useCallback(function (choice) { return get(choice, optionValue); }, [\n        optionValue,\n    ]);\n    var getDisableValue = useCallback(function (choice) { return get(choice, disableValue); }, [\n        disableValue,\n    ]);\n    return {\n        getChoiceText: getChoiceText,\n        getChoiceValue: getChoiceValue,\n        getDisableValue: getDisableValue,\n    };\n};\nexport default useChoices;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,YAAY,EAAEC,WAAW,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,YAAY,QAAQ,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAC3B,IAAIC,EAAE,GAAGD,EAAE,CAACE,UAAU;IAAEA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,EAAE;IAAEE,EAAE,GAAGH,EAAE,CAACI,WAAW;IAAEA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEE,EAAE,GAAGL,EAAE,CAACM,YAAY;IAAEA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,UAAU,GAAGA,EAAE;IAAEE,EAAE,GAAGP,EAAE,CAACQ,eAAe;IAAEA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;EAC1Q,IAAIE,SAAS,GAAGX,YAAY,EAAE;EAC9B,IAAIY,aAAa,GAAGd,WAAW,CAAC,UAAUe,MAAM,EAAE;IAC9C,IAAIjB,cAAc,CAACQ,UAAU,CAAC,EAAE;MAC5B,OAAOP,YAAY,CAACO,UAAU,EAAE;QAC5BU,MAAM,EAAED;MACZ,CAAC,CAAC;IACN;IACA,IAAIE,UAAU,GAAG,OAAOX,UAAU,KAAK,UAAU,GAC3CA,UAAU,CAACS,MAAM,CAAC,GAClBd,GAAG,CAACc,MAAM,EAAET,UAAU,CAAC;IAC7B,OAAOR,cAAc,CAACmB,UAAU,CAAC,GAC3BA,UAAU,GACVL,eAAe,GACXC,SAAS,CAACI,UAAU,EAAE;MAAEC,CAAC,EAAED;IAAW,CAAC,CAAC,GACxCE,MAAM,CAACF,UAAU,CAAC;EAChC,CAAC,EAAE,CAACX,UAAU,EAAEO,SAAS,EAAED,eAAe,CAAC,CAAC;EAC5C,IAAIQ,cAAc,GAAGpB,WAAW,CAAC,UAAUe,MAAM,EAAE;IAAE,OAAOd,GAAG,CAACc,MAAM,EAAEP,WAAW,CAAC;EAAE,CAAC,EAAE,CACrFA,WAAW,CACd,CAAC;EACF,IAAIa,eAAe,GAAGrB,WAAW,CAAC,UAAUe,MAAM,EAAE;IAAE,OAAOd,GAAG,CAACc,MAAM,EAAEL,YAAY,CAAC;EAAE,CAAC,EAAE,CACvFA,YAAY,CACf,CAAC;EACF,OAAO;IACHI,aAAa,EAAEA,aAAa;IAC5BM,cAAc,EAAEA,cAAc;IAC9BC,eAAe,EAAEA;EACrB,CAAC;AACL,CAAC;AACD,eAAelB,UAAU"},"metadata":{},"sourceType":"module"}