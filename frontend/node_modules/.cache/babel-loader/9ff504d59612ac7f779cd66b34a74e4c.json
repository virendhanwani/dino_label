{"ast":null,"code":"import { CREATE, DELETE, DELETE_MANY, GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE, UPDATE, UPDATE_MANY } from '../core';\nvar defaultDataProvider = function () {\n  return Promise.resolve();\n};\ndefaultDataProvider.create = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.delete = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.deleteMany = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.getList = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.getMany = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.getManyReference = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.getOne = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.update = function () {\n  return Promise.resolve(null);\n};\ndefaultDataProvider.updateMany = function () {\n  return Promise.resolve(null);\n};\nvar fetchMap = {\n  create: CREATE,\n  delete: DELETE,\n  deleteMany: DELETE_MANY,\n  getList: GET_LIST,\n  getMany: GET_MANY,\n  getManyReference: GET_MANY_REFERENCE,\n  getOne: GET_ONE,\n  update: UPDATE,\n  updateMany: UPDATE_MANY\n};\n/**\n * Turn a function-based dataProvider to an object-based one\n *\n * Allows using legacy dataProviders transparently.\n *\n * @param {Function} legacyDataProvider A legacy dataProvider (type, resource, params) => Promise<any>\n *\n * @returns {Object} A dataProvider that react-admin can use\n */\nvar convertLegacyDataProvider = function (legacyDataProvider) {\n  var proxy = new Proxy(defaultDataProvider, {\n    get: function (_, name) {\n      return function (resource, params) {\n        if (Object.keys(fetchMap).includes(name.toString())) {\n          var fetchType = fetchMap[name.toString()];\n          return legacyDataProvider(fetchType, resource, params);\n        }\n        return legacyDataProvider(name.toString(), resource, params);\n      };\n    },\n    apply: function (_, __, args) {\n      return legacyDataProvider.apply(legacyDataProvider, args);\n    }\n  });\n  return proxy;\n};\nexport default convertLegacyDataProvider;","map":{"version":3,"names":["CREATE","DELETE","DELETE_MANY","GET_LIST","GET_MANY","GET_MANY_REFERENCE","GET_ONE","UPDATE","UPDATE_MANY","defaultDataProvider","Promise","resolve","create","delete","deleteMany","getList","getMany","getManyReference","getOne","update","updateMany","fetchMap","convertLegacyDataProvider","legacyDataProvider","proxy","Proxy","get","_","name","resource","params","Object","keys","includes","toString","fetchType","apply","__","args"],"sources":["/node_modules/ra-core/esm/dataProvider/convertLegacyDataProvider.js"],"sourcesContent":["import { CREATE, DELETE, DELETE_MANY, GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE, UPDATE, UPDATE_MANY, } from '../core';\nvar defaultDataProvider = function () { return Promise.resolve(); };\ndefaultDataProvider.create = function () { return Promise.resolve(null); };\ndefaultDataProvider.delete = function () { return Promise.resolve(null); };\ndefaultDataProvider.deleteMany = function () { return Promise.resolve(null); };\ndefaultDataProvider.getList = function () { return Promise.resolve(null); };\ndefaultDataProvider.getMany = function () { return Promise.resolve(null); };\ndefaultDataProvider.getManyReference = function () { return Promise.resolve(null); };\ndefaultDataProvider.getOne = function () { return Promise.resolve(null); };\ndefaultDataProvider.update = function () { return Promise.resolve(null); };\ndefaultDataProvider.updateMany = function () { return Promise.resolve(null); };\nvar fetchMap = {\n    create: CREATE,\n    delete: DELETE,\n    deleteMany: DELETE_MANY,\n    getList: GET_LIST,\n    getMany: GET_MANY,\n    getManyReference: GET_MANY_REFERENCE,\n    getOne: GET_ONE,\n    update: UPDATE,\n    updateMany: UPDATE_MANY,\n};\n/**\n * Turn a function-based dataProvider to an object-based one\n *\n * Allows using legacy dataProviders transparently.\n *\n * @param {Function} legacyDataProvider A legacy dataProvider (type, resource, params) => Promise<any>\n *\n * @returns {Object} A dataProvider that react-admin can use\n */\nvar convertLegacyDataProvider = function (legacyDataProvider) {\n    var proxy = new Proxy(defaultDataProvider, {\n        get: function (_, name) {\n            return function (resource, params) {\n                if (Object.keys(fetchMap).includes(name.toString())) {\n                    var fetchType = fetchMap[name.toString()];\n                    return legacyDataProvider(fetchType, resource, params);\n                }\n                return legacyDataProvider(name.toString(), resource, params);\n            };\n        },\n        apply: function (_, __, args) {\n            return legacyDataProvider.apply(legacyDataProvider, args);\n        },\n    });\n    return proxy;\n};\nexport default convertLegacyDataProvider;\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,kBAAkB,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,QAAS,SAAS;AAC5H,IAAIC,mBAAmB,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAOC,OAAO,CAACC,OAAO,EAAE;AAAE,CAAC;AACnEF,mBAAmB,CAACG,MAAM,GAAG,YAAY;EAAE,OAAOF,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC1EF,mBAAmB,CAACI,MAAM,GAAG,YAAY;EAAE,OAAOH,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC1EF,mBAAmB,CAACK,UAAU,GAAG,YAAY;EAAE,OAAOJ,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC9EF,mBAAmB,CAACM,OAAO,GAAG,YAAY;EAAE,OAAOL,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC3EF,mBAAmB,CAACO,OAAO,GAAG,YAAY;EAAE,OAAON,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC3EF,mBAAmB,CAACQ,gBAAgB,GAAG,YAAY;EAAE,OAAOP,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AACpFF,mBAAmB,CAACS,MAAM,GAAG,YAAY;EAAE,OAAOR,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC1EF,mBAAmB,CAACU,MAAM,GAAG,YAAY;EAAE,OAAOT,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC1EF,mBAAmB,CAACW,UAAU,GAAG,YAAY;EAAE,OAAOV,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AAC9E,IAAIU,QAAQ,GAAG;EACXT,MAAM,EAAEZ,MAAM;EACda,MAAM,EAAEZ,MAAM;EACda,UAAU,EAAEZ,WAAW;EACvBa,OAAO,EAAEZ,QAAQ;EACjBa,OAAO,EAAEZ,QAAQ;EACjBa,gBAAgB,EAAEZ,kBAAkB;EACpCa,MAAM,EAAEZ,OAAO;EACfa,MAAM,EAAEZ,MAAM;EACda,UAAU,EAAEZ;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIc,yBAAyB,GAAG,SAAAA,CAAUC,kBAAkB,EAAE;EAC1D,IAAIC,KAAK,GAAG,IAAIC,KAAK,CAAChB,mBAAmB,EAAE;IACvCiB,GAAG,EAAE,SAAAA,CAAUC,CAAC,EAAEC,IAAI,EAAE;MACpB,OAAO,UAAUC,QAAQ,EAAEC,MAAM,EAAE;QAC/B,IAAIC,MAAM,CAACC,IAAI,CAACX,QAAQ,CAAC,CAACY,QAAQ,CAACL,IAAI,CAACM,QAAQ,EAAE,CAAC,EAAE;UACjD,IAAIC,SAAS,GAAGd,QAAQ,CAACO,IAAI,CAACM,QAAQ,EAAE,CAAC;UACzC,OAAOX,kBAAkB,CAACY,SAAS,EAAEN,QAAQ,EAAEC,MAAM,CAAC;QAC1D;QACA,OAAOP,kBAAkB,CAACK,IAAI,CAACM,QAAQ,EAAE,EAAEL,QAAQ,EAAEC,MAAM,CAAC;MAChE,CAAC;IACL,CAAC;IACDM,KAAK,EAAE,SAAAA,CAAUT,CAAC,EAAEU,EAAE,EAAEC,IAAI,EAAE;MAC1B,OAAOf,kBAAkB,CAACa,KAAK,CAACb,kBAAkB,EAAEe,IAAI,CAAC;IAC7D;EACJ,CAAC,CAAC;EACF,OAAOd,KAAK;AAChB,CAAC;AACD,eAAeF,yBAAyB"},"metadata":{},"sourceType":"module"}