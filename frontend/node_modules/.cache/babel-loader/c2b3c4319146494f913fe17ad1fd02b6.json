{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React, { useCallback, useEffect, useRef, useMemo, isValidElement } from 'react';\nimport Downshift from 'downshift';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport { TextField, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useSuggestions, warning, mergeRefs } from 'ra-core';\nimport debounce from 'lodash/debounce';\nimport InputHelperText from './InputHelperText';\nimport AutocompleteSuggestionList from './AutocompleteSuggestionList';\nimport AutocompleteSuggestionItem from './AutocompleteSuggestionItem';\nimport { AutocompleteInputLoader } from './AutocompleteInputLoader';\nimport { useSupportCreateSuggestion } from './useSupportCreateSuggestion';\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` prop\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue);\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <TextField> component\n *\n * @example\n * <AutocompleteArrayInput source=\"author_id\" options={{ color: 'secondary' }} />\n */\nvar AutocompleteArrayInput = function (props) {\n  var allowDuplicates = props.allowDuplicates,\n    allowEmpty = props.allowEmpty,\n    classesOverride = props.classes,\n    _a = props.choices,\n    choices = _a === void 0 ? [] : _a,\n    create = props.create,\n    createLabel = props.createLabel,\n    createItemLabel = props.createItemLabel,\n    createValue = props.createValue,\n    _b = props.debounce,\n    debounceDelay = _b === void 0 ? 250 : _b,\n    disabled = props.disabled,\n    emptyText = props.emptyText,\n    emptyValue = props.emptyValue,\n    format = props.format,\n    fullWidth = props.fullWidth,\n    helperText = props.helperText,\n    idOverride = props.id,\n    inputOverride = props.input,\n    isRequiredOverride = props.isRequired,\n    label = props.label,\n    loaded = props.loaded,\n    loading = props.loading,\n    limitChoicesToValue = props.limitChoicesToValue,\n    _c = props.margin,\n    margin = _c === void 0 ? 'dense' : _c,\n    matchSuggestion = props.matchSuggestion,\n    metaOverride = props.meta,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onCreate = props.onCreate,\n    onFocus = props.onFocus,\n    _d = props.options,\n    _e = _d === void 0 ? {} : _d,\n    suggestionsContainerProps = _e.suggestionsContainerProps,\n    labelProps = _e.labelProps,\n    InputProps = _e.InputProps,\n    options = __rest(_e, [\"suggestionsContainerProps\", \"labelProps\", \"InputProps\"]),\n    _f = props.optionText,\n    optionText = _f === void 0 ? 'name' : _f,\n    _g = props.optionValue,\n    optionValue = _g === void 0 ? 'id' : _g,\n    parse = props.parse,\n    resource = props.resource,\n    setFilter = props.setFilter,\n    shouldRenderSuggestionsOverride = props.shouldRenderSuggestions,\n    source = props.source,\n    suggestionLimit = props.suggestionLimit,\n    _h = props.translateChoice,\n    translateChoice = _h === void 0 ? true : _h,\n    validate = props.validate,\n    _j = props.variant,\n    variant = _j === void 0 ? 'filled' : _j,\n    rest = __rest(props, [\"allowDuplicates\", \"allowEmpty\", \"classes\", \"choices\", \"create\", \"createLabel\", \"createItemLabel\", \"createValue\", \"debounce\", \"disabled\", \"emptyText\", \"emptyValue\", \"format\", \"fullWidth\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"loaded\", \"loading\", \"limitChoicesToValue\", \"margin\", \"matchSuggestion\", \"meta\", \"onBlur\", \"onChange\", \"onCreate\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"setFilter\", \"shouldRenderSuggestions\", \"source\", \"suggestionLimit\", \"translateChoice\", \"validate\", \"variant\"]);\n  warning(isValidElement(optionText) && !matchSuggestion, \"If the optionText prop is a React element, you must also specify the matchSuggestion prop:\\n<AutocompleteArrayInput\\n    matchSuggestion={(filterValue, suggestion) => true}\\n/>\\n        \");\n  warning(source === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the source prop\");\n  warning(choices === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the choices prop\");\n  var classes = useStyles(props);\n  var inputEl = useRef();\n  var anchorEl = useRef();\n  var _k = useInput(__assign({\n      format: format,\n      id: idOverride,\n      input: inputOverride,\n      meta: metaOverride,\n      onBlur: onBlur,\n      onChange: onChange,\n      onFocus: onFocus,\n      parse: parse,\n      resource: resource,\n      source: source,\n      validate: validate\n    }, rest)),\n    id = _k.id,\n    input = _k.input,\n    isRequired = _k.isRequired,\n    _l = _k.meta,\n    touched = _l.touched,\n    error = _l.error,\n    submitError = _l.submitError;\n  var values = input.value || emptyArray;\n  var _m = React.useState(''),\n    filterValue = _m[0],\n    setFilterValue = _m[1];\n  var getSuggestionFromValue = useCallback(function (value) {\n    return choices.find(function (choice) {\n      return get(choice, optionValue) === value;\n    });\n  }, [choices, optionValue]);\n  var selectedItems = useMemo(function () {\n    return values.map(getSuggestionFromValue);\n  }, [getSuggestionFromValue, values]);\n  var _o = useSuggestions({\n      allowDuplicates: allowDuplicates,\n      allowEmpty: allowEmpty,\n      choices: choices,\n      emptyText: emptyText,\n      emptyValue: emptyValue,\n      limitChoicesToValue: limitChoicesToValue,\n      matchSuggestion: matchSuggestion,\n      optionText: optionText,\n      optionValue: optionValue,\n      selectedItem: selectedItems,\n      suggestionLimit: suggestionLimit,\n      translateChoice: translateChoice\n    }),\n    getChoiceText = _o.getChoiceText,\n    getChoiceValue = _o.getChoiceValue,\n    getSuggestions = _o.getSuggestions;\n  // eslint-disable-next-line\n  var debouncedSetFilter = useCallback(debounce(setFilter || DefaultSetFilter, debounceDelay), [setFilter, debounceDelay]);\n  var handleFilterChange = useCallback(function (eventOrValue) {\n    var event = eventOrValue;\n    var value = event.target ? event.target.value : eventOrValue;\n    setFilterValue(value);\n    if (setFilter) {\n      debouncedSetFilter(value);\n    }\n  }, [debouncedSetFilter, setFilter, setFilterValue]);\n  // We must reset the filter every time the value changes to ensure we\n  // display at least some choices even if the input has a value.\n  // Otherwise, it would only display the currently selected one and the user\n  // would have to first clear the input before seeing any other choices\n  useEffect(function () {\n    handleFilterChange('');\n  }, [values.join(','), handleFilterChange]); // eslint-disable-line react-hooks/exhaustive-deps\n  var handleKeyDown = useCallback(function (event) {\n    // Remove latest item from array when user hits backspace with no text\n    if (selectedItems.length && !filterValue.length && event.key === 'Backspace') {\n      var newSelectedItems = selectedItems.slice(0, selectedItems.length - 1);\n      input.onChange(newSelectedItems.map(getChoiceValue));\n    }\n  }, [filterValue.length, getChoiceValue, input, selectedItems]);\n  var handleChange = useCallback(function (item, newItem) {\n    var finalItem = newItem || item;\n    var newSelectedItems = !allowDuplicates && selectedItems.includes(finalItem) ? __spreadArray([], selectedItems, true) : __spreadArray(__spreadArray([], selectedItems, true), [finalItem], false);\n    setFilterValue('');\n    input.onChange(newSelectedItems.map(getChoiceValue));\n  }, [allowDuplicates, getChoiceValue, input, selectedItems, setFilterValue]);\n  var _p = useSupportCreateSuggestion({\n      create: create,\n      createLabel: createLabel,\n      createItemLabel: createItemLabel,\n      createValue: createValue,\n      handleChange: handleChange,\n      filter: filterValue,\n      onCreate: onCreate,\n      optionText: optionText\n    }),\n    getCreateItem = _p.getCreateItem,\n    handleChangeWithCreateSupport = _p.handleChange,\n    createElement = _p.createElement;\n  var createItem = create || onCreate ? getCreateItem() : null;\n  var handleDelete = useCallback(function (item) {\n    return function () {\n      var newSelectedItems = __spreadArray([], selectedItems, true);\n      newSelectedItems.splice(newSelectedItems.indexOf(item), 1);\n      input.onChange(newSelectedItems.map(getChoiceValue));\n    };\n  }, [input, selectedItems, getChoiceValue]);\n  // This function ensures that the suggestion list stay aligned to the\n  // input element even if it moves (because user scrolled for example)\n  var updateAnchorEl = function () {\n    if (!inputEl.current) {\n      return;\n    }\n    var inputPosition = inputEl.current.getBoundingClientRect();\n    // It works by implementing a mock element providing the only method used\n    // by the PopOver component, getBoundingClientRect, which will return a\n    // position based on the input position\n    if (!anchorEl.current) {\n      anchorEl.current = {\n        getBoundingClientRect: function () {\n          return inputPosition;\n        }\n      };\n    } else {\n      var anchorPosition = anchorEl.current.getBoundingClientRect();\n      if (anchorPosition.x !== inputPosition.x || anchorPosition.y !== inputPosition.y) {\n        anchorEl.current = {\n          getBoundingClientRect: function () {\n            return inputPosition;\n          }\n        };\n      }\n    }\n  };\n  var storeInputRef = function (input) {\n    inputEl.current = input;\n    updateAnchorEl();\n  };\n  var handleBlur = useCallback(function (event) {\n    setFilterValue('');\n    handleFilterChange('');\n    input.onBlur(event);\n  }, [handleFilterChange, input, setFilterValue]);\n  var handleFocus = useCallback(function (openMenu) {\n    return function (event) {\n      openMenu(event);\n      input.onFocus(event);\n    };\n  }, [input]);\n  var handleClick = useCallback(function (openMenu) {\n    return function (event) {\n      if (event.target === inputEl.current) {\n        openMenu(event);\n      }\n    };\n  }, []);\n  var shouldRenderSuggestions = function (val) {\n    if (shouldRenderSuggestionsOverride !== undefined && typeof shouldRenderSuggestionsOverride === 'function') {\n      return shouldRenderSuggestionsOverride(val);\n    }\n    return true;\n  };\n  var _q = InputProps || {},\n    inputRef = _q.inputRef,\n    InputPropsWithoutInputRef = __rest(_q, [\"inputRef\"]);\n  return React.createElement(React.Fragment, null, React.createElement(Downshift, __assign({\n    inputValue: filterValue,\n    onChange: handleChangeWithCreateSupport,\n    selectedItem: selectedItems,\n    itemToString: function (item) {\n      return getChoiceValue(item);\n    }\n  }, rest), function (_a) {\n    var _b, _c;\n    var getInputProps = _a.getInputProps,\n      getItemProps = _a.getItemProps,\n      getLabelProps = _a.getLabelProps,\n      getMenuProps = _a.getMenuProps,\n      isOpen = _a.isOpen,\n      suggestionFilter = _a.inputValue,\n      highlightedIndex = _a.highlightedIndex,\n      openMenu = _a.openMenu;\n    var isMenuOpen = isOpen && shouldRenderSuggestions(suggestionFilter);\n    var _d = getInputProps({\n        onBlur: handleBlur,\n        onFocus: handleFocus(openMenu),\n        onClick: handleClick(openMenu),\n        onKeyDown: handleKeyDown\n      }),\n      idFromDownshift = _d.id,\n      onBlur = _d.onBlur,\n      onChange = _d.onChange,\n      onFocus = _d.onFocus,\n      ref = _d.ref,\n      color = _d.color,\n      size = _d.size,\n      inputProps = __rest(_d, [\"id\", \"onBlur\", \"onChange\", \"onFocus\", \"ref\", \"color\", \"size\"]);\n    var suggestions = __spreadArray(__spreadArray([], getSuggestions(suggestionFilter), true), !!createItem ? [createItem] : [], true);\n    return React.createElement(\"div\", {\n      className: classes.container\n    }, React.createElement(TextField, __assign({\n      id: id,\n      fullWidth: fullWidth,\n      InputProps: __assign({\n        inputRef: mergeRefs([storeInputRef, inputRef]),\n        classes: {\n          root: classNames(classes.inputRoot, (_b = {}, _b[classes.inputRootFilled] = variant === 'filled', _b)),\n          input: classes.inputInput\n        },\n        startAdornment: React.createElement(\"div\", {\n          className: classNames((_c = {}, _c[classes.chipContainerFilled] = variant === 'filled', _c[classes.chipContainerOutlined] = variant === 'outlined', _c))\n        }, selectedItems.filter(function (item) {\n          return !!item;\n        }).map(function (item, index) {\n          return React.createElement(Chip, {\n            key: index,\n            tabIndex: -1,\n            label: getChoiceText(item),\n            className: classes.chip,\n            onDelete: handleDelete(item)\n          });\n        })),\n        endAdornment: loading && React.createElement(AutocompleteInputLoader, null),\n        onBlur: onBlur,\n        onChange: function (event) {\n          handleFilterChange(event);\n          onChange(event);\n        },\n        onFocus: onFocus\n      }, InputPropsWithoutInputRef),\n      error: !!(touched && (error || submitError)),\n      label: React.createElement(FieldTitle, __assign({\n        label: label\n      }, labelProps, {\n        source: source,\n        resource: resource,\n        isRequired: typeof isRequiredOverride !== 'undefined' ? isRequiredOverride : isRequired\n      })),\n      InputLabelProps: getLabelProps({\n        htmlFor: id\n      }),\n      helperText: React.createElement(InputHelperText, {\n        touched: touched,\n        error: error || submitError,\n        helperText: helperText\n      }),\n      variant: variant,\n      margin: margin,\n      color: color,\n      size: size,\n      disabled: disabled\n    }, inputProps, options)), React.createElement(AutocompleteSuggestionList, {\n      isOpen: isMenuOpen,\n      menuProps: getMenuProps({},\n      // https://github.com/downshift-js/downshift/issues/235\n      {\n        suppressRefError: true\n      }),\n      inputEl: inputEl.current,\n      suggestionsContainerProps: suggestionsContainerProps,\n      className: classes.suggestionsContainer\n    }, suggestions.map(function (suggestion, index) {\n      return React.createElement(AutocompleteSuggestionItem, __assign({\n        key: getChoiceValue(suggestion),\n        createValue: createItem === null || createItem === void 0 ? void 0 : createItem.id,\n        suggestion: suggestion,\n        index: index,\n        highlightedIndex: highlightedIndex,\n        isSelected: selectedItems.map(getChoiceValue).includes(getChoiceValue(suggestion)),\n        filterValue: filterValue,\n        getSuggestionText: getChoiceText\n      }, getItemProps({\n        item: suggestion\n      })));\n    })));\n  }), createElement);\n};\nvar emptyArray = [];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      flexGrow: 1,\n      position: 'relative'\n    },\n    suggestionsContainer: {\n      zIndex: theme.zIndex.modal\n    },\n    chip: {\n      margin: theme.spacing(0.5, 0.5, 0.5, 0)\n    },\n    chipContainerFilled: {\n      margin: '27px 12px 10px 0'\n    },\n    chipContainerOutlined: {\n      margin: '12px 12px 10px 0'\n    },\n    inputRoot: {\n      flexWrap: 'wrap'\n    },\n    inputRootFilled: {\n      flexWrap: 'wrap',\n      '& $chip': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'\n      }\n    },\n    inputInput: {\n      width: 'auto',\n      flexGrow: 1\n    }\n  };\n}, {\n  name: 'RaAutocompleteArrayInput'\n});\nvar DefaultSetFilter = function () {};\nexport default AutocompleteArrayInput;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","l","ar","Array","slice","concat","React","useCallback","useEffect","useRef","useMemo","isValidElement","Downshift","classNames","get","TextField","Chip","makeStyles","useInput","FieldTitle","useSuggestions","warning","mergeRefs","debounce","InputHelperText","AutocompleteSuggestionList","AutocompleteSuggestionItem","AutocompleteInputLoader","useSupportCreateSuggestion","AutocompleteArrayInput","props","allowDuplicates","allowEmpty","classesOverride","classes","_a","choices","create","createLabel","createItemLabel","createValue","_b","debounceDelay","disabled","emptyText","emptyValue","format","fullWidth","helperText","idOverride","id","inputOverride","input","isRequiredOverride","isRequired","label","loaded","loading","limitChoicesToValue","_c","margin","matchSuggestion","metaOverride","meta","onBlur","onChange","onCreate","onFocus","_d","options","_e","suggestionsContainerProps","labelProps","InputProps","_f","optionText","_g","optionValue","parse","resource","setFilter","shouldRenderSuggestionsOverride","shouldRenderSuggestions","source","suggestionLimit","_h","translateChoice","validate","_j","variant","rest","undefined","useStyles","inputEl","anchorEl","_k","_l","touched","error","submitError","values","value","emptyArray","_m","useState","filterValue","setFilterValue","getSuggestionFromValue","find","choice","selectedItems","map","_o","selectedItem","getChoiceText","getChoiceValue","getSuggestions","debouncedSetFilter","DefaultSetFilter","handleFilterChange","eventOrValue","event","target","join","handleKeyDown","key","newSelectedItems","handleChange","item","newItem","finalItem","includes","_p","filter","getCreateItem","handleChangeWithCreateSupport","createElement","createItem","handleDelete","splice","updateAnchorEl","current","inputPosition","getBoundingClientRect","anchorPosition","x","y","storeInputRef","handleBlur","handleFocus","openMenu","handleClick","val","_q","inputRef","InputPropsWithoutInputRef","Fragment","inputValue","itemToString","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","suggestionFilter","highlightedIndex","isMenuOpen","onClick","onKeyDown","idFromDownshift","ref","color","size","inputProps","suggestions","className","container","root","inputRoot","inputRootFilled","inputInput","startAdornment","chipContainerFilled","chipContainerOutlined","index","tabIndex","chip","onDelete","endAdornment","InputLabelProps","htmlFor","menuProps","suppressRefError","suggestionsContainer","suggestion","isSelected","getSuggestionText","theme","flexGrow","position","zIndex","modal","spacing","flexWrap","backgroundColor","palette","type","width","name"],"sources":["/node_modules/ra-ui-materialui/esm/input/AutocompleteArrayInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React, { useCallback, useEffect, useRef, useMemo, isValidElement, } from 'react';\nimport Downshift from 'downshift';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport { TextField, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useSuggestions, warning, mergeRefs, } from 'ra-core';\nimport debounce from 'lodash/debounce';\nimport InputHelperText from './InputHelperText';\nimport AutocompleteSuggestionList from './AutocompleteSuggestionList';\nimport AutocompleteSuggestionItem from './AutocompleteSuggestionItem';\nimport { AutocompleteInputLoader } from './AutocompleteInputLoader';\nimport { useSupportCreateSuggestion, } from './useSupportCreateSuggestion';\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` prop\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue);\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <TextField> component\n *\n * @example\n * <AutocompleteArrayInput source=\"author_id\" options={{ color: 'secondary' }} />\n */\nvar AutocompleteArrayInput = function (props) {\n    var allowDuplicates = props.allowDuplicates, allowEmpty = props.allowEmpty, classesOverride = props.classes, _a = props.choices, choices = _a === void 0 ? [] : _a, create = props.create, createLabel = props.createLabel, createItemLabel = props.createItemLabel, createValue = props.createValue, _b = props.debounce, debounceDelay = _b === void 0 ? 250 : _b, disabled = props.disabled, emptyText = props.emptyText, emptyValue = props.emptyValue, format = props.format, fullWidth = props.fullWidth, helperText = props.helperText, idOverride = props.id, inputOverride = props.input, isRequiredOverride = props.isRequired, label = props.label, loaded = props.loaded, loading = props.loading, limitChoicesToValue = props.limitChoicesToValue, _c = props.margin, margin = _c === void 0 ? 'dense' : _c, matchSuggestion = props.matchSuggestion, metaOverride = props.meta, onBlur = props.onBlur, onChange = props.onChange, onCreate = props.onCreate, onFocus = props.onFocus, _d = props.options, _e = _d === void 0 ? {} : _d, suggestionsContainerProps = _e.suggestionsContainerProps, labelProps = _e.labelProps, InputProps = _e.InputProps, options = __rest(_e, [\"suggestionsContainerProps\", \"labelProps\", \"InputProps\"]), _f = props.optionText, optionText = _f === void 0 ? 'name' : _f, _g = props.optionValue, optionValue = _g === void 0 ? 'id' : _g, parse = props.parse, resource = props.resource, setFilter = props.setFilter, shouldRenderSuggestionsOverride = props.shouldRenderSuggestions, source = props.source, suggestionLimit = props.suggestionLimit, _h = props.translateChoice, translateChoice = _h === void 0 ? true : _h, validate = props.validate, _j = props.variant, variant = _j === void 0 ? 'filled' : _j, rest = __rest(props, [\"allowDuplicates\", \"allowEmpty\", \"classes\", \"choices\", \"create\", \"createLabel\", \"createItemLabel\", \"createValue\", \"debounce\", \"disabled\", \"emptyText\", \"emptyValue\", \"format\", \"fullWidth\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"loaded\", \"loading\", \"limitChoicesToValue\", \"margin\", \"matchSuggestion\", \"meta\", \"onBlur\", \"onChange\", \"onCreate\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"setFilter\", \"shouldRenderSuggestions\", \"source\", \"suggestionLimit\", \"translateChoice\", \"validate\", \"variant\"]);\n    warning(isValidElement(optionText) && !matchSuggestion, \"If the optionText prop is a React element, you must also specify the matchSuggestion prop:\\n<AutocompleteArrayInput\\n    matchSuggestion={(filterValue, suggestion) => true}\\n/>\\n        \");\n    warning(source === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the source prop\");\n    warning(choices === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the choices prop\");\n    var classes = useStyles(props);\n    var inputEl = useRef();\n    var anchorEl = useRef();\n    var _k = useInput(__assign({ format: format, id: idOverride, input: inputOverride, meta: metaOverride, onBlur: onBlur, onChange: onChange, onFocus: onFocus, parse: parse, resource: resource, source: source, validate: validate }, rest)), id = _k.id, input = _k.input, isRequired = _k.isRequired, _l = _k.meta, touched = _l.touched, error = _l.error, submitError = _l.submitError;\n    var values = input.value || emptyArray;\n    var _m = React.useState(''), filterValue = _m[0], setFilterValue = _m[1];\n    var getSuggestionFromValue = useCallback(function (value) { return choices.find(function (choice) { return get(choice, optionValue) === value; }); }, [choices, optionValue]);\n    var selectedItems = useMemo(function () { return values.map(getSuggestionFromValue); }, [\n        getSuggestionFromValue,\n        values,\n    ]);\n    var _o = useSuggestions({\n        allowDuplicates: allowDuplicates,\n        allowEmpty: allowEmpty,\n        choices: choices,\n        emptyText: emptyText,\n        emptyValue: emptyValue,\n        limitChoicesToValue: limitChoicesToValue,\n        matchSuggestion: matchSuggestion,\n        optionText: optionText,\n        optionValue: optionValue,\n        selectedItem: selectedItems,\n        suggestionLimit: suggestionLimit,\n        translateChoice: translateChoice,\n    }), getChoiceText = _o.getChoiceText, getChoiceValue = _o.getChoiceValue, getSuggestions = _o.getSuggestions;\n    // eslint-disable-next-line\n    var debouncedSetFilter = useCallback(debounce(setFilter || DefaultSetFilter, debounceDelay), [setFilter, debounceDelay]);\n    var handleFilterChange = useCallback(function (eventOrValue) {\n        var event = eventOrValue;\n        var value = event.target\n            ? event.target.value\n            : eventOrValue;\n        setFilterValue(value);\n        if (setFilter) {\n            debouncedSetFilter(value);\n        }\n    }, [debouncedSetFilter, setFilter, setFilterValue]);\n    // We must reset the filter every time the value changes to ensure we\n    // display at least some choices even if the input has a value.\n    // Otherwise, it would only display the currently selected one and the user\n    // would have to first clear the input before seeing any other choices\n    useEffect(function () {\n        handleFilterChange('');\n    }, [values.join(','), handleFilterChange]); // eslint-disable-line react-hooks/exhaustive-deps\n    var handleKeyDown = useCallback(function (event) {\n        // Remove latest item from array when user hits backspace with no text\n        if (selectedItems.length &&\n            !filterValue.length &&\n            event.key === 'Backspace') {\n            var newSelectedItems = selectedItems.slice(0, selectedItems.length - 1);\n            input.onChange(newSelectedItems.map(getChoiceValue));\n        }\n    }, [filterValue.length, getChoiceValue, input, selectedItems]);\n    var handleChange = useCallback(function (item, newItem) {\n        var finalItem = newItem || item;\n        var newSelectedItems = !allowDuplicates && selectedItems.includes(finalItem)\n            ? __spreadArray([], selectedItems, true) : __spreadArray(__spreadArray([], selectedItems, true), [finalItem], false);\n        setFilterValue('');\n        input.onChange(newSelectedItems.map(getChoiceValue));\n    }, [allowDuplicates, getChoiceValue, input, selectedItems, setFilterValue]);\n    var _p = useSupportCreateSuggestion({\n        create: create,\n        createLabel: createLabel,\n        createItemLabel: createItemLabel,\n        createValue: createValue,\n        handleChange: handleChange,\n        filter: filterValue,\n        onCreate: onCreate,\n        optionText: optionText,\n    }), getCreateItem = _p.getCreateItem, handleChangeWithCreateSupport = _p.handleChange, createElement = _p.createElement;\n    var createItem = create || onCreate ? getCreateItem() : null;\n    var handleDelete = useCallback(function (item) { return function () {\n        var newSelectedItems = __spreadArray([], selectedItems, true);\n        newSelectedItems.splice(newSelectedItems.indexOf(item), 1);\n        input.onChange(newSelectedItems.map(getChoiceValue));\n    }; }, [input, selectedItems, getChoiceValue]);\n    // This function ensures that the suggestion list stay aligned to the\n    // input element even if it moves (because user scrolled for example)\n    var updateAnchorEl = function () {\n        if (!inputEl.current) {\n            return;\n        }\n        var inputPosition = inputEl.current.getBoundingClientRect();\n        // It works by implementing a mock element providing the only method used\n        // by the PopOver component, getBoundingClientRect, which will return a\n        // position based on the input position\n        if (!anchorEl.current) {\n            anchorEl.current = { getBoundingClientRect: function () { return inputPosition; } };\n        }\n        else {\n            var anchorPosition = anchorEl.current.getBoundingClientRect();\n            if (anchorPosition.x !== inputPosition.x ||\n                anchorPosition.y !== inputPosition.y) {\n                anchorEl.current = {\n                    getBoundingClientRect: function () { return inputPosition; },\n                };\n            }\n        }\n    };\n    var storeInputRef = function (input) {\n        inputEl.current = input;\n        updateAnchorEl();\n    };\n    var handleBlur = useCallback(function (event) {\n        setFilterValue('');\n        handleFilterChange('');\n        input.onBlur(event);\n    }, [handleFilterChange, input, setFilterValue]);\n    var handleFocus = useCallback(function (openMenu) { return function (event) {\n        openMenu(event);\n        input.onFocus(event);\n    }; }, [input]);\n    var handleClick = useCallback(function (openMenu) { return function (event) {\n        if (event.target === inputEl.current) {\n            openMenu(event);\n        }\n    }; }, []);\n    var shouldRenderSuggestions = function (val) {\n        if (shouldRenderSuggestionsOverride !== undefined &&\n            typeof shouldRenderSuggestionsOverride === 'function') {\n            return shouldRenderSuggestionsOverride(val);\n        }\n        return true;\n    };\n    var _q = InputProps || {}, inputRef = _q.inputRef, InputPropsWithoutInputRef = __rest(_q, [\"inputRef\"]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Downshift, __assign({ inputValue: filterValue, onChange: handleChangeWithCreateSupport, selectedItem: selectedItems, itemToString: function (item) { return getChoiceValue(item); } }, rest), function (_a) {\n            var _b, _c;\n            var getInputProps = _a.getInputProps, getItemProps = _a.getItemProps, getLabelProps = _a.getLabelProps, getMenuProps = _a.getMenuProps, isOpen = _a.isOpen, suggestionFilter = _a.inputValue, highlightedIndex = _a.highlightedIndex, openMenu = _a.openMenu;\n            var isMenuOpen = isOpen && shouldRenderSuggestions(suggestionFilter);\n            var _d = getInputProps({\n                onBlur: handleBlur,\n                onFocus: handleFocus(openMenu),\n                onClick: handleClick(openMenu),\n                onKeyDown: handleKeyDown,\n            }), idFromDownshift = _d.id, onBlur = _d.onBlur, onChange = _d.onChange, onFocus = _d.onFocus, ref = _d.ref, color = _d.color, size = _d.size, inputProps = __rest(_d, [\"id\", \"onBlur\", \"onChange\", \"onFocus\", \"ref\", \"color\", \"size\"]);\n            var suggestions = __spreadArray(__spreadArray([], getSuggestions(suggestionFilter), true), (!!createItem ? [createItem] : []), true);\n            return (React.createElement(\"div\", { className: classes.container },\n                React.createElement(TextField, __assign({ id: id, fullWidth: fullWidth, InputProps: __assign({ inputRef: mergeRefs([\n                            storeInputRef,\n                            inputRef,\n                        ]), classes: {\n                            root: classNames(classes.inputRoot, (_b = {},\n                                _b[classes.inputRootFilled] = variant === 'filled',\n                                _b)),\n                            input: classes.inputInput,\n                        }, startAdornment: (React.createElement(\"div\", { className: classNames((_c = {},\n                                _c[classes.chipContainerFilled] = variant === 'filled',\n                                _c[classes.chipContainerOutlined] = variant === 'outlined',\n                                _c)) }, selectedItems\n                            .filter(function (item) { return !!item; })\n                            .map(function (item, index) { return (React.createElement(Chip, { key: index, tabIndex: -1, label: getChoiceText(item), className: classes.chip, onDelete: handleDelete(item) })); }))), endAdornment: loading && (React.createElement(AutocompleteInputLoader, null)), onBlur: onBlur, onChange: function (event) {\n                            handleFilterChange(event);\n                            onChange(event);\n                        }, onFocus: onFocus }, InputPropsWithoutInputRef), error: !!(touched && (error || submitError)), label: React.createElement(FieldTitle, __assign({ label: label }, labelProps, { source: source, resource: resource, isRequired: typeof isRequiredOverride !==\n                            'undefined'\n                            ? isRequiredOverride\n                            : isRequired })), InputLabelProps: getLabelProps({\n                        htmlFor: id,\n                    }), helperText: React.createElement(InputHelperText, { touched: touched, error: error || submitError, helperText: helperText }), variant: variant, margin: margin, color: color, size: size, disabled: disabled }, inputProps, options)),\n                React.createElement(AutocompleteSuggestionList, { isOpen: isMenuOpen, menuProps: getMenuProps({}, \n                    // https://github.com/downshift-js/downshift/issues/235\n                    { suppressRefError: true }), inputEl: inputEl.current, suggestionsContainerProps: suggestionsContainerProps, className: classes.suggestionsContainer }, suggestions.map(function (suggestion, index) { return (React.createElement(AutocompleteSuggestionItem, __assign({ key: getChoiceValue(suggestion), createValue: createItem === null || createItem === void 0 ? void 0 : createItem.id, suggestion: suggestion, index: index, highlightedIndex: highlightedIndex, isSelected: selectedItems\n                        .map(getChoiceValue)\n                        .includes(getChoiceValue(suggestion)), filterValue: filterValue, getSuggestionText: getChoiceText }, getItemProps({\n                    item: suggestion,\n                })))); }))));\n        }),\n        createElement));\n};\nvar emptyArray = [];\nvar useStyles = makeStyles(function (theme) { return ({\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    suggestionsContainer: {\n        zIndex: theme.zIndex.modal,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.5, 0.5, 0),\n    },\n    chipContainerFilled: {\n        margin: '27px 12px 10px 0',\n    },\n    chipContainerOutlined: {\n        margin: '12px 12px 10px 0',\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputRootFilled: {\n        flexWrap: 'wrap',\n        '& $chip': {\n            backgroundColor: theme.palette.type === 'light'\n                ? 'rgba(0, 0, 0, 0.09)'\n                : 'rgba(255, 255, 255, 0.09)',\n        },\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n}); }, { name: 'RaAutocompleteArrayInput' });\nvar DefaultSetFilter = function () { };\nexport default AutocompleteArrayInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}