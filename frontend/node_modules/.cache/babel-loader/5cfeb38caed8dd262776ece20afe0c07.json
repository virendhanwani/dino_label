{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { FETCH_END, REFRESH_VIEW } from '../../../../actions';\nimport { GET_LIST, CREATE, DELETE, DELETE_MANY, UPDATE, UPDATE_MANY } from '../../../../core';\nimport ids from './cachedRequests/ids';\nimport total from './cachedRequests/total';\nimport validity from './cachedRequests/validity';\nvar initialState = {};\nvar initialSubstate = {\n  ids: [],\n  total: null,\n  validity: null\n};\nvar cachedRequestsReducer = function (previousState, action) {\n  var _a;\n  var _b;\n  if (previousState === void 0) {\n    previousState = initialState;\n  }\n  if (action.type === REFRESH_VIEW) {\n    if ((_b = action.payload) === null || _b === void 0 ? void 0 : _b.hard) {\n      // force refresh\n      return initialState;\n    } else {\n      // remove validity only\n      var newState_1 = {};\n      Object.keys(previousState).forEach(function (key) {\n        newState_1[key] = __assign(__assign({}, previousState[key]), {\n          validity: undefined\n        });\n      });\n      return newState_1;\n    }\n  }\n  if (action.meta && action.meta.optimistic) {\n    if (action.meta.fetch === CREATE || action.meta.fetch === DELETE || action.meta.fetch === DELETE_MANY || action.meta.fetch === UPDATE || action.meta.fetch === UPDATE_MANY) {\n      // force refresh of all lists because we don't know where the\n      // new/deleted/updated record(s) will appear in the list\n      return initialState;\n    }\n  }\n  if (!action.meta || action.meta.fetchStatus !== FETCH_END) {\n    // not a return from the dataProvider\n    return previousState;\n  }\n  if (action.meta.fetchResponse === CREATE || action.meta.fetchResponse === DELETE || action.meta.fetchResponse === DELETE_MANY || action.meta.fetchResponse === UPDATE || action.meta.fetchResponse === UPDATE_MANY) {\n    // force refresh of all lists because we don't know where the\n    // new/deleted/updated record(s) will appear in the list\n    return initialState;\n  }\n  if (action.meta.fetchResponse !== GET_LIST || action.meta.fromCache) {\n    // looks like a GET_MANY, a GET_ONE, or a cached response\n    return previousState;\n  }\n  var requestKey = JSON.stringify(action.requestPayload);\n  var previousSubState = previousState[requestKey] || initialSubstate;\n  return __assign(__assign({}, previousState), (_a = {}, _a[requestKey] = {\n    ids: ids(previousSubState.ids, action),\n    total: total(previousSubState.total, action),\n    validity: validity(previousSubState.validity, action)\n  }, _a));\n};\nexport default cachedRequestsReducer;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","FETCH_END","REFRESH_VIEW","GET_LIST","CREATE","DELETE","DELETE_MANY","UPDATE","UPDATE_MANY","ids","total","validity","initialState","initialSubstate","cachedRequestsReducer","previousState","action","_a","_b","type","payload","hard","newState_1","keys","forEach","key","undefined","meta","optimistic","fetch","fetchStatus","fetchResponse","fromCache","requestKey","JSON","stringify","requestPayload","previousSubState"],"sources":["/node_modules/ra-core/esm/reducer/admin/resource/list/cachedRequests.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { FETCH_END, REFRESH_VIEW } from '../../../../actions';\nimport { GET_LIST, CREATE, DELETE, DELETE_MANY, UPDATE, UPDATE_MANY, } from '../../../../core';\nimport ids from './cachedRequests/ids';\nimport total from './cachedRequests/total';\nimport validity from './cachedRequests/validity';\nvar initialState = {};\nvar initialSubstate = { ids: [], total: null, validity: null };\nvar cachedRequestsReducer = function (previousState, action) {\n    var _a;\n    var _b;\n    if (previousState === void 0) { previousState = initialState; }\n    if (action.type === REFRESH_VIEW) {\n        if ((_b = action.payload) === null || _b === void 0 ? void 0 : _b.hard) {\n            // force refresh\n            return initialState;\n        }\n        else {\n            // remove validity only\n            var newState_1 = {};\n            Object.keys(previousState).forEach(function (key) {\n                newState_1[key] = __assign(__assign({}, previousState[key]), { validity: undefined });\n            });\n            return newState_1;\n        }\n    }\n    if (action.meta && action.meta.optimistic) {\n        if (action.meta.fetch === CREATE ||\n            action.meta.fetch === DELETE ||\n            action.meta.fetch === DELETE_MANY ||\n            action.meta.fetch === UPDATE ||\n            action.meta.fetch === UPDATE_MANY) {\n            // force refresh of all lists because we don't know where the\n            // new/deleted/updated record(s) will appear in the list\n            return initialState;\n        }\n    }\n    if (!action.meta || action.meta.fetchStatus !== FETCH_END) {\n        // not a return from the dataProvider\n        return previousState;\n    }\n    if (action.meta.fetchResponse === CREATE ||\n        action.meta.fetchResponse === DELETE ||\n        action.meta.fetchResponse === DELETE_MANY ||\n        action.meta.fetchResponse === UPDATE ||\n        action.meta.fetchResponse === UPDATE_MANY) {\n        // force refresh of all lists because we don't know where the\n        // new/deleted/updated record(s) will appear in the list\n        return initialState;\n    }\n    if (action.meta.fetchResponse !== GET_LIST || action.meta.fromCache) {\n        // looks like a GET_MANY, a GET_ONE, or a cached response\n        return previousState;\n    }\n    var requestKey = JSON.stringify(action.requestPayload);\n    var previousSubState = previousState[requestKey] || initialSubstate;\n    return __assign(__assign({}, previousState), (_a = {}, _a[requestKey] = {\n        ids: ids(previousSubState.ids, action),\n        total: total(previousSubState.total, action),\n        validity: validity(previousSubState.validity, action),\n    }, _a));\n};\nexport default cachedRequestsReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}