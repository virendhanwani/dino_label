{"ast":null,"code":"import inflection from 'inflection';\nimport { useStore } from 'react-redux';\nimport { getResources } from '../reducer';\nimport { useTranslate } from '../i18n';\n/**\n * A hook which returns function to get a translated resource name. It will use the label option of the `Resource` component if it was provided.\n *\n * @returns {GetResourceLabel} A function which takes a resource name and an optional number indicating the number of items (used for pluralization) and returns a translated string.\n * @example\n * const Menu = () => {\n *     const resources = useSelector(getResources, shallowEqual);\n *     const getResourceLabel = useGetResourceLabel();\n *\n *     return (\n *         <ul>\n *             {resources.map(resource => (\n *                 <li key={resource.name}>\n *                     {getResourceLabel(resource.name, 2)}\n *                 </li>\n *             ))}\n *         </ul>\n *     )\n * }\n */\nexport var useGetResourceLabel = function () {\n  var store = useStore();\n  var translate = useTranslate();\n  return function (resource, count) {\n    if (count === void 0) {\n      count = 2;\n    }\n    var resourceDefinition = getResources(store.getState()).find(function (r) {\n      return (r === null || r === void 0 ? void 0 : r.name) === resource;\n    });\n    var label = translate(\"resources.\" + resource + \".name\", {\n      smart_count: count,\n      _: resourceDefinition && resourceDefinition.options && resourceDefinition.options.label ? translate(resourceDefinition.options.label, {\n        smart_count: count,\n        _: resourceDefinition.options.label\n      }) : inflection.humanize(count > 1 ? inflection.pluralize(resource) : inflection.singularize(resource))\n    });\n    return label;\n  };\n};","map":{"version":3,"names":["inflection","useStore","getResources","useTranslate","useGetResourceLabel","store","translate","resource","count","resourceDefinition","getState","find","r","name","label","smart_count","_","options","humanize","pluralize","singularize"],"sources":["/node_modules/ra-core/esm/core/useGetResourceLabel.js"],"sourcesContent":["import inflection from 'inflection';\nimport { useStore } from 'react-redux';\nimport { getResources } from '../reducer';\nimport { useTranslate } from '../i18n';\n/**\n * A hook which returns function to get a translated resource name. It will use the label option of the `Resource` component if it was provided.\n *\n * @returns {GetResourceLabel} A function which takes a resource name and an optional number indicating the number of items (used for pluralization) and returns a translated string.\n * @example\n * const Menu = () => {\n *     const resources = useSelector(getResources, shallowEqual);\n *     const getResourceLabel = useGetResourceLabel();\n *\n *     return (\n *         <ul>\n *             {resources.map(resource => (\n *                 <li key={resource.name}>\n *                     {getResourceLabel(resource.name, 2)}\n *                 </li>\n *             ))}\n *         </ul>\n *     )\n * }\n */\nexport var useGetResourceLabel = function () {\n    var store = useStore();\n    var translate = useTranslate();\n    return function (resource, count) {\n        if (count === void 0) { count = 2; }\n        var resourceDefinition = getResources(store.getState()).find(function (r) { return (r === null || r === void 0 ? void 0 : r.name) === resource; });\n        var label = translate(\"resources.\" + resource + \".name\", {\n            smart_count: count,\n            _: resourceDefinition &&\n                resourceDefinition.options &&\n                resourceDefinition.options.label\n                ? translate(resourceDefinition.options.label, {\n                    smart_count: count,\n                    _: resourceDefinition.options.label,\n                })\n                : inflection.humanize(count > 1\n                    ? inflection.pluralize(resource)\n                    : inflection.singularize(resource)),\n        });\n        return label;\n    };\n};\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,YAAY,QAAQ,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,mBAAmB,GAAG,SAAAA,CAAA,EAAY;EACzC,IAAIC,KAAK,GAAGJ,QAAQ,EAAE;EACtB,IAAIK,SAAS,GAAGH,YAAY,EAAE;EAC9B,OAAO,UAAUI,QAAQ,EAAEC,KAAK,EAAE;IAC9B,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;MAAEA,KAAK,GAAG,CAAC;IAAE;IACnC,IAAIC,kBAAkB,GAAGP,YAAY,CAACG,KAAK,CAACK,QAAQ,EAAE,CAAC,CAACC,IAAI,CAAC,UAAUC,CAAC,EAAE;MAAE,OAAO,CAACA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,CAAC,CAACC,IAAI,MAAMN,QAAQ;IAAE,CAAC,CAAC;IAClJ,IAAIO,KAAK,GAAGR,SAAS,CAAC,YAAY,GAAGC,QAAQ,GAAG,OAAO,EAAE;MACrDQ,WAAW,EAAEP,KAAK;MAClBQ,CAAC,EAAEP,kBAAkB,IACjBA,kBAAkB,CAACQ,OAAO,IAC1BR,kBAAkB,CAACQ,OAAO,CAACH,KAAK,GAC9BR,SAAS,CAACG,kBAAkB,CAACQ,OAAO,CAACH,KAAK,EAAE;QAC1CC,WAAW,EAAEP,KAAK;QAClBQ,CAAC,EAAEP,kBAAkB,CAACQ,OAAO,CAACH;MAClC,CAAC,CAAC,GACAd,UAAU,CAACkB,QAAQ,CAACV,KAAK,GAAG,CAAC,GACzBR,UAAU,CAACmB,SAAS,CAACZ,QAAQ,CAAC,GAC9BP,UAAU,CAACoB,WAAW,CAACb,QAAQ,CAAC;IAC9C,CAAC,CAAC;IACF,OAAOO,KAAK;EAChB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}