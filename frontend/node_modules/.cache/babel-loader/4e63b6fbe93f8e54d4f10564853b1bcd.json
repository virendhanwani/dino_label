{"ast":null,"code":"var _jsxFileName = \"/app/src/admin/Admin.tsx\";\nimport React from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\nimport { UserList, UserEdit, UserCreate } from './Users';\nconst httpClient = (url, options) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\nexport const Admin = () => {\n  return /*#__PURE__*/React.createElement(ReactAdmin, {\n    dataProvider: dataProvider,\n    authProvider: authProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, permissions => [permissions === 'admin' ? /*#__PURE__*/React.createElement(Resource, {\n    name: \"users\",\n    list: UserList,\n    edit: UserEdit,\n    create: UserCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }) : null]);\n};","map":{"version":3,"names":["React","fetchUtils","Admin","ReactAdmin","Resource","simpleRestProvider","authProvider","UserList","UserEdit","UserCreate","httpClient","url","options","headers","Headers","Accept","token","localStorage","getItem","set","fetchJson","dataProvider","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","permissions","name","list","edit","create"],"sources":["/app/src/admin/Admin.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\n\nimport { UserList, UserEdit, UserCreate } from './Users';\n\nconst httpClient = (url: any, options: any) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\n\nexport const Admin: FC = () => {\n  return (\n    <ReactAdmin dataProvider={dataProvider} authProvider={authProvider}>\n      {(permissions: 'admin' | 'user') => [\n        permissions === 'admin' ? (\n          <Resource\n            name=\"users\"\n            list={UserList}\n            edit={UserEdit}\n            create={UserCreate}\n          />\n        ) : null,\n      ]}\n    </ReactAdmin>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,UAAU,EAAEC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,aAAa;AACvE,OAAOC,kBAAkB,MAAM,qBAAqB;AACpD,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,SAAS;AAExD,MAAMC,UAAU,GAAGA,CAACC,GAAQ,EAAEC,OAAY,KAAK;EAC7C,IAAI,CAACA,OAAO,EAAE;IACZA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,IAAI,CAACA,OAAO,CAACC,OAAO,EAAE;IACpBD,OAAO,CAACC,OAAO,GAAG,IAAIC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAmB,CAAC,CAAC;EAC/D;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CN,OAAO,CAACC,OAAO,CAACM,GAAG,CAAC,eAAe,EAAG,UAASH,KAAM,EAAC,CAAC;EACvD,OAAOf,UAAU,CAACmB,SAAS,CAACT,GAAG,EAAEC,OAAO,CAAC;AAC3C,CAAC;AAED,MAAMS,YAAY,GAAGhB,kBAAkB,CAAC,QAAQ,EAAEK,UAAU,CAAC;AAE7D,OAAO,MAAMR,KAAS,GAAGA,CAAA,KAAM;EAC7B,oBACEF,KAAA,CAAAsB,aAAA,CAACnB,UAAU;IAACkB,YAAY,EAAEA,YAAa;IAACf,YAAY,EAAEA,YAAa;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/DC,WAA6B,IAAK,CAClCA,WAAW,KAAK,OAAO,gBACrB7B,KAAA,CAAAsB,aAAA,CAAClB,QAAQ;IACP0B,IAAI,EAAC,OAAO;IACZC,IAAI,EAAExB,QAAS;IACfyB,IAAI,EAAExB,QAAS;IACfyB,MAAM,EAAExB,UAAW;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACnB,GACA,IAAI,CACT,CACU;AAEjB,CAAC"},"metadata":{},"sourceType":"module"}