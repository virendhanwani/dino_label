{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useMemo, useEffect, useRef, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { useGetMany } from '../../dataProvider';\nimport { useForm } from 'react-final-form';\nimport useGetMatching from '../../dataProvider/useGetMatching';\nimport { useTranslate } from '../../i18n';\nimport { getStatusForArrayInput as getDataStatus } from './referenceDataStatus';\nimport { useResourceContext } from '../../core';\nimport { usePaginationState, useSortState } from '..';\nimport { indexById, removeEmpty, useSafeSetState } from '../../util';\n/**\n * Prepare data for the ReferenceArrayInput components\n *\n * @example\n *\n * const { choices, error, loaded, loading } = useReferenceArrayInputController({\n *      basePath: 'resource';\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {string} props.basePath basepath to current resource\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @return {Object} controllerProps Fetched data and callbacks for the ReferenceArrayInput components\n */\nexport var useReferenceArrayInputController = function (props) {\n  var defaultFilter = props.filter,\n    _a = props.filterToQuery,\n    filterToQuery = _a === void 0 ? defaultFilterToQuery : _a,\n    input = props.input,\n    _b = props.page,\n    initialPage = _b === void 0 ? 1 : _b,\n    _c = props.perPage,\n    initialPerPage = _c === void 0 ? 25 : _c,\n    _d = props.sort,\n    initialSort = _d === void 0 ? {\n      field: 'id',\n      order: 'DESC'\n    } : _d,\n    options = props.options,\n    reference = props.reference,\n    source = props.source,\n    enableGetChoices = props.enableGetChoices;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n  // We store the current input value in a ref so that we are able to fetch\n  // only the missing references when the input value changes\n  var inputValue = useRef(input.value);\n  var _e = useSafeSetState(input.value),\n    idsToFetch = _e[0],\n    setIdsToFetch = _e[1];\n  var _f = useSafeSetState(EmptyArray),\n    idsToGetFromStore = _f[0],\n    setIdsToGetFromStore = _f[1];\n  var referenceRecordsFromStore = useSelector(function (state) {\n    return idsToGetFromStore.map(function (id) {\n      return state.admin.resources[reference].data[id];\n    });\n  });\n  // optimization: we fetch selected items only once. When the user selects more items,\n  // as we already have the past selected items in the store, we don't fetch them.\n  useEffect(function () {\n    // Only fetch new ids\n    var newIdsToFetch = difference(input.value, inputValue.current);\n    // Only get from store ids selected and already fetched\n    var newIdsToGetFromStore = difference(input.value, newIdsToFetch);\n    /*\n        input.value (current)\n            +------------------------+\n            | ********************** |\n            | ********************** |  inputValue.current (old)\n            | ********** +-----------------------+\n            | ********** | ooooooooo |           |\n            | ********** | ooooooooo |           |\n            | ********** | ooooooooo |           |\n            | ********** | ooooooooo |           |\n            +---|--------|------|----+           |\n                |        |      |                |\n                |        |      |                |\n                |        +------|----------------+\n                |               |\n        newIdsToFetch    newIdsToGetFromStore\n    */\n    // Change states each time input values changes to avoid keeping previous values no more selected\n    if (!isEqual(idsToFetch, newIdsToFetch)) {\n      setIdsToFetch(newIdsToFetch);\n    }\n    if (!isEqual(idsToGetFromStore, newIdsToGetFromStore)) {\n      setIdsToGetFromStore(newIdsToGetFromStore);\n    }\n    inputValue.current = input.value;\n  }, [idsToFetch, idsToGetFromStore, input.value, setIdsToFetch, setIdsToGetFromStore]);\n  // pagination logic\n  var _g = usePaginationState({\n      page: initialPage,\n      perPage: initialPerPage\n    }),\n    page = _g.page,\n    setPage = _g.setPage,\n    perPage = _g.perPage,\n    setPerPage = _g.setPerPage,\n    pagination = _g.pagination,\n    setPagination = _g.setPagination;\n  var form = useForm();\n  var onSelect = useCallback(function (newIds) {\n    // This could happen when user unselect all items using the datagrid for instance\n    if (newIds.length === 0) {\n      form.change(input.name, EmptyArray);\n      return;\n    }\n    var newValue = new Set(input.value);\n    newIds.forEach(function (newId) {\n      newValue.add(newId);\n    });\n    form.change(input.name, Array.from(newValue));\n  }, [form, input.value, input.name]);\n  var onUnselectItems = useCallback(function () {\n    form.change(input.name, EmptyArray);\n  }, [form, input.name]);\n  var onToggleItem = useCallback(function (id) {\n    if (input.value.some(function (selectedId) {\n      return selectedId === id;\n    })) {\n      form.change(input.name, input.value.filter(function (selectedId) {\n        return selectedId !== id;\n      }));\n    } else {\n      form.change(input.name, __spreadArray(__spreadArray([], input.value, true), [id], false));\n    }\n  }, [form, input.name, input.value]);\n  // sort logic\n  var sortRef = useRef(initialSort);\n  var _h = useSortState(initialSort),\n    sort = _h.sort,\n    setSort = _h.setSort;\n  // ReferenceArrayInput.setSort had a different signature than the one from ListContext.\n  // In order to not break backward compatibility, we added this temporary setSortForList in the\n  // ReferenceArrayInputContext\n  var setSortForList = useCallback(function (field, order) {\n    if (order === void 0) {\n      order = 'ASC';\n    }\n    setSort({\n      field: field,\n      order: order\n    });\n    setPage(1);\n  }, [setPage, setSort]);\n  // Ensure sort can be updated through props too, not just by using the setSort function\n  useEffect(function () {\n    if (!isEqual(initialSort, sortRef.current)) {\n      setSort(initialSort);\n    }\n  }, [setSort, initialSort]);\n  // Ensure pagination can be updated through props too, not just by using the setPagination function\n  var paginationRef = useRef({\n    initialPage: initialPage,\n    initialPerPage: initialPerPage\n  });\n  useEffect(function () {\n    if (!isEqual({\n      initialPage: initialPage,\n      initialPerPage: initialPerPage\n    }, paginationRef.current)) {\n      setPagination({\n        page: initialPage,\n        perPage: initialPerPage\n      });\n    }\n  }, [setPagination, initialPage, initialPerPage]);\n  // filter logic\n  var _j = useSafeSetState(''),\n    queryFilter = _j[0],\n    setFilter = _j[1];\n  var filterRef = useRef(defaultFilter);\n  var _k = useSafeSetState({}),\n    displayedFilters = _k[0],\n    setDisplayedFilters = _k[1];\n  var _l = useSafeSetState(defaultFilter),\n    filterValues = _l[0],\n    setFilterValues = _l[1];\n  var hideFilter = useCallback(function (filterName) {\n    setDisplayedFilters(function (previousState) {\n      var _a = previousState,\n        _b = filterName,\n        _ = _a[_b],\n        newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n      return newState;\n    });\n    setFilterValues(function (previousState) {\n      var _a = previousState,\n        _b = filterName,\n        _ = _a[_b],\n        newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n      return newState;\n    });\n  }, [setDisplayedFilters, setFilterValues]);\n  var showFilter = useCallback(function (filterName, defaultValue) {\n    setDisplayedFilters(function (previousState) {\n      var _a;\n      return __assign(__assign({}, previousState), (_a = {}, _a[filterName] = true, _a));\n    });\n    setFilterValues(function (previousState) {\n      var _a;\n      return __assign(__assign({}, previousState), (_a = {}, _a[filterName] = defaultValue, _a));\n    });\n  }, [setDisplayedFilters, setFilterValues]);\n  var setFilters = useCallback(function (filters, displayedFilters) {\n    setFilterValues(removeEmpty(filters));\n    setDisplayedFilters(displayedFilters);\n    setPage(1);\n  }, [setDisplayedFilters, setFilterValues, setPage]);\n  // handle filter prop change\n  useEffect(function () {\n    if (!isEqual(defaultFilter, filterRef.current)) {\n      filterRef.current = defaultFilter;\n      setFilterValues(defaultFilter);\n    }\n  });\n  // Merge the user filters with the default ones\n  var finalFilter = useMemo(function () {\n    return __assign(__assign({}, defaultFilter), filterToQuery(queryFilter));\n  }, [queryFilter, defaultFilter, filterToQuery]);\n  var _m = useGetMany(reference, idsToFetch || EmptyArray),\n    referenceRecordsFetched = _m.data,\n    loaded = _m.loaded,\n    refetchGetMany = _m.refetch;\n  var referenceRecords = referenceRecordsFetched ? referenceRecordsFetched.concat(referenceRecordsFromStore) : referenceRecordsFromStore;\n  // filter out not found references - happens when the dataProvider doesn't guarantee referential integrity\n  var finalReferenceRecords = referenceRecords.filter(Boolean);\n  var isGetMatchingEnabled = enableGetChoices ? enableGetChoices(finalFilter) : true;\n  var _o = useGetMatching(reference, pagination, sort, finalFilter, source, resource, options ? __assign(__assign({}, options), {\n      enabled: isGetMatchingEnabled\n    }) : {\n      enabled: isGetMatchingEnabled\n    }),\n    matchingReferences = _o.data,\n    matchingReferencesIds = _o.ids,\n    total = _o.total,\n    refetchGetMatching = _o.refetch;\n  // We merge the currently selected records with the matching ones, otherwise\n  // the component displaying the currently selected records may fail\n  var finalMatchingReferences = matchingReferences && matchingReferences.length > 0 ? mergeReferences(matchingReferences, finalReferenceRecords) : finalReferenceRecords.length > 0 ? finalReferenceRecords : matchingReferences;\n  var dataStatus = getDataStatus({\n    input: input,\n    matchingReferences: finalMatchingReferences,\n    referenceRecords: finalReferenceRecords,\n    translate: translate\n  });\n  var refetch = useCallback(function () {\n    refetchGetMany();\n    refetchGetMatching();\n  }, [refetchGetMany, refetchGetMatching]);\n  return {\n    basePath: props.basePath || \"/\" + resource,\n    choices: dataStatus.choices,\n    currentSort: sort,\n    // For the ListContext, we don't want to always display the selected items first.\n    // Indeed it wouldn't work well regarding sorting and pagination\n    data: matchingReferences && matchingReferences.length > 0 ? indexById(matchingReferences) : {},\n    displayedFilters: displayedFilters,\n    error: dataStatus.error,\n    filterValues: filterValues,\n    hasCreate: false,\n    hideFilter: hideFilter,\n    // For the ListContext, we don't want to always display the selected items first.\n    // Indeed it wouldn't work well regarding sorting and pagination\n    ids: matchingReferencesIds || EmptyArray,\n    loaded: loaded,\n    loading: dataStatus.waiting && isGetMatchingEnabled,\n    onSelect: onSelect,\n    onToggleItem: onToggleItem,\n    onUnselectItems: onUnselectItems,\n    page: page,\n    perPage: perPage,\n    refetch: refetch,\n    resource: resource,\n    selectedIds: input.value || EmptyArray,\n    setFilter: setFilter,\n    setFilters: setFilters,\n    setPage: setPage,\n    setPagination: setPagination,\n    setPerPage: setPerPage,\n    setSort: setSort,\n    setSortForList: setSortForList,\n    showFilter: showFilter,\n    warning: dataStatus.warning,\n    total: total\n  };\n};\nvar EmptyArray = [];\n// concatenate and deduplicate two lists of records\nvar mergeReferences = function (ref1, ref2) {\n  var res = __spreadArray([], ref1, true);\n  var ids = ref1.map(function (ref) {\n    return ref.id;\n  });\n  ref2.forEach(function (ref) {\n    if (!ids.includes(ref.id)) {\n      ids.push(ref.id);\n      res.push(ref);\n    }\n  });\n  return res;\n};\nvar defaultFilterToQuery = function (searchText) {\n  return {\n    q: searchText\n  };\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","l","ar","Array","slice","concat","useMemo","useEffect","useRef","useCallback","useSelector","isEqual","difference","useGetMany","useForm","useGetMatching","useTranslate","getStatusForArrayInput","getDataStatus","useResourceContext","usePaginationState","useSortState","indexById","removeEmpty","useSafeSetState","useReferenceArrayInputController","props","defaultFilter","filter","_a","filterToQuery","defaultFilterToQuery","input","_b","page","initialPage","_c","perPage","initialPerPage","_d","sort","initialSort","field","order","options","reference","source","enableGetChoices","resource","translate","inputValue","value","_e","idsToFetch","setIdsToFetch","_f","EmptyArray","idsToGetFromStore","setIdsToGetFromStore","referenceRecordsFromStore","state","map","id","admin","resources","data","newIdsToFetch","current","newIdsToGetFromStore","_g","setPage","setPerPage","pagination","setPagination","form","onSelect","newIds","change","name","newValue","Set","forEach","newId","add","onUnselectItems","onToggleItem","some","selectedId","sortRef","_h","setSort","setSortForList","paginationRef","_j","queryFilter","setFilter","filterRef","_k","displayedFilters","setDisplayedFilters","_l","filterValues","setFilterValues","hideFilter","filterName","previousState","_","newState","showFilter","defaultValue","setFilters","filters","finalFilter","_m","referenceRecordsFetched","loaded","refetchGetMany","refetch","referenceRecords","finalReferenceRecords","Boolean","isGetMatchingEnabled","_o","enabled","matchingReferences","matchingReferencesIds","ids","total","refetchGetMatching","finalMatchingReferences","mergeReferences","dataStatus","basePath","choices","currentSort","error","hasCreate","loading","waiting","selectedIds","warning","ref1","ref2","res","ref","includes","push","searchText","q"],"sources":["/node_modules/ra-core/esm/controller/input/useReferenceArrayInputController.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useMemo, useEffect, useRef, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { useGetMany } from '../../dataProvider';\nimport { useForm } from 'react-final-form';\nimport useGetMatching from '../../dataProvider/useGetMatching';\nimport { useTranslate } from '../../i18n';\nimport { getStatusForArrayInput as getDataStatus } from './referenceDataStatus';\nimport { useResourceContext } from '../../core';\nimport { usePaginationState, useSortState } from '..';\nimport { indexById, removeEmpty, useSafeSetState } from '../../util';\n/**\n * Prepare data for the ReferenceArrayInput components\n *\n * @example\n *\n * const { choices, error, loaded, loading } = useReferenceArrayInputController({\n *      basePath: 'resource';\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {string} props.basePath basepath to current resource\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @return {Object} controllerProps Fetched data and callbacks for the ReferenceArrayInput components\n */\nexport var useReferenceArrayInputController = function (props) {\n    var defaultFilter = props.filter, _a = props.filterToQuery, filterToQuery = _a === void 0 ? defaultFilterToQuery : _a, input = props.input, _b = props.page, initialPage = _b === void 0 ? 1 : _b, _c = props.perPage, initialPerPage = _c === void 0 ? 25 : _c, _d = props.sort, initialSort = _d === void 0 ? { field: 'id', order: 'DESC' } : _d, options = props.options, reference = props.reference, source = props.source, enableGetChoices = props.enableGetChoices;\n    var resource = useResourceContext(props);\n    var translate = useTranslate();\n    // We store the current input value in a ref so that we are able to fetch\n    // only the missing references when the input value changes\n    var inputValue = useRef(input.value);\n    var _e = useSafeSetState(input.value), idsToFetch = _e[0], setIdsToFetch = _e[1];\n    var _f = useSafeSetState(EmptyArray), idsToGetFromStore = _f[0], setIdsToGetFromStore = _f[1];\n    var referenceRecordsFromStore = useSelector(function (state) {\n        return idsToGetFromStore.map(function (id) { return state.admin.resources[reference].data[id]; });\n    });\n    // optimization: we fetch selected items only once. When the user selects more items,\n    // as we already have the past selected items in the store, we don't fetch them.\n    useEffect(function () {\n        // Only fetch new ids\n        var newIdsToFetch = difference(input.value, inputValue.current);\n        // Only get from store ids selected and already fetched\n        var newIdsToGetFromStore = difference(input.value, newIdsToFetch);\n        /*\n            input.value (current)\n                +------------------------+\n                | ********************** |\n                | ********************** |  inputValue.current (old)\n                | ********** +-----------------------+\n                | ********** | ooooooooo |           |\n                | ********** | ooooooooo |           |\n                | ********** | ooooooooo |           |\n                | ********** | ooooooooo |           |\n                +---|--------|------|----+           |\n                    |        |      |                |\n                    |        |      |                |\n                    |        +------|----------------+\n                    |               |\n            newIdsToFetch    newIdsToGetFromStore\n        */\n        // Change states each time input values changes to avoid keeping previous values no more selected\n        if (!isEqual(idsToFetch, newIdsToFetch)) {\n            setIdsToFetch(newIdsToFetch);\n        }\n        if (!isEqual(idsToGetFromStore, newIdsToGetFromStore)) {\n            setIdsToGetFromStore(newIdsToGetFromStore);\n        }\n        inputValue.current = input.value;\n    }, [\n        idsToFetch,\n        idsToGetFromStore,\n        input.value,\n        setIdsToFetch,\n        setIdsToGetFromStore,\n    ]);\n    // pagination logic\n    var _g = usePaginationState({\n        page: initialPage,\n        perPage: initialPerPage,\n    }), page = _g.page, setPage = _g.setPage, perPage = _g.perPage, setPerPage = _g.setPerPage, pagination = _g.pagination, setPagination = _g.setPagination;\n    var form = useForm();\n    var onSelect = useCallback(function (newIds) {\n        // This could happen when user unselect all items using the datagrid for instance\n        if (newIds.length === 0) {\n            form.change(input.name, EmptyArray);\n            return;\n        }\n        var newValue = new Set(input.value);\n        newIds.forEach(function (newId) {\n            newValue.add(newId);\n        });\n        form.change(input.name, Array.from(newValue));\n    }, [form, input.value, input.name]);\n    var onUnselectItems = useCallback(function () {\n        form.change(input.name, EmptyArray);\n    }, [form, input.name]);\n    var onToggleItem = useCallback(function (id) {\n        if (input.value.some(function (selectedId) { return selectedId === id; })) {\n            form.change(input.name, input.value.filter(function (selectedId) { return selectedId !== id; }));\n        }\n        else {\n            form.change(input.name, __spreadArray(__spreadArray([], input.value, true), [id], false));\n        }\n    }, [form, input.name, input.value]);\n    // sort logic\n    var sortRef = useRef(initialSort);\n    var _h = useSortState(initialSort), sort = _h.sort, setSort = _h.setSort;\n    // ReferenceArrayInput.setSort had a different signature than the one from ListContext.\n    // In order to not break backward compatibility, we added this temporary setSortForList in the\n    // ReferenceArrayInputContext\n    var setSortForList = useCallback(function (field, order) {\n        if (order === void 0) { order = 'ASC'; }\n        setSort({ field: field, order: order });\n        setPage(1);\n    }, [setPage, setSort]);\n    // Ensure sort can be updated through props too, not just by using the setSort function\n    useEffect(function () {\n        if (!isEqual(initialSort, sortRef.current)) {\n            setSort(initialSort);\n        }\n    }, [setSort, initialSort]);\n    // Ensure pagination can be updated through props too, not just by using the setPagination function\n    var paginationRef = useRef({ initialPage: initialPage, initialPerPage: initialPerPage });\n    useEffect(function () {\n        if (!isEqual({ initialPage: initialPage, initialPerPage: initialPerPage }, paginationRef.current)) {\n            setPagination({ page: initialPage, perPage: initialPerPage });\n        }\n    }, [setPagination, initialPage, initialPerPage]);\n    // filter logic\n    var _j = useSafeSetState(''), queryFilter = _j[0], setFilter = _j[1];\n    var filterRef = useRef(defaultFilter);\n    var _k = useSafeSetState({}), displayedFilters = _k[0], setDisplayedFilters = _k[1];\n    var _l = useSafeSetState(defaultFilter), filterValues = _l[0], setFilterValues = _l[1];\n    var hideFilter = useCallback(function (filterName) {\n        setDisplayedFilters(function (previousState) {\n            var _a = previousState, _b = filterName, _ = _a[_b], newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n            return newState;\n        });\n        setFilterValues(function (previousState) {\n            var _a = previousState, _b = filterName, _ = _a[_b], newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n            return newState;\n        });\n    }, [setDisplayedFilters, setFilterValues]);\n    var showFilter = useCallback(function (filterName, defaultValue) {\n        setDisplayedFilters(function (previousState) {\n            var _a;\n            return (__assign(__assign({}, previousState), (_a = {}, _a[filterName] = true, _a)));\n        });\n        setFilterValues(function (previousState) {\n            var _a;\n            return (__assign(__assign({}, previousState), (_a = {}, _a[filterName] = defaultValue, _a)));\n        });\n    }, [setDisplayedFilters, setFilterValues]);\n    var setFilters = useCallback(function (filters, displayedFilters) {\n        setFilterValues(removeEmpty(filters));\n        setDisplayedFilters(displayedFilters);\n        setPage(1);\n    }, [setDisplayedFilters, setFilterValues, setPage]);\n    // handle filter prop change\n    useEffect(function () {\n        if (!isEqual(defaultFilter, filterRef.current)) {\n            filterRef.current = defaultFilter;\n            setFilterValues(defaultFilter);\n        }\n    });\n    // Merge the user filters with the default ones\n    var finalFilter = useMemo(function () { return (__assign(__assign({}, defaultFilter), filterToQuery(queryFilter))); }, [queryFilter, defaultFilter, filterToQuery]);\n    var _m = useGetMany(reference, idsToFetch || EmptyArray), referenceRecordsFetched = _m.data, loaded = _m.loaded, refetchGetMany = _m.refetch;\n    var referenceRecords = referenceRecordsFetched\n        ? referenceRecordsFetched.concat(referenceRecordsFromStore)\n        : referenceRecordsFromStore;\n    // filter out not found references - happens when the dataProvider doesn't guarantee referential integrity\n    var finalReferenceRecords = referenceRecords.filter(Boolean);\n    var isGetMatchingEnabled = enableGetChoices\n        ? enableGetChoices(finalFilter)\n        : true;\n    var _o = useGetMatching(reference, pagination, sort, finalFilter, source, resource, options\n        ? __assign(__assign({}, options), { enabled: isGetMatchingEnabled }) : { enabled: isGetMatchingEnabled }), matchingReferences = _o.data, matchingReferencesIds = _o.ids, total = _o.total, refetchGetMatching = _o.refetch;\n    // We merge the currently selected records with the matching ones, otherwise\n    // the component displaying the currently selected records may fail\n    var finalMatchingReferences = matchingReferences && matchingReferences.length > 0\n        ? mergeReferences(matchingReferences, finalReferenceRecords)\n        : finalReferenceRecords.length > 0\n            ? finalReferenceRecords\n            : matchingReferences;\n    var dataStatus = getDataStatus({\n        input: input,\n        matchingReferences: finalMatchingReferences,\n        referenceRecords: finalReferenceRecords,\n        translate: translate,\n    });\n    var refetch = useCallback(function () {\n        refetchGetMany();\n        refetchGetMatching();\n    }, [refetchGetMany, refetchGetMatching]);\n    return {\n        basePath: props.basePath || \"/\" + resource,\n        choices: dataStatus.choices,\n        currentSort: sort,\n        // For the ListContext, we don't want to always display the selected items first.\n        // Indeed it wouldn't work well regarding sorting and pagination\n        data: matchingReferences && matchingReferences.length > 0\n            ? indexById(matchingReferences)\n            : {},\n        displayedFilters: displayedFilters,\n        error: dataStatus.error,\n        filterValues: filterValues,\n        hasCreate: false,\n        hideFilter: hideFilter,\n        // For the ListContext, we don't want to always display the selected items first.\n        // Indeed it wouldn't work well regarding sorting and pagination\n        ids: matchingReferencesIds || EmptyArray,\n        loaded: loaded,\n        loading: dataStatus.waiting && isGetMatchingEnabled,\n        onSelect: onSelect,\n        onToggleItem: onToggleItem,\n        onUnselectItems: onUnselectItems,\n        page: page,\n        perPage: perPage,\n        refetch: refetch,\n        resource: resource,\n        selectedIds: input.value || EmptyArray,\n        setFilter: setFilter,\n        setFilters: setFilters,\n        setPage: setPage,\n        setPagination: setPagination,\n        setPerPage: setPerPage,\n        setSort: setSort,\n        setSortForList: setSortForList,\n        showFilter: showFilter,\n        warning: dataStatus.warning,\n        total: total,\n    };\n};\nvar EmptyArray = [];\n// concatenate and deduplicate two lists of records\nvar mergeReferences = function (ref1, ref2) {\n    var res = __spreadArray([], ref1, true);\n    var ids = ref1.map(function (ref) { return ref.id; });\n    ref2.forEach(function (ref) {\n        if (!ids.includes(ref.id)) {\n            ids.push(ref.id);\n            res.push(ref);\n        }\n    });\n    return res;\n};\nvar defaultFilterToQuery = function (searchText) { return ({ q: searchText }); };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}