{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { FETCH_END, REFRESH_VIEW } from '../../../actions';\nimport { CREATE, DELETE, DELETE_MANY, GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE, UPDATE, UPDATE_MANY } from '../../../core';\nvar initialState = {};\nvar validityReducer = function (previousState, _a) {\n  if (previousState === void 0) {\n    previousState = initialState;\n  }\n  var type = _a.type,\n    payload = _a.payload,\n    requestPayload = _a.requestPayload,\n    meta = _a.meta;\n  if (type === REFRESH_VIEW) {\n    return initialState;\n  }\n  if (!meta || !meta.fetchResponse || meta.fetchStatus !== FETCH_END || meta.fromCache === true) {\n    return previousState;\n  }\n  if (payload.validUntil) {\n    // store the validity date\n    switch (meta.fetchResponse) {\n      case GET_LIST:\n      case GET_MANY:\n      case GET_MANY_REFERENCE:\n        return addIds(payload.data.map(function (record) {\n          return record.id;\n        }), payload.validUntil, previousState);\n      case UPDATE_MANY:\n        return addIds(payload.data, payload.validUntil, previousState);\n      case UPDATE:\n      case CREATE:\n      case GET_ONE:\n        return addIds([payload.data.id], payload.validUntil, previousState);\n      case DELETE:\n      case DELETE_MANY:\n        throw new Error('Responses to dataProvider.delete() or dataProvider.deleteMany() should not contain a validUntil param');\n      default:\n        return previousState;\n    }\n  } else {\n    // remove the validity date\n    switch (meta.fetchResponse) {\n      case GET_LIST:\n      case GET_MANY:\n      case GET_MANY_REFERENCE:\n        return removeIds(payload.data.map(function (record) {\n          return record.id;\n        }), previousState);\n      case UPDATE:\n      case CREATE:\n      case GET_ONE:\n        return removeIds([payload.data.id], previousState);\n      case UPDATE_MANY:\n        return removeIds(payload.data, previousState);\n      case DELETE:\n        return removeIds([requestPayload.id], previousState);\n      case DELETE_MANY:\n        return removeIds(requestPayload.ids, previousState);\n      default:\n        return previousState;\n    }\n  }\n};\nvar addIds = function (ids, validUntil, oldValidityRegistry) {\n  if (ids === void 0) {\n    ids = [];\n  }\n  var validityRegistry = __assign({}, oldValidityRegistry);\n  ids.forEach(function (id) {\n    validityRegistry[id] = validUntil;\n  });\n  return validityRegistry;\n};\nvar removeIds = function (ids, oldValidityRegistry) {\n  if (ids === void 0) {\n    ids = [];\n  }\n  var validityRegistry = __assign({}, oldValidityRegistry);\n  ids.forEach(function (id) {\n    delete validityRegistry[id];\n  });\n  return validityRegistry;\n};\nexport default validityReducer;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","FETCH_END","REFRESH_VIEW","CREATE","DELETE","DELETE_MANY","GET_LIST","GET_MANY","GET_MANY_REFERENCE","GET_ONE","UPDATE","UPDATE_MANY","initialState","validityReducer","previousState","_a","type","payload","requestPayload","meta","fetchResponse","fetchStatus","fromCache","validUntil","addIds","data","map","record","id","Error","removeIds","ids","oldValidityRegistry","validityRegistry","forEach"],"sources":["/node_modules/ra-core/esm/reducer/admin/resource/validity.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { FETCH_END, REFRESH_VIEW } from '../../../actions';\nimport { CREATE, DELETE, DELETE_MANY, GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE, UPDATE, UPDATE_MANY, } from '../../../core';\nvar initialState = {};\nvar validityReducer = function (previousState, _a) {\n    if (previousState === void 0) { previousState = initialState; }\n    var type = _a.type, payload = _a.payload, requestPayload = _a.requestPayload, meta = _a.meta;\n    if (type === REFRESH_VIEW) {\n        return initialState;\n    }\n    if (!meta ||\n        !meta.fetchResponse ||\n        meta.fetchStatus !== FETCH_END ||\n        meta.fromCache === true) {\n        return previousState;\n    }\n    if (payload.validUntil) {\n        // store the validity date\n        switch (meta.fetchResponse) {\n            case GET_LIST:\n            case GET_MANY:\n            case GET_MANY_REFERENCE:\n                return addIds(payload.data.map(function (record) { return record.id; }), payload.validUntil, previousState);\n            case UPDATE_MANY:\n                return addIds(payload.data, payload.validUntil, previousState);\n            case UPDATE:\n            case CREATE:\n            case GET_ONE:\n                return addIds([payload.data.id], payload.validUntil, previousState);\n            case DELETE:\n            case DELETE_MANY:\n                throw new Error('Responses to dataProvider.delete() or dataProvider.deleteMany() should not contain a validUntil param');\n            default:\n                return previousState;\n        }\n    }\n    else {\n        // remove the validity date\n        switch (meta.fetchResponse) {\n            case GET_LIST:\n            case GET_MANY:\n            case GET_MANY_REFERENCE:\n                return removeIds(payload.data.map(function (record) { return record.id; }), previousState);\n            case UPDATE:\n            case CREATE:\n            case GET_ONE:\n                return removeIds([payload.data.id], previousState);\n            case UPDATE_MANY:\n                return removeIds(payload.data, previousState);\n            case DELETE:\n                return removeIds([requestPayload.id], previousState);\n            case DELETE_MANY:\n                return removeIds(requestPayload.ids, previousState);\n            default:\n                return previousState;\n        }\n    }\n};\nvar addIds = function (ids, validUntil, oldValidityRegistry) {\n    if (ids === void 0) { ids = []; }\n    var validityRegistry = __assign({}, oldValidityRegistry);\n    ids.forEach(function (id) {\n        validityRegistry[id] = validUntil;\n    });\n    return validityRegistry;\n};\nvar removeIds = function (ids, oldValidityRegistry) {\n    if (ids === void 0) { ids = []; }\n    var validityRegistry = __assign({}, oldValidityRegistry);\n    ids.forEach(function (id) {\n        delete validityRegistry[id];\n    });\n    return validityRegistry;\n};\nexport default validityReducer;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,SAASO,SAAS,EAAEC,YAAY,QAAQ,kBAAkB;AAC1D,SAASC,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,kBAAkB,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,QAAS,eAAe;AAClI,IAAIC,YAAY,GAAG,CAAC,CAAC;AACrB,IAAIC,eAAe,GAAG,SAAAA,CAAUC,aAAa,EAAEC,EAAE,EAAE;EAC/C,IAAID,aAAa,KAAK,KAAK,CAAC,EAAE;IAAEA,aAAa,GAAGF,YAAY;EAAE;EAC9D,IAAII,IAAI,GAAGD,EAAE,CAACC,IAAI;IAAEC,OAAO,GAAGF,EAAE,CAACE,OAAO;IAAEC,cAAc,GAAGH,EAAE,CAACG,cAAc;IAAEC,IAAI,GAAGJ,EAAE,CAACI,IAAI;EAC5F,IAAIH,IAAI,KAAKd,YAAY,EAAE;IACvB,OAAOU,YAAY;EACvB;EACA,IAAI,CAACO,IAAI,IACL,CAACA,IAAI,CAACC,aAAa,IACnBD,IAAI,CAACE,WAAW,KAAKpB,SAAS,IAC9BkB,IAAI,CAACG,SAAS,KAAK,IAAI,EAAE;IACzB,OAAOR,aAAa;EACxB;EACA,IAAIG,OAAO,CAACM,UAAU,EAAE;IACpB;IACA,QAAQJ,IAAI,CAACC,aAAa;MACtB,KAAKd,QAAQ;MACb,KAAKC,QAAQ;MACb,KAAKC,kBAAkB;QACnB,OAAOgB,MAAM,CAACP,OAAO,CAACQ,IAAI,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;UAAE,OAAOA,MAAM,CAACC,EAAE;QAAE,CAAC,CAAC,EAAEX,OAAO,CAACM,UAAU,EAAET,aAAa,CAAC;MAC/G,KAAKH,WAAW;QACZ,OAAOa,MAAM,CAACP,OAAO,CAACQ,IAAI,EAAER,OAAO,CAACM,UAAU,EAAET,aAAa,CAAC;MAClE,KAAKJ,MAAM;MACX,KAAKP,MAAM;MACX,KAAKM,OAAO;QACR,OAAOe,MAAM,CAAC,CAACP,OAAO,CAACQ,IAAI,CAACG,EAAE,CAAC,EAAEX,OAAO,CAACM,UAAU,EAAET,aAAa,CAAC;MACvE,KAAKV,MAAM;MACX,KAAKC,WAAW;QACZ,MAAM,IAAIwB,KAAK,CAAC,uGAAuG,CAAC;MAC5H;QACI,OAAOf,aAAa;IAAC;EAEjC,CAAC,MACI;IACD;IACA,QAAQK,IAAI,CAACC,aAAa;MACtB,KAAKd,QAAQ;MACb,KAAKC,QAAQ;MACb,KAAKC,kBAAkB;QACnB,OAAOsB,SAAS,CAACb,OAAO,CAACQ,IAAI,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;UAAE,OAAOA,MAAM,CAACC,EAAE;QAAE,CAAC,CAAC,EAAEd,aAAa,CAAC;MAC9F,KAAKJ,MAAM;MACX,KAAKP,MAAM;MACX,KAAKM,OAAO;QACR,OAAOqB,SAAS,CAAC,CAACb,OAAO,CAACQ,IAAI,CAACG,EAAE,CAAC,EAAEd,aAAa,CAAC;MACtD,KAAKH,WAAW;QACZ,OAAOmB,SAAS,CAACb,OAAO,CAACQ,IAAI,EAAEX,aAAa,CAAC;MACjD,KAAKV,MAAM;QACP,OAAO0B,SAAS,CAAC,CAACZ,cAAc,CAACU,EAAE,CAAC,EAAEd,aAAa,CAAC;MACxD,KAAKT,WAAW;QACZ,OAAOyB,SAAS,CAACZ,cAAc,CAACa,GAAG,EAAEjB,aAAa,CAAC;MACvD;QACI,OAAOA,aAAa;IAAC;EAEjC;AACJ,CAAC;AACD,IAAIU,MAAM,GAAG,SAAAA,CAAUO,GAAG,EAAER,UAAU,EAAES,mBAAmB,EAAE;EACzD,IAAID,GAAG,KAAK,KAAK,CAAC,EAAE;IAAEA,GAAG,GAAG,EAAE;EAAE;EAChC,IAAIE,gBAAgB,GAAG9C,QAAQ,CAAC,CAAC,CAAC,EAAE6C,mBAAmB,CAAC;EACxDD,GAAG,CAACG,OAAO,CAAC,UAAUN,EAAE,EAAE;IACtBK,gBAAgB,CAACL,EAAE,CAAC,GAAGL,UAAU;EACrC,CAAC,CAAC;EACF,OAAOU,gBAAgB;AAC3B,CAAC;AACD,IAAIH,SAAS,GAAG,SAAAA,CAAUC,GAAG,EAAEC,mBAAmB,EAAE;EAChD,IAAID,GAAG,KAAK,KAAK,CAAC,EAAE;IAAEA,GAAG,GAAG,EAAE;EAAE;EAChC,IAAIE,gBAAgB,GAAG9C,QAAQ,CAAC,CAAC,CAAC,EAAE6C,mBAAmB,CAAC;EACxDD,GAAG,CAACG,OAAO,CAAC,UAAUN,EAAE,EAAE;IACtB,OAAOK,gBAAgB,CAACL,EAAE,CAAC;EAC/B,CAAC,CAAC;EACF,OAAOK,gBAAgB;AAC3B,CAAC;AACD,eAAepB,eAAe"},"metadata":{},"sourceType":"module"}