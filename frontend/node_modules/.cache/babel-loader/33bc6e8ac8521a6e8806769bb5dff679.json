{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport Polyglot from 'node-polyglot';\n/**\n * Build a polyglot-based i18nProvider based on a function returning the messages for a locale\n *\n * @example\n *\n * import { Admin, Resource, polyglotI18nProvider } from 'react-admin';\n * import englishMessages from 'ra-language-english';\n * import frenchMessages from 'ra-language-french';\n *\n * const messages = {\n *     fr: frenchMessages,\n *     en: englishMessages,\n * };\n * const i18nProvider = polyglotI18nProvider(locale => messages[locale])\n */\nexport default (function (getMessages, initialLocale, polyglotOptions) {\n  if (initialLocale === void 0) {\n    initialLocale = 'en';\n  }\n  if (polyglotOptions === void 0) {\n    polyglotOptions = {};\n  }\n  var locale = initialLocale;\n  var messages = getMessages(initialLocale);\n  if (messages instanceof Promise) {\n    throw new Error(\"The i18nProvider returned a Promise for the messages of the default locale (\" + initialLocale + \"). Please update your i18nProvider to return the messages of the default locale in a synchronous way.\");\n  }\n  var polyglot = new Polyglot(__assign({\n    locale: locale,\n    phrases: __assign({\n      '': ''\n    }, messages)\n  }, polyglotOptions));\n  var translate = polyglot.t.bind(polyglot);\n  return {\n    translate: function (key, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return translate(key, options);\n    },\n    changeLocale: function (newLocale) {\n      // We systematically return a Promise for the messages because\n      // getMessages may return a Promise\n      return Promise.resolve(getMessages(newLocale)).then(function (messages) {\n        locale = newLocale;\n        var newPolyglot = new Polyglot(__assign({\n          locale: newLocale,\n          phrases: __assign({\n            '': ''\n          }, messages)\n        }, polyglotOptions));\n        translate = newPolyglot.t.bind(newPolyglot);\n      });\n    },\n    getLocale: function () {\n      return locale;\n    }\n  };\n});","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Polyglot","getMessages","initialLocale","polyglotOptions","locale","messages","Promise","Error","polyglot","phrases","translate","bind","key","options","changeLocale","newLocale","resolve","then","newPolyglot","getLocale"],"sources":["/node_modules/ra-i18n-polyglot/esm/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport Polyglot from 'node-polyglot';\n/**\n * Build a polyglot-based i18nProvider based on a function returning the messages for a locale\n *\n * @example\n *\n * import { Admin, Resource, polyglotI18nProvider } from 'react-admin';\n * import englishMessages from 'ra-language-english';\n * import frenchMessages from 'ra-language-french';\n *\n * const messages = {\n *     fr: frenchMessages,\n *     en: englishMessages,\n * };\n * const i18nProvider = polyglotI18nProvider(locale => messages[locale])\n */\nexport default (function (getMessages, initialLocale, polyglotOptions) {\n    if (initialLocale === void 0) { initialLocale = 'en'; }\n    if (polyglotOptions === void 0) { polyglotOptions = {}; }\n    var locale = initialLocale;\n    var messages = getMessages(initialLocale);\n    if (messages instanceof Promise) {\n        throw new Error(\"The i18nProvider returned a Promise for the messages of the default locale (\" + initialLocale + \"). Please update your i18nProvider to return the messages of the default locale in a synchronous way.\");\n    }\n    var polyglot = new Polyglot(__assign({ locale: locale, phrases: __assign({ '': '' }, messages) }, polyglotOptions));\n    var translate = polyglot.t.bind(polyglot);\n    return {\n        translate: function (key, options) {\n            if (options === void 0) { options = {}; }\n            return translate(key, options);\n        },\n        changeLocale: function (newLocale) {\n            // We systematically return a Promise for the messages because\n            // getMessages may return a Promise\n            return Promise.resolve(getMessages(newLocale)).then(function (messages) {\n                locale = newLocale;\n                var newPolyglot = new Polyglot(__assign({ locale: newLocale, phrases: __assign({ '': '' }, messages) }, polyglotOptions));\n                translate = newPolyglot.t.bind(newPolyglot);\n            });\n        },\n        getLocale: function () { return locale; },\n    };\n});\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAOO,QAAQ,MAAM,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUC,WAAW,EAAEC,aAAa,EAAEC,eAAe,EAAE;EACnE,IAAID,aAAa,KAAK,KAAK,CAAC,EAAE;IAAEA,aAAa,GAAG,IAAI;EAAE;EACtD,IAAIC,eAAe,KAAK,KAAK,CAAC,EAAE;IAAEA,eAAe,GAAG,CAAC,CAAC;EAAE;EACxD,IAAIC,MAAM,GAAGF,aAAa;EAC1B,IAAIG,QAAQ,GAAGJ,WAAW,CAACC,aAAa,CAAC;EACzC,IAAIG,QAAQ,YAAYC,OAAO,EAAE;IAC7B,MAAM,IAAIC,KAAK,CAAC,8EAA8E,GAAGL,aAAa,GAAG,uGAAuG,CAAC;EAC7N;EACA,IAAIM,QAAQ,GAAG,IAAIR,QAAQ,CAACd,QAAQ,CAAC;IAAEkB,MAAM,EAAEA,MAAM;IAAEK,OAAO,EAAEvB,QAAQ,CAAC;MAAE,EAAE,EAAE;IAAG,CAAC,EAAEmB,QAAQ;EAAE,CAAC,EAAEF,eAAe,CAAC,CAAC;EACnH,IAAIO,SAAS,GAAGF,QAAQ,CAACnB,CAAC,CAACsB,IAAI,CAACH,QAAQ,CAAC;EACzC,OAAO;IACHE,SAAS,EAAE,SAAAA,CAAUE,GAAG,EAAEC,OAAO,EAAE;MAC/B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;QAAEA,OAAO,GAAG,CAAC,CAAC;MAAE;MACxC,OAAOH,SAAS,CAACE,GAAG,EAAEC,OAAO,CAAC;IAClC,CAAC;IACDC,YAAY,EAAE,SAAAA,CAAUC,SAAS,EAAE;MAC/B;MACA;MACA,OAAOT,OAAO,CAACU,OAAO,CAACf,WAAW,CAACc,SAAS,CAAC,CAAC,CAACE,IAAI,CAAC,UAAUZ,QAAQ,EAAE;QACpED,MAAM,GAAGW,SAAS;QAClB,IAAIG,WAAW,GAAG,IAAIlB,QAAQ,CAACd,QAAQ,CAAC;UAAEkB,MAAM,EAAEW,SAAS;UAAEN,OAAO,EAAEvB,QAAQ,CAAC;YAAE,EAAE,EAAE;UAAG,CAAC,EAAEmB,QAAQ;QAAE,CAAC,EAAEF,eAAe,CAAC,CAAC;QACzHO,SAAS,GAAGQ,WAAW,CAAC7B,CAAC,CAACsB,IAAI,CAACO,WAAW,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC;IACDC,SAAS,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAOf,MAAM;IAAE;EAC5C,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}