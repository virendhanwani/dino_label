{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport get from 'lodash/get';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nvar useStyles = makeStyles({\n  chip: {\n    margin: 4,\n    cursor: 'inherit'\n  }\n}, {\n  name: 'RaChipField'\n});\nexport var ChipField = memo(function (props) {\n  var className = props.className,\n    classesOverride = props.classes,\n    source = props.source,\n    emptyText = props.emptyText,\n    rest = __rest(props, [\"className\", \"classes\", \"source\", \"emptyText\"]);\n  var record = useRecordContext(props);\n  var classes = useStyles(props);\n  var value = get(record, source);\n  if (value == null && emptyText) {\n    return React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText);\n  }\n  return React.createElement(Chip, __assign({\n    className: classnames(classes.chip, className),\n    label: value\n  }, sanitizeFieldRestProps(rest)));\n});\nChipField.defaultProps = {\n  addLabel: true\n};\nChipField.propTypes = __assign(__assign({}, ChipField.propTypes), fieldPropTypes);\nChipField.displayName = 'ChipField';\nexport default ChipField;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","get","Chip","Typography","makeStyles","classnames","useRecordContext","sanitizeFieldRestProps","fieldPropTypes","useStyles","chip","margin","cursor","name","ChipField","props","className","classesOverride","classes","source","emptyText","rest","record","value","createElement","component","variant","label","defaultProps","addLabel","propTypes","displayName"],"sources":["/node_modules/ra-ui-materialui/esm/field/ChipField.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport get from 'lodash/get';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nvar useStyles = makeStyles({\n    chip: { margin: 4, cursor: 'inherit' },\n}, { name: 'RaChipField' });\nexport var ChipField = memo(function (props) {\n    var className = props.className, classesOverride = props.classes, source = props.source, emptyText = props.emptyText, rest = __rest(props, [\"className\", \"classes\", \"source\", \"emptyText\"]);\n    var record = useRecordContext(props);\n    var classes = useStyles(props);\n    var value = get(record, source);\n    if (value == null && emptyText) {\n        return (React.createElement(Typography, __assign({ component: \"span\", variant: \"body2\", className: className }, sanitizeFieldRestProps(rest)), emptyText));\n    }\n    return (React.createElement(Chip, __assign({ className: classnames(classes.chip, className), label: value }, sanitizeFieldRestProps(rest))));\n});\nChipField.defaultProps = {\n    addLabel: true,\n};\nChipField.propTypes = __assign(__assign({}, ChipField.propTypes), fieldPropTypes);\nChipField.displayName = 'ChipField';\nexport default ChipField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}