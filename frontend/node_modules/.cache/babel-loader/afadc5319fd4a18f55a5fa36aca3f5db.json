{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useRef, useCallback, useEffect, useMemo } from 'react';\nimport { Form } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { useDispatch } from 'react-redux';\nimport useResetSubmitErrors from './useResetSubmitErrors';\nimport sanitizeEmptyValues from './sanitizeEmptyValues';\nimport getFormInitialValues from './getFormInitialValues';\nimport { setAutomaticRefresh } from '../actions';\nimport { RecordContextProvider, useRecordContext } from '../controller';\nimport { FormContextProvider } from './FormContextProvider';\nimport submitErrorsMutators from './submitErrorsMutators';\nimport useWarnWhenUnsavedChanges from './useWarnWhenUnsavedChanges';\n/**\n * Wrapper around react-final-form's Form to handle redirection on submit,\n * legacy defaultValue prop, and array inputs.\n *\n * Requires a render function, just like react-final-form\n *\n * @example\n *\n * const SimpleForm = props => (\n *    <FormWithRedirect\n *        {...props}\n *        render={formProps => <SimpleFormView {...formProps} />}\n *    />\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {Object} initialValues\n * @prop {Function} validate\n * @prop {Function} save\n * @prop {boolean} submitOnEnter\n * @prop {string} redirect\n * @prop {boolean} sanitizeEmptyValues\n *\n * @param {Props} props\n */\nvar FormWithRedirect = function (_a) {\n  var debug = _a.debug,\n    decorators = _a.decorators,\n    defaultValue = _a.defaultValue,\n    destroyOnUnregister = _a.destroyOnUnregister,\n    form = _a.form,\n    formRootPathname = _a.formRootPathname,\n    initialValues = _a.initialValues,\n    initialValuesEqual = _a.initialValuesEqual,\n    _b = _a.keepDirtyOnReinitialize,\n    keepDirtyOnReinitialize = _b === void 0 ? true : _b,\n    _c = _a.mutators,\n    mutators = _c === void 0 ? defaultMutators : _c,\n    render = _a.render,\n    save = _a.save,\n    saving = _a.saving,\n    _d = _a.subscription,\n    subscription = _d === void 0 ? defaultSubscription : _d,\n    validate = _a.validate,\n    validateOnBlur = _a.validateOnBlur,\n    version = _a.version,\n    warnWhenUnsavedChanges = _a.warnWhenUnsavedChanges,\n    _e = _a.sanitizeEmptyValues,\n    shouldSanitizeEmptyValues = _e === void 0 ? true : _e,\n    props = __rest(_a, [\"debug\", \"decorators\", \"defaultValue\", \"destroyOnUnregister\", \"form\", \"formRootPathname\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"render\", \"save\", \"saving\", \"subscription\", \"validate\", \"validateOnBlur\", \"version\", \"warnWhenUnsavedChanges\", \"sanitizeEmptyValues\"]);\n  var record = useRecordContext(props);\n  var redirect = useRef(props.redirect);\n  var onSave = useRef(save);\n  var formGroups = useRef({});\n  var finalMutators = useMemo(function () {\n    return mutators === defaultMutators ? mutators : __assign(__assign({}, defaultMutators), mutators);\n  }, [mutators]);\n  // We don't use state here for two reasons:\n  // 1. There no way to execute code only after the state has been updated\n  // 2. We don't want the form to rerender when redirect is changed\n  var setRedirect = function (newRedirect) {\n    redirect.current = newRedirect;\n  };\n  /**\n   * A form can have several Save buttons. In case the user clicks on\n   * a Save button with a custom onSave handler, then on a second Save button\n   * without custom onSave handler, the user expects the default save\n   * handler (the one of the Form) to be called.\n   * That's why the SaveButton onClick calls setOnSave() with no parameters\n   * if it has no custom onSave, and why this function forces a default to\n   * save.\n   */\n  var setOnSave = useCallback(function (newOnSave) {\n    typeof newOnSave === 'function' ? onSave.current = newOnSave : onSave.current = save;\n  }, [save]);\n  var formContextValue = useMemo(function () {\n    return {\n      setOnSave: setOnSave,\n      getGroupFields: function (name) {\n        return formGroups.current[name] || [];\n      },\n      registerGroup: function (name) {\n        formGroups.current[name] = formGroups.current[name] || [];\n      },\n      unregisterGroup: function (name) {\n        delete formGroups[name];\n      },\n      registerField: function (source, group) {\n        if (group) {\n          var fields = new Set(formGroups.current[group] || []);\n          fields.add(source);\n          formGroups.current[group] = Array.from(fields);\n        }\n      },\n      unregisterField: function (source, group) {\n        if (group) {\n          if (!formGroups.current[group]) {\n            console.warn(\"Invalid form group \" + group);\n          } else {\n            var fields = new Set(formGroups.current[group]);\n            fields.delete(source);\n            formGroups.current[group] = Array.from(fields);\n          }\n        }\n      }\n    };\n  }, [setOnSave]);\n  var finalInitialValues = useMemo(function () {\n    return getFormInitialValues(initialValues, defaultValue, record);\n  }, [JSON.stringify({\n    initialValues: initialValues,\n    defaultValue: defaultValue,\n    record: record\n  })] // eslint-disable-line\n  );\n\n  var submit = function (values) {\n    var finalRedirect = typeof redirect.current === undefined ? props.redirect : redirect.current;\n    if (shouldSanitizeEmptyValues) {\n      var sanitizedValues = sanitizeEmptyValues(finalInitialValues, values);\n      return onSave.current(sanitizedValues, finalRedirect);\n    } else {\n      return onSave.current(values, finalRedirect);\n    }\n  };\n  return React.createElement(RecordContextProvider, {\n    value: record\n  }, React.createElement(FormContextProvider, {\n    value: formContextValue\n  }, React.createElement(Form, {\n    key: version + \"_\" + ((record === null || record === void 0 ? void 0 : record.id) || ''),\n    debug: debug,\n    decorators: decorators,\n    destroyOnUnregister: destroyOnUnregister,\n    form: form,\n    initialValues: finalInitialValues,\n    initialValuesEqual: initialValuesEqual,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: finalMutators,\n    onSubmit: submit,\n    subscription: subscription,\n    validate: validate,\n    validateOnBlur: validateOnBlur,\n    render: function (formProps) {\n      return (\n        // @ts-ignore Ignored because of a weird error about the active prop\n        React.createElement(FormView, __assign({}, props, formProps, {\n          key: version + \"_\" + ((record === null || record === void 0 ? void 0 : record.id) || ''),\n          record: record,\n          setRedirect: setRedirect,\n          saving: formProps.submitting || saving,\n          render: render,\n          save: save,\n          warnWhenUnsavedChanges: warnWhenUnsavedChanges,\n          formRootPathname: formRootPathname\n        }))\n      );\n    }\n  })));\n};\nvar defaultMutators = __assign(__assign({}, arrayMutators), submitErrorsMutators);\nvar defaultSubscription = {\n  submitting: true,\n  pristine: true,\n  valid: true,\n  invalid: true,\n  validating: true\n};\nvar FormView = function (_a) {\n  var formRootPathname = _a.formRootPathname,\n    render = _a.render,\n    warnWhenUnsavedChanges = _a.warnWhenUnsavedChanges,\n    setRedirect = _a.setRedirect,\n    props = __rest(_a, [\"formRootPathname\", \"render\", \"warnWhenUnsavedChanges\", \"setRedirect\"]);\n  useResetSubmitErrors();\n  useWarnWhenUnsavedChanges(warnWhenUnsavedChanges, formRootPathname);\n  var dispatch = useDispatch();\n  var redirect = props.redirect,\n    handleSubmit = props.handleSubmit,\n    pristine = props.pristine;\n  useEffect(function () {\n    dispatch(setAutomaticRefresh(pristine));\n  }, [dispatch, pristine]);\n  /**\n   * We want to let developers define the redirection target from inside the form,\n   * e.g. in a <SaveButton redirect=\"list\" />.\n   * This callback does two things: handle submit, and change the redirection target.\n   * The actual redirection is done in save(), passed by the main controller.\n   *\n   * If the redirection target doesn't depend on the button clicked, it's a\n   * better option to define it directly on the Form component. In that case,\n   * using handleSubmit() instead of handleSubmitWithRedirect is fine.\n   *\n   * @example\n   *\n   * <Button onClick={() => handleSubmitWithRedirect('edit')}>\n   *     Save and edit\n   * </Button>\n   */\n  var handleSubmitWithRedirect = useCallback(function (redirectTo) {\n    if (redirectTo === void 0) {\n      redirectTo = redirect;\n    }\n    setRedirect(redirectTo);\n    handleSubmit();\n  }, [setRedirect, redirect, handleSubmit]);\n  return render(__assign(__assign({}, props), {\n    handleSubmitWithRedirect: handleSubmitWithRedirect\n  }));\n};\nexport default FormWithRedirect;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useRef","useCallback","useEffect","useMemo","Form","arrayMutators","useDispatch","useResetSubmitErrors","sanitizeEmptyValues","getFormInitialValues","setAutomaticRefresh","RecordContextProvider","useRecordContext","FormContextProvider","submitErrorsMutators","useWarnWhenUnsavedChanges","FormWithRedirect","_a","debug","decorators","defaultValue","destroyOnUnregister","form","formRootPathname","initialValues","initialValuesEqual","_b","keepDirtyOnReinitialize","_c","mutators","defaultMutators","render","save","saving","_d","subscription","defaultSubscription","validate","validateOnBlur","version","warnWhenUnsavedChanges","_e","shouldSanitizeEmptyValues","props","record","redirect","onSave","formGroups","finalMutators","setRedirect","newRedirect","current","setOnSave","newOnSave","formContextValue","getGroupFields","name","registerGroup","unregisterGroup","registerField","source","group","fields","Set","add","Array","from","unregisterField","console","warn","delete","finalInitialValues","JSON","stringify","submit","values","finalRedirect","undefined","sanitizedValues","createElement","value","key","id","onSubmit","formProps","FormView","submitting","pristine","valid","invalid","validating","dispatch","handleSubmit","handleSubmitWithRedirect","redirectTo"],"sources":["/node_modules/ra-core/esm/form/FormWithRedirect.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useRef, useCallback, useEffect, useMemo } from 'react';\nimport { Form } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { useDispatch } from 'react-redux';\nimport useResetSubmitErrors from './useResetSubmitErrors';\nimport sanitizeEmptyValues from './sanitizeEmptyValues';\nimport getFormInitialValues from './getFormInitialValues';\nimport { setAutomaticRefresh } from '../actions';\nimport { RecordContextProvider, useRecordContext } from '../controller';\nimport { FormContextProvider } from './FormContextProvider';\nimport submitErrorsMutators from './submitErrorsMutators';\nimport useWarnWhenUnsavedChanges from './useWarnWhenUnsavedChanges';\n/**\n * Wrapper around react-final-form's Form to handle redirection on submit,\n * legacy defaultValue prop, and array inputs.\n *\n * Requires a render function, just like react-final-form\n *\n * @example\n *\n * const SimpleForm = props => (\n *    <FormWithRedirect\n *        {...props}\n *        render={formProps => <SimpleFormView {...formProps} />}\n *    />\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {Object} initialValues\n * @prop {Function} validate\n * @prop {Function} save\n * @prop {boolean} submitOnEnter\n * @prop {string} redirect\n * @prop {boolean} sanitizeEmptyValues\n *\n * @param {Props} props\n */\nvar FormWithRedirect = function (_a) {\n    var debug = _a.debug, decorators = _a.decorators, defaultValue = _a.defaultValue, destroyOnUnregister = _a.destroyOnUnregister, form = _a.form, formRootPathname = _a.formRootPathname, initialValues = _a.initialValues, initialValuesEqual = _a.initialValuesEqual, _b = _a.keepDirtyOnReinitialize, keepDirtyOnReinitialize = _b === void 0 ? true : _b, _c = _a.mutators, mutators = _c === void 0 ? defaultMutators : _c, render = _a.render, save = _a.save, saving = _a.saving, _d = _a.subscription, subscription = _d === void 0 ? defaultSubscription : _d, validate = _a.validate, validateOnBlur = _a.validateOnBlur, version = _a.version, warnWhenUnsavedChanges = _a.warnWhenUnsavedChanges, _e = _a.sanitizeEmptyValues, shouldSanitizeEmptyValues = _e === void 0 ? true : _e, props = __rest(_a, [\"debug\", \"decorators\", \"defaultValue\", \"destroyOnUnregister\", \"form\", \"formRootPathname\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"render\", \"save\", \"saving\", \"subscription\", \"validate\", \"validateOnBlur\", \"version\", \"warnWhenUnsavedChanges\", \"sanitizeEmptyValues\"]);\n    var record = useRecordContext(props);\n    var redirect = useRef(props.redirect);\n    var onSave = useRef(save);\n    var formGroups = useRef({});\n    var finalMutators = useMemo(function () {\n        return mutators === defaultMutators\n            ? mutators\n            : __assign(__assign({}, defaultMutators), mutators);\n    }, [mutators]);\n    // We don't use state here for two reasons:\n    // 1. There no way to execute code only after the state has been updated\n    // 2. We don't want the form to rerender when redirect is changed\n    var setRedirect = function (newRedirect) {\n        redirect.current = newRedirect;\n    };\n    /**\n     * A form can have several Save buttons. In case the user clicks on\n     * a Save button with a custom onSave handler, then on a second Save button\n     * without custom onSave handler, the user expects the default save\n     * handler (the one of the Form) to be called.\n     * That's why the SaveButton onClick calls setOnSave() with no parameters\n     * if it has no custom onSave, and why this function forces a default to\n     * save.\n     */\n    var setOnSave = useCallback(function (newOnSave) {\n        typeof newOnSave === 'function'\n            ? (onSave.current = newOnSave)\n            : (onSave.current = save);\n    }, [save]);\n    var formContextValue = useMemo(function () { return ({\n        setOnSave: setOnSave,\n        getGroupFields: function (name) { return formGroups.current[name] || []; },\n        registerGroup: function (name) {\n            formGroups.current[name] = formGroups.current[name] || [];\n        },\n        unregisterGroup: function (name) {\n            delete formGroups[name];\n        },\n        registerField: function (source, group) {\n            if (group) {\n                var fields = new Set(formGroups.current[group] || []);\n                fields.add(source);\n                formGroups.current[group] = Array.from(fields);\n            }\n        },\n        unregisterField: function (source, group) {\n            if (group) {\n                if (!formGroups.current[group]) {\n                    console.warn(\"Invalid form group \" + group);\n                }\n                else {\n                    var fields = new Set(formGroups.current[group]);\n                    fields.delete(source);\n                    formGroups.current[group] = Array.from(fields);\n                }\n            }\n        },\n    }); }, [setOnSave]);\n    var finalInitialValues = useMemo(function () { return getFormInitialValues(initialValues, defaultValue, record); }, [JSON.stringify({ initialValues: initialValues, defaultValue: defaultValue, record: record })] // eslint-disable-line\n    );\n    var submit = function (values) {\n        var finalRedirect = typeof redirect.current === undefined\n            ? props.redirect\n            : redirect.current;\n        if (shouldSanitizeEmptyValues) {\n            var sanitizedValues = sanitizeEmptyValues(finalInitialValues, values);\n            return onSave.current(sanitizedValues, finalRedirect);\n        }\n        else {\n            return onSave.current(values, finalRedirect);\n        }\n    };\n    return (React.createElement(RecordContextProvider, { value: record },\n        React.createElement(FormContextProvider, { value: formContextValue },\n            React.createElement(Form, { key: version + \"_\" + ((record === null || record === void 0 ? void 0 : record.id) || ''), debug: debug, decorators: decorators, destroyOnUnregister: destroyOnUnregister, form: form, initialValues: finalInitialValues, initialValuesEqual: initialValuesEqual, keepDirtyOnReinitialize: keepDirtyOnReinitialize, mutators: finalMutators, onSubmit: submit, subscription: subscription, validate: validate, validateOnBlur: validateOnBlur, render: function (formProps) { return (\n                // @ts-ignore Ignored because of a weird error about the active prop\n                React.createElement(FormView, __assign({}, props, formProps, { key: version + \"_\" + ((record === null || record === void 0 ? void 0 : record.id) || ''), record: record, setRedirect: setRedirect, saving: formProps.submitting || saving, render: render, save: save, warnWhenUnsavedChanges: warnWhenUnsavedChanges, formRootPathname: formRootPathname }))); } }))));\n};\nvar defaultMutators = __assign(__assign({}, arrayMutators), submitErrorsMutators);\nvar defaultSubscription = {\n    submitting: true,\n    pristine: true,\n    valid: true,\n    invalid: true,\n    validating: true,\n};\nvar FormView = function (_a) {\n    var formRootPathname = _a.formRootPathname, render = _a.render, warnWhenUnsavedChanges = _a.warnWhenUnsavedChanges, setRedirect = _a.setRedirect, props = __rest(_a, [\"formRootPathname\", \"render\", \"warnWhenUnsavedChanges\", \"setRedirect\"]);\n    useResetSubmitErrors();\n    useWarnWhenUnsavedChanges(warnWhenUnsavedChanges, formRootPathname);\n    var dispatch = useDispatch();\n    var redirect = props.redirect, handleSubmit = props.handleSubmit, pristine = props.pristine;\n    useEffect(function () {\n        dispatch(setAutomaticRefresh(pristine));\n    }, [dispatch, pristine]);\n    /**\n     * We want to let developers define the redirection target from inside the form,\n     * e.g. in a <SaveButton redirect=\"list\" />.\n     * This callback does two things: handle submit, and change the redirection target.\n     * The actual redirection is done in save(), passed by the main controller.\n     *\n     * If the redirection target doesn't depend on the button clicked, it's a\n     * better option to define it directly on the Form component. In that case,\n     * using handleSubmit() instead of handleSubmitWithRedirect is fine.\n     *\n     * @example\n     *\n     * <Button onClick={() => handleSubmitWithRedirect('edit')}>\n     *     Save and edit\n     * </Button>\n     */\n    var handleSubmitWithRedirect = useCallback(function (redirectTo) {\n        if (redirectTo === void 0) { redirectTo = redirect; }\n        setRedirect(redirectTo);\n        handleSubmit();\n    }, [setRedirect, redirect, handleSubmit]);\n    return render(__assign(__assign({}, props), { handleSubmitWithRedirect: handleSubmitWithRedirect }));\n};\nexport default FormWithRedirect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}