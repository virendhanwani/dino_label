{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useSelector } from 'react-redux';\nimport { useReference, getResourceLinkPath, ResourceContextProvider, RecordContextProvider, useRecordContext } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Link from '../Link';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop should be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the `link` prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `link` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * Alternatively, you can also pass a custom function to `link`. It must take reference and record\n * as arguments and return a string\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(record, reference) => \"/path/to/${reference}/${record}\"}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\n * backward-compatibility is still kept\n */\nvar ReferenceField = function (props) {\n  var source = props.source,\n    emptyText = props.emptyText,\n    rest = __rest(props, [\"source\", \"emptyText\"]);\n  var record = useRecordContext(props);\n  var isReferenceDeclared = useSelector(function (state) {\n    return typeof state.admin.resources[props.reference] !== 'undefined';\n  });\n  if (!isReferenceDeclared) {\n    throw new Error(\"You must declare a <Resource name=\\\"\" + props.reference + \"\\\"> in order to use a <ReferenceField reference=\\\"\" + props.reference + \"\\\">\");\n  }\n  return get(record, source) == null ? emptyText ? React.createElement(Typography, {\n    component: \"span\",\n    variant: \"body2\"\n  }, emptyText) : null : React.createElement(NonEmptyReferenceField, __assign({}, rest, {\n    record: record,\n    source: source\n  }));\n};\nReferenceField.propTypes = {\n  addLabel: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.any,\n  className: PropTypes.string,\n  cellClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  record: PropTypes.any,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  sortBy: PropTypes.string,\n  sortByOrder: fieldPropTypes.sortByOrder,\n  source: PropTypes.string.isRequired,\n  translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  link: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]).isRequired\n};\nReferenceField.defaultProps = {\n  addLabel: true,\n  classes: {},\n  link: 'edit'\n};\n/**\n * This intermediate component is made necessary by the useReference hook,\n * which cannot be called conditionally when get(record, source) is empty.\n */\nexport var NonEmptyReferenceField = function (_a) {\n  var children = _a.children,\n    record = _a.record,\n    source = _a.source,\n    props = __rest(_a, [\"children\", \"record\", \"source\"]);\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<ReferenceField> only accepts a single child');\n  }\n  var basePath = props.basePath,\n    resource = props.resource,\n    reference = props.reference;\n  var resourceLinkPath = getResourceLinkPath(__assign(__assign({}, props), {\n    resource: resource,\n    record: record,\n    source: source,\n    basePath: basePath\n  }));\n  return React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(PureReferenceFieldView, __assign({}, props, useReference({\n    reference: reference,\n    id: get(record, source)\n  }), {\n    resourceLinkPath: resourceLinkPath\n  }), children));\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    link: {\n      color: theme.palette.primary.main\n    }\n  };\n}, {\n  name: 'RaReferenceField'\n});\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};\nexport var ReferenceFieldView = function (props) {\n  var basePath = props.basePath,\n    children = props.children,\n    className = props.className,\n    classesOverride = props.classes,\n    error = props.error,\n    loaded = props.loaded,\n    loading = props.loading,\n    record = props.record,\n    reference = props.reference,\n    referenceRecord = props.referenceRecord,\n    refetch = props.refetch,\n    resource = props.resource,\n    resourceLinkPath = props.resourceLinkPath,\n    source = props.source,\n    _a = props.translateChoice,\n    translateChoice = _a === void 0 ? false : _a,\n    rest = __rest(props, [\"basePath\", \"children\", \"className\", \"classes\", \"error\", \"loaded\", \"loading\", \"record\", \"reference\", \"referenceRecord\", \"refetch\", \"resource\", \"resourceLinkPath\", \"source\", \"translateChoice\"]);\n  var classes = useStyles(props);\n  if (error) {\n    return (/* eslint-disable jsx-a11y/role-supports-aria-props */\n      React.createElement(ErrorIcon, {\n        \"aria-errormessage\": error.message ? error.message : error,\n        role: \"presentation\",\n        color: \"error\",\n        fontSize: \"small\"\n      })\n      /* eslint-enable */\n    );\n  }\n\n  if (!loaded) {\n    return React.createElement(LinearProgress, null);\n  }\n  if (!referenceRecord) {\n    return null;\n  }\n  if (resourceLinkPath) {\n    return React.createElement(RecordContextProvider, {\n      value: referenceRecord\n    }, React.createElement(Link, {\n      to: resourceLinkPath,\n      className: className,\n      onClick: stopPropagation\n    }, cloneElement(Children.only(children), __assign({\n      className: classnames(children.props.className, classes.link // force color override for Typography components\n      ),\n      record: referenceRecord,\n      refetch: refetch,\n      resource: reference,\n      basePath: basePath,\n      translateChoice: translateChoice\n    }, sanitizeFieldRestProps(rest)))));\n  }\n  return React.createElement(RecordContextProvider, {\n    value: referenceRecord\n  }, cloneElement(Children.only(children), __assign({\n    record: referenceRecord,\n    resource: reference,\n    basePath: basePath,\n    translateChoice: translateChoice\n  }, sanitizeFieldRestProps(rest))));\n};\nReferenceFieldView.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  className: PropTypes.string,\n  classes: PropTypes.any,\n  loading: PropTypes.bool,\n  record: PropTypes.any,\n  reference: PropTypes.string,\n  referenceRecord: PropTypes.any,\n  resource: PropTypes.string,\n  resourceLinkPath: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([false])]),\n  source: PropTypes.string,\n  translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n};\nvar PureReferenceFieldView = memo(ReferenceFieldView);\nexport default ReferenceField;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","Children","cloneElement","memo","PropTypes","classnames","get","makeStyles","Typography","ErrorIcon","useSelector","useReference","getResourceLinkPath","ResourceContextProvider","RecordContextProvider","useRecordContext","LinearProgress","Link","sanitizeFieldRestProps","fieldPropTypes","ReferenceField","props","source","emptyText","rest","record","isReferenceDeclared","state","admin","resources","reference","Error","createElement","component","variant","NonEmptyReferenceField","propTypes","addLabel","bool","basePath","string","children","element","isRequired","classes","any","className","cellClassName","headerClassName","label","oneOfType","resource","sortBy","sortByOrder","translateChoice","func","linkType","link","defaultProps","_a","count","resourceLinkPath","value","PureReferenceFieldView","id","useStyles","theme","color","palette","primary","main","name","stopPropagation","ReferenceFieldView","classesOverride","error","loaded","loading","referenceRecord","refetch","message","role","fontSize","to","onClick","only","oneOf"],"sources":["/node_modules/ra-ui-materialui/esm/field/ReferenceField.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useSelector } from 'react-redux';\nimport { useReference, getResourceLinkPath, ResourceContextProvider, RecordContextProvider, useRecordContext, } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Link from '../Link';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop should be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the `link` prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `link` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * Alternatively, you can also pass a custom function to `link`. It must take reference and record\n * as arguments and return a string\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(record, reference) => \"/path/to/${reference}/${record}\"}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\n * backward-compatibility is still kept\n */\nvar ReferenceField = function (props) {\n    var source = props.source, emptyText = props.emptyText, rest = __rest(props, [\"source\", \"emptyText\"]);\n    var record = useRecordContext(props);\n    var isReferenceDeclared = useSelector(function (state) { return typeof state.admin.resources[props.reference] !== 'undefined'; });\n    if (!isReferenceDeclared) {\n        throw new Error(\"You must declare a <Resource name=\\\"\" + props.reference + \"\\\"> in order to use a <ReferenceField reference=\\\"\" + props.reference + \"\\\">\");\n    }\n    return get(record, source) == null ? (emptyText ? (React.createElement(Typography, { component: \"span\", variant: \"body2\" }, emptyText)) : null) : (React.createElement(NonEmptyReferenceField, __assign({}, rest, { record: record, source: source })));\n};\nReferenceField.propTypes = {\n    addLabel: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    classes: PropTypes.any,\n    className: PropTypes.string,\n    cellClassName: PropTypes.string,\n    headerClassName: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sortBy: PropTypes.string,\n    sortByOrder: fieldPropTypes.sortByOrder,\n    source: PropTypes.string.isRequired,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    linkType: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    link: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]).isRequired,\n};\nReferenceField.defaultProps = {\n    addLabel: true,\n    classes: {},\n    link: 'edit',\n};\n/**\n * This intermediate component is made necessary by the useReference hook,\n * which cannot be called conditionally when get(record, source) is empty.\n */\nexport var NonEmptyReferenceField = function (_a) {\n    var children = _a.children, record = _a.record, source = _a.source, props = __rest(_a, [\"children\", \"record\", \"source\"]);\n    if (React.Children.count(children) !== 1) {\n        throw new Error('<ReferenceField> only accepts a single child');\n    }\n    var basePath = props.basePath, resource = props.resource, reference = props.reference;\n    var resourceLinkPath = getResourceLinkPath(__assign(__assign({}, props), { resource: resource, record: record, source: source, basePath: basePath }));\n    return (React.createElement(ResourceContextProvider, { value: reference },\n        React.createElement(PureReferenceFieldView, __assign({}, props, useReference({\n            reference: reference,\n            id: get(record, source),\n        }), { resourceLinkPath: resourceLinkPath }), children)));\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    link: {\n        color: theme.palette.primary.main,\n    },\n}); }, { name: 'RaReferenceField' });\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) { return e.stopPropagation(); };\nexport var ReferenceFieldView = function (props) {\n    var basePath = props.basePath, children = props.children, className = props.className, classesOverride = props.classes, error = props.error, loaded = props.loaded, loading = props.loading, record = props.record, reference = props.reference, referenceRecord = props.referenceRecord, refetch = props.refetch, resource = props.resource, resourceLinkPath = props.resourceLinkPath, source = props.source, _a = props.translateChoice, translateChoice = _a === void 0 ? false : _a, rest = __rest(props, [\"basePath\", \"children\", \"className\", \"classes\", \"error\", \"loaded\", \"loading\", \"record\", \"reference\", \"referenceRecord\", \"refetch\", \"resource\", \"resourceLinkPath\", \"source\", \"translateChoice\"]);\n    var classes = useStyles(props);\n    if (error) {\n        return (\n        /* eslint-disable jsx-a11y/role-supports-aria-props */\n        React.createElement(ErrorIcon, { \"aria-errormessage\": error.message ? error.message : error, role: \"presentation\", color: \"error\", fontSize: \"small\" })\n        /* eslint-enable */\n        );\n    }\n    if (!loaded) {\n        return React.createElement(LinearProgress, null);\n    }\n    if (!referenceRecord) {\n        return null;\n    }\n    if (resourceLinkPath) {\n        return (React.createElement(RecordContextProvider, { value: referenceRecord },\n            React.createElement(Link, { to: resourceLinkPath, className: className, onClick: stopPropagation }, cloneElement(Children.only(children), __assign({ className: classnames(children.props.className, classes.link // force color override for Typography components\n                ), record: referenceRecord, refetch: refetch, resource: reference, basePath: basePath, translateChoice: translateChoice }, sanitizeFieldRestProps(rest))))));\n    }\n    return (React.createElement(RecordContextProvider, { value: referenceRecord }, cloneElement(Children.only(children), __assign({ record: referenceRecord, resource: reference, basePath: basePath, translateChoice: translateChoice }, sanitizeFieldRestProps(rest)))));\n};\nReferenceFieldView.propTypes = {\n    basePath: PropTypes.string,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    classes: PropTypes.any,\n    loading: PropTypes.bool,\n    record: PropTypes.any,\n    reference: PropTypes.string,\n    referenceRecord: PropTypes.any,\n    resource: PropTypes.string,\n    resourceLinkPath: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.oneOf([false]),\n    ]),\n    source: PropTypes.string,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n};\nvar PureReferenceFieldView = memo(ReferenceFieldView);\nexport default ReferenceField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}