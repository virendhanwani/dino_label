{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { default as warning } from '../util/warning';\nimport useTranslate from './useTranslate';\nimport useLocale from './useLocale';\n/**\n * Higher-Order Component for getting access to the `locale` and the `translate` function in props.\n *\n * Requires that the app is decorated by the <TranslationProvider> to inject\n * the translation dictionaries and function in the context.\n *\n * @example\n *     import * as React from \"react\";\n *     import { translate } from 'react-admin';\n *\n *     const MyHelloButton = ({ translate }) => (\n *         <button>{translate('myroot.hello.world')}</button>\n *     );\n *\n *     export default translate(MyHelloButton);\n *\n * @param {*} BaseComponent The component to decorate\n */\nvar withTranslate = function (BaseComponent) {\n  warning(typeof BaseComponent === 'string', \"The translate function is a Higher Order Component, and should not be called directly with a translation key. Use the translate function passed as prop to your component props instead:\\n\\nconst MyHelloButton = ({ translate }) => (\\n    <button>{translate('myroot.hello.world')}</button>\\n);\");\n  var TranslatedComponent = function (props) {\n    var translate = useTranslate();\n    var locale = useLocale();\n    return React.createElement(BaseComponent, __assign({}, props, {\n      translate: translate,\n      locale: locale\n    }));\n  };\n  TranslatedComponent.defaultProps = BaseComponent.defaultProps;\n  return TranslatedComponent;\n};\nexport default withTranslate;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","default","warning","useTranslate","useLocale","withTranslate","BaseComponent","TranslatedComponent","props","translate","locale","createElement","defaultProps"],"sources":["/node_modules/ra-core/esm/i18n/translate.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { default as warning } from '../util/warning';\nimport useTranslate from './useTranslate';\nimport useLocale from './useLocale';\n/**\n * Higher-Order Component for getting access to the `locale` and the `translate` function in props.\n *\n * Requires that the app is decorated by the <TranslationProvider> to inject\n * the translation dictionaries and function in the context.\n *\n * @example\n *     import * as React from \"react\";\n *     import { translate } from 'react-admin';\n *\n *     const MyHelloButton = ({ translate }) => (\n *         <button>{translate('myroot.hello.world')}</button>\n *     );\n *\n *     export default translate(MyHelloButton);\n *\n * @param {*} BaseComponent The component to decorate\n */\nvar withTranslate = function (BaseComponent) {\n    warning(typeof BaseComponent === 'string', \"The translate function is a Higher Order Component, and should not be called directly with a translation key. Use the translate function passed as prop to your component props instead:\\n\\nconst MyHelloButton = ({ translate }) => (\\n    <button>{translate('myroot.hello.world')}</button>\\n);\");\n    var TranslatedComponent = function (props) {\n        var translate = useTranslate();\n        var locale = useLocale();\n        return (React.createElement(BaseComponent, __assign({}, props, { translate: translate, locale: locale })));\n    };\n    TranslatedComponent.defaultProps = BaseComponent.defaultProps;\n    return TranslatedComponent;\n};\nexport default withTranslate;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAO,KAAKO,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,IAAIC,OAAO,QAAQ,iBAAiB;AACpD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,SAAAA,CAAUC,aAAa,EAAE;EACzCJ,OAAO,CAAC,OAAOI,aAAa,KAAK,QAAQ,EAAE,oSAAoS,CAAC;EAChV,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,KAAK,EAAE;IACvC,IAAIC,SAAS,GAAGN,YAAY,EAAE;IAC9B,IAAIO,MAAM,GAAGN,SAAS,EAAE;IACxB,OAAQJ,KAAK,CAACW,aAAa,CAACL,aAAa,EAAEpB,QAAQ,CAAC,CAAC,CAAC,EAAEsB,KAAK,EAAE;MAAEC,SAAS,EAAEA,SAAS;MAAEC,MAAM,EAAEA;IAAO,CAAC,CAAC,CAAC;EAC7G,CAAC;EACDH,mBAAmB,CAACK,YAAY,GAAGN,aAAa,CAACM,YAAY;EAC7D,OAAOL,mBAAmB;AAC9B,CAAC;AACD,eAAeF,aAAa"},"metadata":{},"sourceType":"module"}