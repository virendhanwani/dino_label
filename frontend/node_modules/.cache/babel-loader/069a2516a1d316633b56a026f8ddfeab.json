{"ast":null,"code":"import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse } from '../core';\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n  if (logger === void 0) {\n    logger = console.error;\n  }\n  if (!response) {\n    logger(\"The dataProvider returned an empty response for '\" + type + \"'.\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (!response.hasOwnProperty('data')) {\n    logger(\"The response to '\" + type + \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\" + type + \"'.\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithArrayOfRecordsResponse.includes(type) && !Array.isArray(response.data)) {\n    logger(\"The response to '\" + type + \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) && Array.isArray(response.data) && response.data.length > 0 && !response.data[0].hasOwnProperty('id')) {\n    logger(\"The response to '\" + type + \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithRecordResponse.includes(type) && !response.data.hasOwnProperty('id')) {\n    logger(\"The response to '\" + type + \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithTotalResponse.includes(type) && !response.hasOwnProperty('total')) {\n    logger(\"The response to '\" + type + \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n}\nexport default validateResponseFormat;","map":{"version":3,"names":["fetchActionsWithRecordResponse","fetchActionsWithArrayOfIdentifiedRecordsResponse","fetchActionsWithArrayOfRecordsResponse","fetchActionsWithTotalResponse","validateResponseFormat","response","type","logger","console","error","Error","hasOwnProperty","includes","Array","isArray","data","length"],"sources":["/node_modules/ra-core/esm/dataProvider/validateResponseFormat.js"],"sourcesContent":["import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse, } from '../core';\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n    if (logger === void 0) { logger = console.error; }\n    if (!response) {\n        logger(\"The dataProvider returned an empty response for '\" + type + \"'.\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (!response.hasOwnProperty('data')) {\n        logger(\"The response to '\" + type + \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\" + type + \"'.\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithArrayOfRecordsResponse.includes(type) &&\n        !Array.isArray(response.data)) {\n        logger(\"The response to '\" + type + \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) &&\n        Array.isArray(response.data) &&\n        response.data.length > 0 &&\n        !response.data[0].hasOwnProperty('id')) {\n        logger(\"The response to '\" + type + \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithRecordResponse.includes(type) &&\n        !response.data.hasOwnProperty('id')) {\n        logger(\"The response to '\" + type + \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithTotalResponse.includes(type) &&\n        !response.hasOwnProperty('total')) {\n        logger(\"The response to '\" + type + \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n}\nexport default validateResponseFormat;\n"],"mappings":"AAAA,SAASA,8BAA8B,EAAEC,gDAAgD,EAAEC,sCAAsC,EAAEC,6BAA6B,QAAS,SAAS;AAClL,SAASC,sBAAsBA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,CAAC;AAAA,EACrD;EACE,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IAAEA,MAAM,GAAGC,OAAO,CAACC,KAAK;EAAE;EACjD,IAAI,CAACJ,QAAQ,EAAE;IACXE,MAAM,CAAC,mDAAmD,GAAGD,IAAI,GAAG,IAAI,CAAC;IACzE,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,IAAI,CAACL,QAAQ,CAACM,cAAc,CAAC,MAAM,CAAC,EAAE;IAClCJ,MAAM,CAAC,mBAAmB,GAAGD,IAAI,GAAG,8HAA8H,GAAGA,IAAI,GAAG,IAAI,CAAC;IACjL,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,IAAIR,sCAAsC,CAACU,QAAQ,CAACN,IAAI,CAAC,IACrD,CAACO,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACU,IAAI,CAAC,EAAE;IAC/BR,MAAM,CAAC,mBAAmB,GAAGD,IAAI,GAAG,kHAAkH,GAAGA,IAAI,GAAG,GAAG,CAAC;IACpK,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,IAAIT,gDAAgD,CAACW,QAAQ,CAACN,IAAI,CAAC,IAC/DO,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACU,IAAI,CAAC,IAC5BV,QAAQ,CAACU,IAAI,CAACC,MAAM,GAAG,CAAC,IACxB,CAACX,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAACJ,cAAc,CAAC,IAAI,CAAC,EAAE;IACxCJ,MAAM,CAAC,mBAAmB,GAAGD,IAAI,GAAG,iJAAiJ,GAAGA,IAAI,GAAG,GAAG,CAAC;IACnM,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,IAAIV,8BAA8B,CAACY,QAAQ,CAACN,IAAI,CAAC,IAC7C,CAACD,QAAQ,CAACU,IAAI,CAACJ,cAAc,CAAC,IAAI,CAAC,EAAE;IACrCJ,MAAM,CAAC,mBAAmB,GAAGD,IAAI,GAAG,sIAAsI,GAAGA,IAAI,GAAG,GAAG,CAAC;IACxL,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,IAAIP,6BAA6B,CAACS,QAAQ,CAACN,IAAI,CAAC,IAC5C,CAACD,QAAQ,CAACM,cAAc,CAAC,OAAO,CAAC,EAAE;IACnCJ,MAAM,CAAC,mBAAmB,GAAGD,IAAI,GAAG,8IAA8I,GAAGA,IAAI,GAAG,GAAG,CAAC;IAChM,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;EAC1D;AACJ;AACA,eAAeN,sBAAsB"},"metadata":{},"sourceType":"module"}