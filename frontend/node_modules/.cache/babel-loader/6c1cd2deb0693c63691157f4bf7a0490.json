{"ast":null,"code":"import * as React from 'react';\nimport { Children, isValidElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useListContext, useResourceContext, useTranslate } from 'ra-core';\nimport { Checkbox, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport classnames from 'classnames';\nimport DatagridHeaderCell from './DatagridHeaderCell';\n/**\n * The default Datagrid Header component.\n *\n * Renders select all checkbox as well as column header buttons used for sorting.\n */\nexport var DatagridHeader = function (props) {\n  var children = props.children,\n    classes = props.classes,\n    className = props.className,\n    _a = props.hasExpand,\n    hasExpand = _a === void 0 ? false : _a,\n    _b = props.hasBulkActions,\n    hasBulkActions = _b === void 0 ? false : _b,\n    isRowSelectable = props.isRowSelectable;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n  var _c = useListContext(props),\n    currentSort = _c.currentSort,\n    data = _c.data,\n    ids = _c.ids,\n    onSelect = _c.onSelect,\n    selectedIds = _c.selectedIds,\n    setSort = _c.setSort;\n  var updateSortCallback = useCallback(function (event) {\n    event.stopPropagation();\n    var newField = event.currentTarget.dataset.field;\n    var newOrder = currentSort.field === newField ? currentSort.order === 'ASC' ? 'DESC' : 'ASC' : event.currentTarget.dataset.order;\n    setSort(newField, newOrder);\n  }, [currentSort.field, currentSort.order, setSort]);\n  var updateSort = setSort ? updateSortCallback : null;\n  var handleSelectAll = useCallback(function (event) {\n    onSelect(event.target.checked ? ids.filter(function (id) {\n      return isRowSelectable ? isRowSelectable(data[id]) : true;\n    }).concat(selectedIds.filter(function (id) {\n      return !ids.includes(id);\n    })) : []);\n  }, [data, ids, onSelect, isRowSelectable, selectedIds]);\n  var selectableIds = isRowSelectable ? ids.filter(function (id) {\n    return isRowSelectable(data[id]);\n  }) : ids;\n  return React.createElement(TableHead, {\n    className: classnames(className, classes.thead)\n  }, React.createElement(TableRow, {\n    className: classnames(classes.row, classes.headerRow)\n  }, hasExpand && React.createElement(TableCell, {\n    padding: \"none\",\n    className: classnames(classes.headerCell, classes.expandHeader)\n  }), hasBulkActions && selectedIds && React.createElement(TableCell, {\n    padding: \"checkbox\",\n    className: classes.headerCell\n  }, React.createElement(Checkbox, {\n    \"aria-label\": translate('ra.action.select_all', {\n      _: 'Select all'\n    }),\n    className: \"select-all\",\n    color: \"primary\",\n    checked: selectedIds.length > 0 && selectableIds.length > 0 && selectableIds.every(function (id) {\n      return selectedIds.includes(id);\n    }),\n    onChange: handleSelectAll\n  })), Children.map(children, function (field, index) {\n    return isValidElement(field) ? React.createElement(DatagridHeaderCell, {\n      className: classes.headerCell,\n      currentSort: currentSort,\n      field: field,\n      isSorting: currentSort.field === (field.props.sortBy || field.props.source),\n      key: field.props.source || index,\n      resource: resource,\n      updateSort: updateSort\n    }) : null;\n  })));\n};\nDatagridHeader.propTypes = {\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  currentSort: PropTypes.exact({\n    field: PropTypes.string,\n    order: PropTypes.string\n  }),\n  data: PropTypes.any,\n  hasExpand: PropTypes.bool,\n  hasBulkActions: PropTypes.bool,\n  ids: PropTypes.arrayOf(PropTypes.any),\n  isRowSelectable: PropTypes.func,\n  isRowExpandable: PropTypes.func,\n  onSelect: PropTypes.func,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  setSort: PropTypes.func\n};\nDatagridHeader.displayName = 'DatagridHeader';","map":{"version":3,"names":["React","Children","isValidElement","useCallback","PropTypes","useListContext","useResourceContext","useTranslate","Checkbox","TableCell","TableHead","TableRow","classnames","DatagridHeaderCell","DatagridHeader","props","children","classes","className","_a","hasExpand","_b","hasBulkActions","isRowSelectable","resource","translate","_c","currentSort","data","ids","onSelect","selectedIds","setSort","updateSortCallback","event","stopPropagation","newField","currentTarget","dataset","field","newOrder","order","updateSort","handleSelectAll","target","checked","filter","id","concat","includes","selectableIds","createElement","thead","row","headerRow","padding","headerCell","expandHeader","_","color","length","every","onChange","map","index","isSorting","sortBy","source","key","propTypes","node","object","string","exact","any","bool","arrayOf","func","isRowExpandable","onToggleItem","displayName"],"sources":["/node_modules/ra-ui-materialui/esm/list/datagrid/DatagridHeader.js"],"sourcesContent":["import * as React from 'react';\nimport { Children, isValidElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useListContext, useResourceContext, useTranslate, } from 'ra-core';\nimport { Checkbox, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport classnames from 'classnames';\nimport DatagridHeaderCell from './DatagridHeaderCell';\n/**\n * The default Datagrid Header component.\n *\n * Renders select all checkbox as well as column header buttons used for sorting.\n */\nexport var DatagridHeader = function (props) {\n    var children = props.children, classes = props.classes, className = props.className, _a = props.hasExpand, hasExpand = _a === void 0 ? false : _a, _b = props.hasBulkActions, hasBulkActions = _b === void 0 ? false : _b, isRowSelectable = props.isRowSelectable;\n    var resource = useResourceContext(props);\n    var translate = useTranslate();\n    var _c = useListContext(props), currentSort = _c.currentSort, data = _c.data, ids = _c.ids, onSelect = _c.onSelect, selectedIds = _c.selectedIds, setSort = _c.setSort;\n    var updateSortCallback = useCallback(function (event) {\n        event.stopPropagation();\n        var newField = event.currentTarget.dataset.field;\n        var newOrder = currentSort.field === newField\n            ? currentSort.order === 'ASC'\n                ? 'DESC'\n                : 'ASC'\n            : event.currentTarget.dataset.order;\n        setSort(newField, newOrder);\n    }, [currentSort.field, currentSort.order, setSort]);\n    var updateSort = setSort ? updateSortCallback : null;\n    var handleSelectAll = useCallback(function (event) {\n        onSelect(event.target.checked\n            ? ids\n                .filter(function (id) {\n                return isRowSelectable ? isRowSelectable(data[id]) : true;\n            })\n                .concat(selectedIds.filter(function (id) { return !ids.includes(id); }))\n            : []);\n    }, [data, ids, onSelect, isRowSelectable, selectedIds]);\n    var selectableIds = isRowSelectable\n        ? ids.filter(function (id) { return isRowSelectable(data[id]); })\n        : ids;\n    return (React.createElement(TableHead, { className: classnames(className, classes.thead) },\n        React.createElement(TableRow, { className: classnames(classes.row, classes.headerRow) },\n            hasExpand && (React.createElement(TableCell, { padding: \"none\", className: classnames(classes.headerCell, classes.expandHeader) })),\n            hasBulkActions && selectedIds && (React.createElement(TableCell, { padding: \"checkbox\", className: classes.headerCell },\n                React.createElement(Checkbox, { \"aria-label\": translate('ra.action.select_all', {\n                        _: 'Select all',\n                    }), className: \"select-all\", color: \"primary\", checked: selectedIds.length > 0 &&\n                        selectableIds.length > 0 &&\n                        selectableIds.every(function (id) {\n                            return selectedIds.includes(id);\n                        }), onChange: handleSelectAll }))),\n            Children.map(children, function (field, index) {\n                return isValidElement(field) ? (React.createElement(DatagridHeaderCell, { className: classes.headerCell, currentSort: currentSort, field: field, isSorting: currentSort.field ===\n                        (field.props.sortBy ||\n                            field.props.source), key: field.props.source || index, resource: resource, updateSort: updateSort })) : null;\n            }))));\n};\nDatagridHeader.propTypes = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    currentSort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    data: PropTypes.any,\n    hasExpand: PropTypes.bool,\n    hasBulkActions: PropTypes.bool,\n    ids: PropTypes.arrayOf(PropTypes.any),\n    isRowSelectable: PropTypes.func,\n    isRowExpandable: PropTypes.func,\n    onSelect: PropTypes.func,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    setSort: PropTypes.func,\n};\nDatagridHeader.displayName = 'DatagridHeader';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}