{"ast":null,"code":"import { performOptimisticQuery } from './performOptimisticQuery';\nimport { performUndoableQuery } from './performUndoableQuery';\nimport { performPessimisticQuery } from './performPessimisticQuery';\nimport { answerWithCache } from './answerWithCache';\nimport { canReplyWithCache } from '../replyWithCache';\n/**\n * Execute a dataProvider call\n *\n * Delegates execution to cache, optimistic, undoable, or pessimistic queries\n *\n * @see useDataProvider\n */\nexport var doQuery = function (_a) {\n  var type = _a.type,\n    payload = _a.payload,\n    resource = _a.resource,\n    action = _a.action,\n    rest = _a.rest,\n    onSuccess = _a.onSuccess,\n    onFailure = _a.onFailure,\n    dataProvider = _a.dataProvider,\n    dispatch = _a.dispatch,\n    logoutIfAccessDenied = _a.logoutIfAccessDenied,\n    allArguments = _a.allArguments,\n    store = _a.store,\n    mutationMode = _a.mutationMode;\n  var resourceState = store.getState().admin.resources[resource];\n  if (canReplyWithCache(type, payload, resourceState)) {\n    return answerWithCache({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      resourceState: resourceState,\n      dispatch: dispatch\n    });\n  } else if (mutationMode === 'optimistic') {\n    return performOptimisticQuery({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      dataProvider: dataProvider,\n      dispatch: dispatch,\n      logoutIfAccessDenied: logoutIfAccessDenied,\n      allArguments: allArguments\n    });\n  } else if (mutationMode === 'undoable') {\n    return performUndoableQuery({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      dataProvider: dataProvider,\n      dispatch: dispatch,\n      logoutIfAccessDenied: logoutIfAccessDenied,\n      allArguments: allArguments\n    });\n  } else {\n    return performPessimisticQuery({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      dataProvider: dataProvider,\n      dispatch: dispatch,\n      logoutIfAccessDenied: logoutIfAccessDenied,\n      allArguments: allArguments\n    });\n  }\n};","map":{"version":3,"names":["performOptimisticQuery","performUndoableQuery","performPessimisticQuery","answerWithCache","canReplyWithCache","doQuery","_a","type","payload","resource","action","rest","onSuccess","onFailure","dataProvider","dispatch","logoutIfAccessDenied","allArguments","store","mutationMode","resourceState","getState","admin","resources"],"sources":["/node_modules/ra-core/esm/dataProvider/performQuery/doQuery.js"],"sourcesContent":["import { performOptimisticQuery } from './performOptimisticQuery';\nimport { performUndoableQuery } from './performUndoableQuery';\nimport { performPessimisticQuery } from './performPessimisticQuery';\nimport { answerWithCache } from './answerWithCache';\nimport { canReplyWithCache } from '../replyWithCache';\n/**\n * Execute a dataProvider call\n *\n * Delegates execution to cache, optimistic, undoable, or pessimistic queries\n *\n * @see useDataProvider\n */\nexport var doQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, logoutIfAccessDenied = _a.logoutIfAccessDenied, allArguments = _a.allArguments, store = _a.store, mutationMode = _a.mutationMode;\n    var resourceState = store.getState().admin.resources[resource];\n    if (canReplyWithCache(type, payload, resourceState)) {\n        return answerWithCache({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            resourceState: resourceState,\n            dispatch: dispatch,\n        });\n    }\n    else if (mutationMode === 'optimistic') {\n        return performOptimisticQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n            allArguments: allArguments,\n        });\n    }\n    else if (mutationMode === 'undoable') {\n        return performUndoableQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n            allArguments: allArguments,\n        });\n    }\n    else {\n        return performPessimisticQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n            allArguments: allArguments,\n        });\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}