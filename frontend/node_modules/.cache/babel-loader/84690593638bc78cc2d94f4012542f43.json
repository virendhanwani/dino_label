{"ast":null,"code":"var _jsxFileName = \"/app/src/components/VuiButton/index.js\";\n/*!\n\n=========================================================\n* Vision UI Free React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/vision-ui-free-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com/)\n* Licensed under MIT (https://github.com/creativetimofficial/vision-ui-free-react/blob/master LICENSE.md)\n\n* Design and Coded by Simmmple & Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport { forwardRef, React } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for VuiButton\nimport VuiButtonRoot from \"./VuiButtonRoot\";\nconst VuiButton = forwardRef((_ref, ref) => {\n  let {\n    color,\n    variant,\n    size,\n    circular,\n    iconOnly,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(VuiButtonRoot, Object.assign({}, rest, {\n    ref: ref,\n    color: \"white\",\n    variant: variant === \"gradient\" ? \"contained\" : variant,\n    size: size,\n    ownerState: {\n      color,\n      variant,\n      size,\n      circular,\n      iconOnly\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), children);\n});\n\n// Setting default values for the props of VuiButton\nVuiButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  color: \"white\",\n  circular: false,\n  iconOnly: false\n};\n\n// Typechecking props for the VuiButton\nVuiButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  color: PropTypes.oneOf([\"white\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\"]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nexport default VuiButton;","map":{"version":3,"names":["forwardRef","React","PropTypes","VuiButtonRoot","VuiButton","_ref","ref","color","variant","size","circular","iconOnly","children","rest","createElement","Object","assign","ownerState","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","propTypes","oneOf","bool","node","isRequired"],"sources":["/app/src/components/VuiButton/index.js"],"sourcesContent":["/*!\n\n=========================================================\n* Vision UI Free React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/vision-ui-free-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com/)\n* Licensed under MIT (https://github.com/creativetimofficial/vision-ui-free-react/blob/master LICENSE.md)\n\n* Design and Coded by Simmmple & Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport { forwardRef, React } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for VuiButton\nimport VuiButtonRoot from \"./VuiButtonRoot\";\n\nconst VuiButton = forwardRef(\n  ({ color, variant, size, circular, iconOnly, children, ...rest }, ref) => (\n    <VuiButtonRoot\n      {...rest}\n      ref={ref}\n      color=\"white\"\n      variant={variant === \"gradient\" ? \"contained\" : variant}\n      size={size}\n      ownerState={{ color, variant, size, circular, iconOnly }}\n    >\n      {children}\n    </VuiButtonRoot>\n  )\n);\n\n// Setting default values for the props of VuiButton\nVuiButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  color: \"white\",\n  circular: false,\n  iconOnly: false,\n};\n\n// Typechecking props for the VuiButton\nVuiButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  color: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n  ]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default VuiButton;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEC,KAAK,QAAQ,OAAO;;AAEzC;AACA,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,SAAS,GAAGJ,UAAU,CAC1B,CAAAK,IAAA,EAAkEC,GAAG;EAAA,IAApE;IAAEC,KAAK;IAAEC,OAAO;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAAR,IAAA;EAAA,oBAC9DJ,KAAA,CAAAa,aAAA,CAACX,aAAa,EAAAY,MAAA,CAAAC,MAAA,KACRH,IAAI;IACRP,GAAG,EAAEA,GAAI;IACTC,KAAK,EAAC,OAAO;IACbC,OAAO,EAAEA,OAAO,KAAK,UAAU,GAAG,WAAW,GAAGA,OAAQ;IACxDC,IAAI,EAAEA,IAAK;IACXQ,UAAU,EAAE;MAAEV,KAAK;MAAEC,OAAO;MAAEC,IAAI;MAAEC,QAAQ;MAAEC;IAAS,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAExDX,QAAQ,CACK;AAAA,CACjB,CACF;;AAED;AACAR,SAAS,CAACoB,YAAY,GAAG;EACvBf,IAAI,EAAE,QAAQ;EACdD,OAAO,EAAE,WAAW;EACpBD,KAAK,EAAE,OAAO;EACdG,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACAP,SAAS,CAACqB,SAAS,GAAG;EACpBhB,IAAI,EAAEP,SAAS,CAACwB,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;EACnDlB,OAAO,EAAEN,SAAS,CAACwB,KAAK,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;EACvEnB,KAAK,EAAEL,SAAS,CAACwB,KAAK,CAAC,CACrB,OAAO,EACP,SAAS,EACT,WAAW,EACX,MAAM,EACN,SAAS,EACT,SAAS,EACT,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,CACP,CAAC;EACFhB,QAAQ,EAAER,SAAS,CAACyB,IAAI;EACxBhB,QAAQ,EAAET,SAAS,CAACyB,IAAI;EACxBf,QAAQ,EAAEV,SAAS,CAAC0B,IAAI,CAACC;AAC3B,CAAC;AAED,eAAezB,SAAS"},"metadata":{},"sourceType":"module"}