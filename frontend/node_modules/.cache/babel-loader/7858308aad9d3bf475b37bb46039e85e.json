{"ast":null,"code":"import { useContext, useCallback } from 'react';\nimport { TranslationContext } from './TranslationContext';\n/**\n * Translate a string using the current locale and the translations from the i18nProvider\n *\n * @see Polyglot.t()\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\n *\n * @return {Function} A translation function, accepting two arguments\n *   - a string used as key in the translations\n *   - an interpolationOptions object\n *\n * @example\n *\n * import { useTranslate } from 'react-admin';\n *\n * const SettingsMenu = () => {\n *     const translate = useTranslate();\n *     return <MenuItem>{translate('settings')}</MenuItem>;\n * }\n */\nvar useTranslate = function () {\n  var _a = useContext(TranslationContext),\n    i18nProvider = _a.i18nProvider,\n    locale = _a.locale;\n  var translate = useCallback(function (key, options) {\n    return i18nProvider.translate(key, options);\n  },\n  // update the hook each time the locale changes\n  [i18nProvider, locale] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return i18nProvider ? translate : identity;\n};\nvar identity = function (key) {\n  return key;\n};\nexport default useTranslate;","map":{"version":3,"names":["useContext","useCallback","TranslationContext","useTranslate","_a","i18nProvider","locale","translate","key","options","identity"],"sources":["/node_modules/ra-core/esm/i18n/useTranslate.js"],"sourcesContent":["import { useContext, useCallback } from 'react';\nimport { TranslationContext } from './TranslationContext';\n/**\n * Translate a string using the current locale and the translations from the i18nProvider\n *\n * @see Polyglot.t()\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\n *\n * @return {Function} A translation function, accepting two arguments\n *   - a string used as key in the translations\n *   - an interpolationOptions object\n *\n * @example\n *\n * import { useTranslate } from 'react-admin';\n *\n * const SettingsMenu = () => {\n *     const translate = useTranslate();\n *     return <MenuItem>{translate('settings')}</MenuItem>;\n * }\n */\nvar useTranslate = function () {\n    var _a = useContext(TranslationContext), i18nProvider = _a.i18nProvider, locale = _a.locale;\n    var translate = useCallback(function (key, options) {\n        return i18nProvider.translate(key, options);\n    }, \n    // update the hook each time the locale changes\n    [i18nProvider, locale] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    return i18nProvider ? translate : identity;\n};\nvar identity = function (key) { return key; };\nexport default useTranslate;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC/C,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,SAAAA,CAAA,EAAY;EAC3B,IAAIC,EAAE,GAAGJ,UAAU,CAACE,kBAAkB,CAAC;IAAEG,YAAY,GAAGD,EAAE,CAACC,YAAY;IAAEC,MAAM,GAAGF,EAAE,CAACE,MAAM;EAC3F,IAAIC,SAAS,GAAGN,WAAW,CAAC,UAAUO,GAAG,EAAEC,OAAO,EAAE;IAChD,OAAOJ,YAAY,CAACE,SAAS,CAACC,GAAG,EAAEC,OAAO,CAAC;EAC/C,CAAC;EACD;EACA,CAACJ,YAAY,EAAEC,MAAM,CAAC,CAAC;EAAA,CACtB;;EACD,OAAOD,YAAY,GAAGE,SAAS,GAAGG,QAAQ;AAC9C,CAAC;AACD,IAAIA,QAAQ,GAAG,SAAAA,CAAUF,GAAG,EAAE;EAAE,OAAOA,GAAG;AAAE,CAAC;AAC7C,eAAeL,YAAY"},"metadata":{},"sourceType":"module"}