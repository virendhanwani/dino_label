{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFieldLabelTranslationArgs, useReferenceArrayInputController, useInput, useTranslate, ResourceContextProvider, ReferenceArrayInputContextProvider, ListContextProvider } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport ReferenceError from './ReferenceError';\n/**\n * An Input component for fields containing a list of references to another resource.\n * Useful for 'hasMany' relationship.\n *\n * @example\n * The post object has many tags, so the post resource looks like:\n * {\n *    id: 1234,\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\n * }\n *\n * ReferenceArrayInput component fetches the current resources (using\n * `dataProvider.getMany()`) as well as possible resources (using\n * `dataProvider.getList()`) in the reference endpoint. It then\n * delegates rendering to a subcomponent, to which it passes the possible\n * choices as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<SelectArrayInput>`\n * or <CheckboxGroupInput>.\n *\n * @example\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\n *                 <SelectArrayInput optionText=\"name\" />\n *             </ReferenceArrayInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      perPage={100}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      sort={{ field: 'name', order: 'ASC' }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filter={{ is_public: true }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * The enclosed component may filter results. ReferenceArrayInput passes a\n * `setFilter` function as prop to its child component. It uses the value to\n * create a filter for the query - by default { q: [searchText] }. You can\n * customize the mapping searchText => searchQuery by setting a custom\n * `filterToQuery` function prop:\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filterToQuery={searchText => ({ name: searchText })}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n */\nvar ReferenceArrayInput = function (_a) {\n  var children = _a.children,\n    idOverride = _a.id,\n    onBlur = _a.onBlur,\n    onChange = _a.onChange,\n    onFocus = _a.onFocus,\n    validate = _a.validate,\n    parse = _a.parse,\n    format = _a.format,\n    props = __rest(_a, [\"children\", \"id\", \"onBlur\", \"onChange\", \"onFocus\", \"validate\", \"parse\", \"format\"]);\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<ReferenceArrayInput> only accepts a single child (like <Datagrid>)');\n  }\n  var _b = useInput(__assign({\n      id: idOverride,\n      onBlur: onBlur,\n      onChange: onChange,\n      onFocus: onFocus,\n      source: props.source,\n      validate: validate,\n      parse: parse,\n      format: format\n    }, props)),\n    id = _b.id,\n    input = _b.input,\n    isRequired = _b.isRequired,\n    meta = _b.meta;\n  var controllerProps = useReferenceArrayInputController(__assign(__assign({}, props), {\n    input: input\n  }));\n  var listContext = useMemo(function () {\n    return __assign(__assign({}, controllerProps), {\n      // ReferenceArrayInput.setSort had a different signature than the one from ListContext.\n      // In order to not break backward compatibility, we added this temporary setSortForList in the\n      // ReferenceArrayInputContext\n      setSort: controllerProps.setSortForList\n    });\n  }, [controllerProps]);\n  var translate = useTranslate();\n  return React.createElement(ResourceContextProvider, {\n    value: props.reference\n  }, React.createElement(ReferenceArrayInputContextProvider, {\n    value: controllerProps\n  }, React.createElement(ListContextProvider, {\n    value: listContext\n  }, React.createElement(ReferenceArrayInputView, __assign({\n    id: id,\n    input: input,\n    isRequired: isRequired,\n    meta: meta,\n    translate: translate,\n    children: children\n  }, props, {\n    choices: controllerProps.choices,\n    loaded: controllerProps.loaded,\n    loading: controllerProps.loading,\n    setFilter: controllerProps.setFilter,\n    setPagination: controllerProps.setPagination,\n    setSort: controllerProps.setSort\n  })))));\n};\nReferenceArrayInput.propTypes = {\n  allowEmpty: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  filter: PropTypes.object,\n  filterToQuery: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  perPage: PropTypes.number,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  source: PropTypes.string\n};\nReferenceArrayInput.defaultProps = {\n  filter: {},\n  filterToQuery: function (searchText) {\n    return searchText ? {\n      q: searchText\n    } : {};\n  },\n  perPage: 25,\n  sort: {\n    field: 'id',\n    order: 'DESC'\n  }\n};\nvar sanitizeRestProps = function (_a) {\n  var basePath = _a.basePath,\n    crudGetMany = _a.crudGetMany,\n    crudGetMatching = _a.crudGetMatching,\n    filterToQuery = _a.filterToQuery,\n    perPage = _a.perPage,\n    reference = _a.reference,\n    referenceSource = _a.referenceSource,\n    resource = _a.resource,\n    rest = __rest(_a, [\"basePath\", \"crudGetMany\", \"crudGetMatching\", \"filterToQuery\", \"perPage\", \"reference\", \"referenceSource\", \"resource\"]);\n  return sanitizeInputRestProps(rest);\n};\nexport var ReferenceArrayInputView = function (_a) {\n  var allowEmpty = _a.allowEmpty,\n    basePath = _a.basePath,\n    children = _a.children,\n    choices = _a.choices,\n    className = _a.className,\n    error = _a.error,\n    input = _a.input,\n    loaded = _a.loaded,\n    loading = _a.loading,\n    isRequired = _a.isRequired,\n    label = _a.label,\n    meta = _a.meta,\n    onChange = _a.onChange,\n    options = _a.options,\n    reference = _a.reference,\n    resource = _a.resource,\n    setFilter = _a.setFilter,\n    setPagination = _a.setPagination,\n    setSort = _a.setSort,\n    source = _a.source,\n    translate = _a.translate,\n    warning = _a.warning,\n    rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"className\", \"error\", \"input\", \"loaded\", \"loading\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"options\", \"reference\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"translate\", \"warning\"]);\n  var translatedLabel = translate.apply(void 0, getFieldLabelTranslationArgs({\n    label: label,\n    resource: resource,\n    source: source\n  }));\n  if (error) {\n    return React.createElement(ReferenceError, {\n      label: translatedLabel,\n      error: error\n    });\n  }\n  return React.cloneElement(children, __assign(__assign({\n    allowEmpty: allowEmpty,\n    basePath: basePath ? basePath.replace(resource, reference) : \"/\" + reference,\n    choices: choices,\n    className: className,\n    error: error,\n    input: input,\n    isRequired: isRequired,\n    label: translatedLabel,\n    loaded: loaded,\n    loading: loading,\n    meta: __assign(__assign({}, meta), {\n      helperText: warning || false\n    }),\n    onChange: onChange,\n    options: options,\n    resource: reference,\n    setFilter: setFilter,\n    setPagination: setPagination,\n    setSort: setSort,\n    source: source,\n    translateChoice: false,\n    limitChoicesToValue: true\n  }, sanitizeRestProps(rest)), children.props));\n};\nReferenceArrayInputView.propTypes = {\n  allowEmpty: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  choices: PropTypes.array,\n  className: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool,\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  onChange: PropTypes.func,\n  options: PropTypes.object,\n  resource: PropTypes.string,\n  setFilter: PropTypes.func,\n  setPagination: PropTypes.func,\n  setSort: PropTypes.func,\n  source: PropTypes.string,\n  translate: PropTypes.func.isRequired,\n  warning: PropTypes.string\n};\nexport default ReferenceArrayInput;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useMemo","PropTypes","getFieldLabelTranslationArgs","useReferenceArrayInputController","useInput","useTranslate","ResourceContextProvider","ReferenceArrayInputContextProvider","ListContextProvider","sanitizeInputRestProps","ReferenceError","ReferenceArrayInput","_a","children","idOverride","id","onBlur","onChange","onFocus","validate","parse","format","props","Children","count","Error","_b","source","input","isRequired","meta","controllerProps","listContext","setSort","setSortForList","translate","createElement","value","reference","ReferenceArrayInputView","choices","loaded","loading","setFilter","setPagination","propTypes","allowEmpty","bool","basePath","string","element","className","filter","object","filterToQuery","func","label","perPage","number","resource","sort","shape","field","order","oneOf","defaultProps","searchText","q","sanitizeRestProps","crudGetMany","crudGetMatching","referenceSource","rest","error","options","warning","translatedLabel","cloneElement","replace","helperText","translateChoice","limitChoicesToValue","array"],"sources":["/node_modules/ra-ui-materialui/esm/input/ReferenceArrayInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFieldLabelTranslationArgs, useReferenceArrayInputController, useInput, useTranslate, ResourceContextProvider, ReferenceArrayInputContextProvider, ListContextProvider, } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport ReferenceError from './ReferenceError';\n/**\n * An Input component for fields containing a list of references to another resource.\n * Useful for 'hasMany' relationship.\n *\n * @example\n * The post object has many tags, so the post resource looks like:\n * {\n *    id: 1234,\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\n * }\n *\n * ReferenceArrayInput component fetches the current resources (using\n * `dataProvider.getMany()`) as well as possible resources (using\n * `dataProvider.getList()`) in the reference endpoint. It then\n * delegates rendering to a subcomponent, to which it passes the possible\n * choices as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<SelectArrayInput>`\n * or <CheckboxGroupInput>.\n *\n * @example\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\n *                 <SelectArrayInput optionText=\"name\" />\n *             </ReferenceArrayInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      perPage={100}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      sort={{ field: 'name', order: 'ASC' }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filter={{ is_public: true }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * The enclosed component may filter results. ReferenceArrayInput passes a\n * `setFilter` function as prop to its child component. It uses the value to\n * create a filter for the query - by default { q: [searchText] }. You can\n * customize the mapping searchText => searchQuery by setting a custom\n * `filterToQuery` function prop:\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filterToQuery={searchText => ({ name: searchText })}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n */\nvar ReferenceArrayInput = function (_a) {\n    var children = _a.children, idOverride = _a.id, onBlur = _a.onBlur, onChange = _a.onChange, onFocus = _a.onFocus, validate = _a.validate, parse = _a.parse, format = _a.format, props = __rest(_a, [\"children\", \"id\", \"onBlur\", \"onChange\", \"onFocus\", \"validate\", \"parse\", \"format\"]);\n    if (React.Children.count(children) !== 1) {\n        throw new Error('<ReferenceArrayInput> only accepts a single child (like <Datagrid>)');\n    }\n    var _b = useInput(__assign({ id: idOverride, onBlur: onBlur, onChange: onChange, onFocus: onFocus, source: props.source, validate: validate, parse: parse, format: format }, props)), id = _b.id, input = _b.input, isRequired = _b.isRequired, meta = _b.meta;\n    var controllerProps = useReferenceArrayInputController(__assign(__assign({}, props), { input: input }));\n    var listContext = useMemo(function () { return (__assign(__assign({}, controllerProps), { \n        // ReferenceArrayInput.setSort had a different signature than the one from ListContext.\n        // In order to not break backward compatibility, we added this temporary setSortForList in the\n        // ReferenceArrayInputContext\n        setSort: controllerProps.setSortForList })); }, [controllerProps]);\n    var translate = useTranslate();\n    return (React.createElement(ResourceContextProvider, { value: props.reference },\n        React.createElement(ReferenceArrayInputContextProvider, { value: controllerProps },\n            React.createElement(ListContextProvider, { value: listContext },\n                React.createElement(ReferenceArrayInputView, __assign({ id: id, input: input, isRequired: isRequired, meta: meta, translate: translate, children: children }, props, { choices: controllerProps.choices, loaded: controllerProps.loaded, loading: controllerProps.loading, setFilter: controllerProps.setFilter, setPagination: controllerProps.setPagination, setSort: controllerProps.setSort }))))));\n};\nReferenceArrayInput.propTypes = {\n    allowEmpty: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    filter: PropTypes.object,\n    filterToQuery: PropTypes.func.isRequired,\n    label: PropTypes.string,\n    perPage: PropTypes.number,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.oneOf(['ASC', 'DESC']),\n    }),\n    source: PropTypes.string,\n};\nReferenceArrayInput.defaultProps = {\n    filter: {},\n    filterToQuery: function (searchText) { return (searchText ? { q: searchText } : {}); },\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n};\nvar sanitizeRestProps = function (_a) {\n    var basePath = _a.basePath, crudGetMany = _a.crudGetMany, crudGetMatching = _a.crudGetMatching, filterToQuery = _a.filterToQuery, perPage = _a.perPage, reference = _a.reference, referenceSource = _a.referenceSource, resource = _a.resource, rest = __rest(_a, [\"basePath\", \"crudGetMany\", \"crudGetMatching\", \"filterToQuery\", \"perPage\", \"reference\", \"referenceSource\", \"resource\"]);\n    return sanitizeInputRestProps(rest);\n};\nexport var ReferenceArrayInputView = function (_a) {\n    var allowEmpty = _a.allowEmpty, basePath = _a.basePath, children = _a.children, choices = _a.choices, className = _a.className, error = _a.error, input = _a.input, loaded = _a.loaded, loading = _a.loading, isRequired = _a.isRequired, label = _a.label, meta = _a.meta, onChange = _a.onChange, options = _a.options, reference = _a.reference, resource = _a.resource, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, source = _a.source, translate = _a.translate, warning = _a.warning, rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"className\", \"error\", \"input\", \"loaded\", \"loading\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"options\", \"reference\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"translate\", \"warning\"]);\n    var translatedLabel = translate.apply(void 0, getFieldLabelTranslationArgs({\n        label: label,\n        resource: resource,\n        source: source,\n    }));\n    if (error) {\n        return React.createElement(ReferenceError, { label: translatedLabel, error: error });\n    }\n    return React.cloneElement(children, __assign(__assign({ allowEmpty: allowEmpty, basePath: basePath\n            ? basePath.replace(resource, reference)\n            : \"/\" + reference, choices: choices, className: className, error: error, input: input, isRequired: isRequired, label: translatedLabel, loaded: loaded, loading: loading, meta: __assign(__assign({}, meta), { helperText: warning || false }), onChange: onChange, options: options, resource: reference, setFilter: setFilter, setPagination: setPagination, setSort: setSort, source: source, translateChoice: false, limitChoicesToValue: true }, sanitizeRestProps(rest)), children.props));\n};\nReferenceArrayInputView.propTypes = {\n    allowEmpty: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element,\n    choices: PropTypes.array,\n    className: PropTypes.string,\n    error: PropTypes.string,\n    loading: PropTypes.bool,\n    input: PropTypes.object.isRequired,\n    label: PropTypes.string,\n    meta: PropTypes.object,\n    onChange: PropTypes.func,\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    setFilter: PropTypes.func,\n    setPagination: PropTypes.func,\n    setSort: PropTypes.func,\n    source: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n    warning: PropTypes.string,\n};\nexport default ReferenceArrayInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}