{"ast":null,"code":"import merge from 'lodash/merge';\n/**\n * Because final-form removes undefined and empty string values completely\n * (the key for the empty field is removed from the values), we have to check\n * whether this value was initially provided so that it is correctly sent to\n * the backend.\n * @see https://github.com/final-form/react-final-form/issues/130#issuecomment-493447888\n *\n * @param initialValues The initial values provided to the form\n * @param values The current form values\n */\nvar sanitizeEmptyValues = function (initialValues, values) {\n  // For every field initially provided, we check whether it value has been removed\n  // and set it explicitly to an empty string\n  if (!initialValues) return values;\n  var initialValuesWithEmptyFields = Object.keys(initialValues).reduce(function (acc, key) {\n    if (values[key] instanceof Date) {\n      acc[key] = values[key];\n    } else if (Array.isArray(values[key])) {\n      if (Array.isArray(initialValues[key])) {\n        acc[key] = values[key].map(function (value, index) {\n          return sanitizeEmptyValues(initialValues[key][index], value);\n        });\n      } else {\n        acc[key] = values[key];\n      }\n    } else if (typeof values[key] === 'object' && typeof initialValues[key] === 'object' && values[key] !== null) {\n      acc[key] = sanitizeEmptyValues(initialValues[key], values[key]);\n    } else {\n      acc[key] = typeof values[key] === 'undefined' ? null : values[key];\n    }\n    return acc;\n  }, {});\n  // Finally, we merge back the values to not miss any which wasn't initially provided\n  return merge(initialValuesWithEmptyFields, values);\n};\nexport default sanitizeEmptyValues;","map":{"version":3,"names":["merge","sanitizeEmptyValues","initialValues","values","initialValuesWithEmptyFields","Object","keys","reduce","acc","key","Date","Array","isArray","map","value","index"],"sources":["/node_modules/ra-core/esm/form/sanitizeEmptyValues.js"],"sourcesContent":["import merge from 'lodash/merge';\n/**\n * Because final-form removes undefined and empty string values completely\n * (the key for the empty field is removed from the values), we have to check\n * whether this value was initially provided so that it is correctly sent to\n * the backend.\n * @see https://github.com/final-form/react-final-form/issues/130#issuecomment-493447888\n *\n * @param initialValues The initial values provided to the form\n * @param values The current form values\n */\nvar sanitizeEmptyValues = function (initialValues, values) {\n    // For every field initially provided, we check whether it value has been removed\n    // and set it explicitly to an empty string\n    if (!initialValues)\n        return values;\n    var initialValuesWithEmptyFields = Object.keys(initialValues).reduce(function (acc, key) {\n        if (values[key] instanceof Date) {\n            acc[key] = values[key];\n        }\n        else if (Array.isArray(values[key])) {\n            if (Array.isArray(initialValues[key])) {\n                acc[key] = values[key].map(function (value, index) {\n                    return sanitizeEmptyValues(initialValues[key][index], value);\n                });\n            }\n            else {\n                acc[key] = values[key];\n            }\n        }\n        else if (typeof values[key] === 'object' &&\n            typeof initialValues[key] === 'object' &&\n            values[key] !== null) {\n            acc[key] = sanitizeEmptyValues(initialValues[key], values[key]);\n        }\n        else {\n            acc[key] =\n                typeof values[key] === 'undefined' ? null : values[key];\n        }\n        return acc;\n    }, {});\n    // Finally, we merge back the values to not miss any which wasn't initially provided\n    return merge(initialValuesWithEmptyFields, values);\n};\nexport default sanitizeEmptyValues;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,aAAa,EAAEC,MAAM,EAAE;EACvD;EACA;EACA,IAAI,CAACD,aAAa,EACd,OAAOC,MAAM;EACjB,IAAIC,4BAA4B,GAAGC,MAAM,CAACC,IAAI,CAACJ,aAAa,CAAC,CAACK,MAAM,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;IACrF,IAAIN,MAAM,CAACM,GAAG,CAAC,YAAYC,IAAI,EAAE;MAC7BF,GAAG,CAACC,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC;IAC1B,CAAC,MACI,IAAIE,KAAK,CAACC,OAAO,CAACT,MAAM,CAACM,GAAG,CAAC,CAAC,EAAE;MACjC,IAAIE,KAAK,CAACC,OAAO,CAACV,aAAa,CAACO,GAAG,CAAC,CAAC,EAAE;QACnCD,GAAG,CAACC,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC,CAACI,GAAG,CAAC,UAAUC,KAAK,EAAEC,KAAK,EAAE;UAC/C,OAAOd,mBAAmB,CAACC,aAAa,CAACO,GAAG,CAAC,CAACM,KAAK,CAAC,EAAED,KAAK,CAAC;QAChE,CAAC,CAAC;MACN,CAAC,MACI;QACDN,GAAG,CAACC,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC;MAC1B;IACJ,CAAC,MACI,IAAI,OAAON,MAAM,CAACM,GAAG,CAAC,KAAK,QAAQ,IACpC,OAAOP,aAAa,CAACO,GAAG,CAAC,KAAK,QAAQ,IACtCN,MAAM,CAACM,GAAG,CAAC,KAAK,IAAI,EAAE;MACtBD,GAAG,CAACC,GAAG,CAAC,GAAGR,mBAAmB,CAACC,aAAa,CAACO,GAAG,CAAC,EAAEN,MAAM,CAACM,GAAG,CAAC,CAAC;IACnE,CAAC,MACI;MACDD,GAAG,CAACC,GAAG,CAAC,GACJ,OAAON,MAAM,CAACM,GAAG,CAAC,KAAK,WAAW,GAAG,IAAI,GAAGN,MAAM,CAACM,GAAG,CAAC;IAC/D;IACA,OAAOD,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACN;EACA,OAAOR,KAAK,CAACI,4BAA4B,EAAED,MAAM,CAAC;AACtD,CAAC;AACD,eAAeF,mBAAmB"},"metadata":{},"sourceType":"module"}