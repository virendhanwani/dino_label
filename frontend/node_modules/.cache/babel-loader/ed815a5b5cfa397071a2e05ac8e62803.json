{"ast":null,"code":"import { useCallback, isValidElement } from 'react';\nimport set from 'lodash/set';\nimport useChoices from './useChoices';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for suggestions handling.\n *\n * @param allowDuplicates A boolean indicating whether a suggestion can be added several times\n * @param allowEmpty A boolean indicating whether an empty suggestion should be added\n * @param choices An array of available choices\n * @param emptyText The text to use for the empty suggestion. Defaults to an empty string\n * @param emptyValue The value to use for the empty suggestion. Defaults to `null`\n * @param limitChoicesToValue A boolean indicating whether the initial suggestions should be limited to the currently selected one(s)\n * @param matchSuggestion Optional unless `optionText` is a React element. Function which check whether a choice matches a filter. Must return a boolean.\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param selectedItem The currently selected item. May be an array of selected items\n * @param suggestionLimit The maximum number of suggestions returned, excluding the empty one if `allowEmpty` is `true`\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n * - getSuggestions: A function taking a filter value (string) and returning the matching suggestions\n */\nvar useSuggestions = function (_a) {\n  var allowCreate = _a.allowCreate,\n    allowDuplicates = _a.allowDuplicates,\n    allowEmpty = _a.allowEmpty,\n    choices = _a.choices,\n    _b = _a.createText,\n    createText = _b === void 0 ? 'ra.action.create' : _b,\n    _c = _a.createValue,\n    createValue = _c === void 0 ? '@@create' : _c,\n    _d = _a.emptyText,\n    emptyText = _d === void 0 ? '' : _d,\n    _e = _a.emptyValue,\n    emptyValue = _e === void 0 ? null : _e,\n    limitChoicesToValue = _a.limitChoicesToValue,\n    matchSuggestion = _a.matchSuggestion,\n    optionText = _a.optionText,\n    optionValue = _a.optionValue,\n    selectedItem = _a.selectedItem,\n    _f = _a.suggestionLimit,\n    suggestionLimit = _f === void 0 ? 0 : _f,\n    translateChoice = _a.translateChoice;\n  var translate = useTranslate();\n  var _g = useChoices({\n      optionText: optionText,\n      optionValue: optionValue,\n      translateChoice: translateChoice\n    }),\n    getChoiceText = _g.getChoiceText,\n    getChoiceValue = _g.getChoiceValue;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var getSuggestions = useCallback(getSuggestionsFactory({\n    allowCreate: allowCreate,\n    allowDuplicates: allowDuplicates,\n    allowEmpty: allowEmpty,\n    choices: choices,\n    createText: createText,\n    createValue: createValue,\n    emptyText: translate(emptyText, {\n      _: emptyText\n    }),\n    emptyValue: emptyValue,\n    getChoiceText: getChoiceText,\n    getChoiceValue: getChoiceValue,\n    limitChoicesToValue: limitChoicesToValue,\n    matchSuggestion: matchSuggestion,\n    optionText: optionText,\n    optionValue: optionValue,\n    selectedItem: selectedItem,\n    suggestionLimit: suggestionLimit\n  }), [allowCreate, allowDuplicates, allowEmpty, choices, createText, createValue, emptyText, emptyValue, getChoiceText, getChoiceValue, limitChoicesToValue, matchSuggestion, optionText, optionValue, selectedItem, suggestionLimit, translate]);\n  return {\n    getChoiceText: getChoiceText,\n    getChoiceValue: getChoiceValue,\n    getSuggestions: getSuggestions\n  };\n};\nexport default useSuggestions;\nvar escapeRegExp = function (value) {\n  return value ? value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : '';\n}; // $& means the whole matched string\n/**\n * Default matcher implementation which check whether the suggestion text matches the filter.\n */\nvar defaultMatchSuggestion = function (getChoiceText) {\n  return function (filter, suggestion, exact) {\n    if (exact === void 0) {\n      exact = false;\n    }\n    var suggestionText = getChoiceText(suggestion);\n    var isReactElement = isValidElement(suggestionText);\n    var regex = escapeRegExp(filter);\n    return isReactElement ? false : suggestionText && suggestionText.match(\n    // We must escape any RegExp reserved characters to avoid errors\n    // For example, the filter might contain * which must be escaped as \\*\n    new RegExp(exact ? \"^\" + regex + \"$\" : regex, 'i'));\n  };\n};\n/**\n * Get the suggestions to display after applying a fuzzy search on the available choices\n *\n * @example\n *\n * getSuggestions({\n *   choices: [{ id: 1, name: 'admin' }, { id: 2, name: 'publisher' }],\n *   optionText: 'name',\n *   optionValue: 'id',\n *   getSuggestionText: choice => choice[optionText],\n * })('pub')\n *\n * // Will return [{ id: 2, name: 'publisher' }]\n * getSuggestions({\n *   choices: [{ id: 1, name: 'admin' }, { id: 2, name: 'publisher' }],\n *   optionText: 'name',\n *   optionValue: 'id',\n *   getSuggestionText: choice => choice[optionText],\n * })('pub')\n *\n * // Will return [{ id: 2, name: 'publisher' }]\n */\nexport var getSuggestionsFactory = function (_a) {\n  var _b = _a.allowCreate,\n    allowCreate = _b === void 0 ? false : _b,\n    _c = _a.allowDuplicates,\n    allowDuplicates = _c === void 0 ? false : _c,\n    _d = _a.allowEmpty,\n    allowEmpty = _d === void 0 ? false : _d,\n    _e = _a.choices,\n    choices = _e === void 0 ? [] : _e,\n    _f = _a.createText,\n    createText = _f === void 0 ? 'ra.action.create' : _f,\n    _g = _a.createValue,\n    createValue = _g === void 0 ? '@@create' : _g,\n    _h = _a.emptyText,\n    emptyText = _h === void 0 ? '' : _h,\n    _j = _a.emptyValue,\n    emptyValue = _j === void 0 ? null : _j,\n    _k = _a.optionText,\n    optionText = _k === void 0 ? 'name' : _k,\n    _l = _a.optionValue,\n    optionValue = _l === void 0 ? 'id' : _l,\n    getChoiceText = _a.getChoiceText,\n    getChoiceValue = _a.getChoiceValue,\n    _m = _a.limitChoicesToValue,\n    limitChoicesToValue = _m === void 0 ? false : _m,\n    _o = _a.matchSuggestion,\n    matchSuggestion = _o === void 0 ? defaultMatchSuggestion(getChoiceText) : _o,\n    selectedItem = _a.selectedItem,\n    _p = _a.suggestionLimit,\n    suggestionLimit = _p === void 0 ? 0 : _p;\n  return function (filter) {\n    var suggestions = [];\n    // if an item is selected and matches the filter\n    if (selectedItem && !Array.isArray(selectedItem) && matchSuggestion(filter, selectedItem)) {\n      if (limitChoicesToValue) {\n        // display only the selected item\n        suggestions = choices.filter(function (choice) {\n          return getChoiceValue(choice) === getChoiceValue(selectedItem);\n        });\n      } else if (!allowDuplicates) {\n        // ignore the filter to show more choices\n        suggestions = removeAlreadySelectedSuggestions(choices, selectedItem, getChoiceValue);\n      } else {\n        suggestions = choices;\n      }\n    } else {\n      suggestions = choices.filter(function (choice) {\n        return matchSuggestion(filter, choice);\n      });\n      if (!allowDuplicates) {\n        suggestions = removeAlreadySelectedSuggestions(suggestions, selectedItem, getChoiceValue);\n      }\n    }\n    suggestions = limitSuggestions(suggestions, suggestionLimit);\n    var hasExactMatch = suggestions.some(function (suggestion) {\n      return matchSuggestion(filter, suggestion, true);\n    });\n    if (allowCreate) {\n      var filterIsSelectedItem =\n      // If the selectedItem is an array (for example AutocompleteArrayInput)\n      // we shouldn't try to match\n      !!selectedItem && !Array.isArray(selectedItem) ? matchSuggestion(filter, selectedItem, true) : false;\n      if (!hasExactMatch && !filterIsSelectedItem) {\n        suggestions.push(getSuggestion({\n          optionText: optionText,\n          optionValue: optionValue,\n          text: createText,\n          value: createValue\n        }));\n      }\n    }\n    if (allowEmpty) {\n      suggestions.unshift(getSuggestion({\n        optionText: optionText,\n        optionValue: optionValue,\n        text: emptyText,\n        value: emptyValue\n      }));\n    }\n    return suggestions;\n  };\n};\n/**\n * @example\n *\n * removeAlreadySelectedSuggestions(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n *  [{ id: 1, name: 'foo'}]\n * );\n *\n * // Will return [{ id: 2, name: 'bar' }]\n *\n * @param suggestions List of suggestions\n * @param selectedItems List of selection\n * @param getChoiceValue Converter function from suggestion to value\n */\nvar removeAlreadySelectedSuggestions = function (suggestions, selectedItems, getChoiceValue) {\n  if (!selectedItems) {\n    return suggestions;\n  }\n  var selectedValues = Array.isArray(selectedItems) ? selectedItems.map(getChoiceValue) : [getChoiceValue(selectedItems)];\n  return suggestions.filter(function (suggestion) {\n    return !selectedValues.includes(getChoiceValue(suggestion));\n  });\n};\n/**\n * @example\n *\n * limitSuggestions(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n *  1\n * );\n *\n * // Will return [{ id: 1, name: 'foo' }]\n *\n * @param suggestions List of suggestions\n * @param limit\n */\nvar limitSuggestions = function (suggestions, limit) {\n  if (limit === void 0) {\n    limit = 0;\n  }\n  return Number.isInteger(limit) && limit > 0 ? suggestions.slice(0, limit) : suggestions;\n};\n/**\n * addSuggestion(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n * );\n *\n * // Will return [{ id: null, name: '' }, { id: 1, name: 'foo' }, , { id: 2, name: 'bar' }]\n *\n * @param suggestions List of suggestions\n * @param options\n * @param options.optionText\n */\nvar getSuggestion = function (_a) {\n  var _b = _a.optionText,\n    optionText = _b === void 0 ? 'name' : _b,\n    _c = _a.optionValue,\n    optionValue = _c === void 0 ? 'id' : _c,\n    _d = _a.text,\n    text = _d === void 0 ? '' : _d,\n    _e = _a.value,\n    value = _e === void 0 ? null : _e;\n  var suggestion = {};\n  set(suggestion, optionValue, value);\n  if (typeof optionText === 'string') {\n    set(suggestion, optionText, text);\n  }\n  return suggestion;\n};","map":{"version":3,"names":["useCallback","isValidElement","set","useChoices","useTranslate","useSuggestions","_a","allowCreate","allowDuplicates","allowEmpty","choices","_b","createText","_c","createValue","_d","emptyText","_e","emptyValue","limitChoicesToValue","matchSuggestion","optionText","optionValue","selectedItem","_f","suggestionLimit","translateChoice","translate","_g","getChoiceText","getChoiceValue","getSuggestions","getSuggestionsFactory","_","escapeRegExp","value","replace","defaultMatchSuggestion","filter","suggestion","exact","suggestionText","isReactElement","regex","match","RegExp","_h","_j","_k","_l","_m","_o","_p","suggestions","Array","isArray","choice","removeAlreadySelectedSuggestions","limitSuggestions","hasExactMatch","some","filterIsSelectedItem","push","getSuggestion","text","unshift","selectedItems","selectedValues","map","includes","limit","Number","isInteger","slice"],"sources":["/node_modules/ra-core/esm/form/useSuggestions.js"],"sourcesContent":["import { useCallback, isValidElement } from 'react';\nimport set from 'lodash/set';\nimport useChoices from './useChoices';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for suggestions handling.\n *\n * @param allowDuplicates A boolean indicating whether a suggestion can be added several times\n * @param allowEmpty A boolean indicating whether an empty suggestion should be added\n * @param choices An array of available choices\n * @param emptyText The text to use for the empty suggestion. Defaults to an empty string\n * @param emptyValue The value to use for the empty suggestion. Defaults to `null`\n * @param limitChoicesToValue A boolean indicating whether the initial suggestions should be limited to the currently selected one(s)\n * @param matchSuggestion Optional unless `optionText` is a React element. Function which check whether a choice matches a filter. Must return a boolean.\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param selectedItem The currently selected item. May be an array of selected items\n * @param suggestionLimit The maximum number of suggestions returned, excluding the empty one if `allowEmpty` is `true`\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n * - getSuggestions: A function taking a filter value (string) and returning the matching suggestions\n */\nvar useSuggestions = function (_a) {\n    var allowCreate = _a.allowCreate, allowDuplicates = _a.allowDuplicates, allowEmpty = _a.allowEmpty, choices = _a.choices, _b = _a.createText, createText = _b === void 0 ? 'ra.action.create' : _b, _c = _a.createValue, createValue = _c === void 0 ? '@@create' : _c, _d = _a.emptyText, emptyText = _d === void 0 ? '' : _d, _e = _a.emptyValue, emptyValue = _e === void 0 ? null : _e, limitChoicesToValue = _a.limitChoicesToValue, matchSuggestion = _a.matchSuggestion, optionText = _a.optionText, optionValue = _a.optionValue, selectedItem = _a.selectedItem, _f = _a.suggestionLimit, suggestionLimit = _f === void 0 ? 0 : _f, translateChoice = _a.translateChoice;\n    var translate = useTranslate();\n    var _g = useChoices({\n        optionText: optionText,\n        optionValue: optionValue,\n        translateChoice: translateChoice,\n    }), getChoiceText = _g.getChoiceText, getChoiceValue = _g.getChoiceValue;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var getSuggestions = useCallback(getSuggestionsFactory({\n        allowCreate: allowCreate,\n        allowDuplicates: allowDuplicates,\n        allowEmpty: allowEmpty,\n        choices: choices,\n        createText: createText,\n        createValue: createValue,\n        emptyText: translate(emptyText, { _: emptyText }),\n        emptyValue: emptyValue,\n        getChoiceText: getChoiceText,\n        getChoiceValue: getChoiceValue,\n        limitChoicesToValue: limitChoicesToValue,\n        matchSuggestion: matchSuggestion,\n        optionText: optionText,\n        optionValue: optionValue,\n        selectedItem: selectedItem,\n        suggestionLimit: suggestionLimit,\n    }), [\n        allowCreate,\n        allowDuplicates,\n        allowEmpty,\n        choices,\n        createText,\n        createValue,\n        emptyText,\n        emptyValue,\n        getChoiceText,\n        getChoiceValue,\n        limitChoicesToValue,\n        matchSuggestion,\n        optionText,\n        optionValue,\n        selectedItem,\n        suggestionLimit,\n        translate,\n    ]);\n    return {\n        getChoiceText: getChoiceText,\n        getChoiceValue: getChoiceValue,\n        getSuggestions: getSuggestions,\n    };\n};\nexport default useSuggestions;\nvar escapeRegExp = function (value) {\n    return value ? value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : '';\n}; // $& means the whole matched string\n/**\n * Default matcher implementation which check whether the suggestion text matches the filter.\n */\nvar defaultMatchSuggestion = function (getChoiceText) { return function (filter, suggestion, exact) {\n    if (exact === void 0) { exact = false; }\n    var suggestionText = getChoiceText(suggestion);\n    var isReactElement = isValidElement(suggestionText);\n    var regex = escapeRegExp(filter);\n    return isReactElement\n        ? false\n        : suggestionText &&\n            suggestionText.match(\n            // We must escape any RegExp reserved characters to avoid errors\n            // For example, the filter might contain * which must be escaped as \\*\n            new RegExp(exact ? \"^\" + regex + \"$\" : regex, 'i'));\n}; };\n/**\n * Get the suggestions to display after applying a fuzzy search on the available choices\n *\n * @example\n *\n * getSuggestions({\n *   choices: [{ id: 1, name: 'admin' }, { id: 2, name: 'publisher' }],\n *   optionText: 'name',\n *   optionValue: 'id',\n *   getSuggestionText: choice => choice[optionText],\n * })('pub')\n *\n * // Will return [{ id: 2, name: 'publisher' }]\n * getSuggestions({\n *   choices: [{ id: 1, name: 'admin' }, { id: 2, name: 'publisher' }],\n *   optionText: 'name',\n *   optionValue: 'id',\n *   getSuggestionText: choice => choice[optionText],\n * })('pub')\n *\n * // Will return [{ id: 2, name: 'publisher' }]\n */\nexport var getSuggestionsFactory = function (_a) {\n    var _b = _a.allowCreate, allowCreate = _b === void 0 ? false : _b, _c = _a.allowDuplicates, allowDuplicates = _c === void 0 ? false : _c, _d = _a.allowEmpty, allowEmpty = _d === void 0 ? false : _d, _e = _a.choices, choices = _e === void 0 ? [] : _e, _f = _a.createText, createText = _f === void 0 ? 'ra.action.create' : _f, _g = _a.createValue, createValue = _g === void 0 ? '@@create' : _g, _h = _a.emptyText, emptyText = _h === void 0 ? '' : _h, _j = _a.emptyValue, emptyValue = _j === void 0 ? null : _j, _k = _a.optionText, optionText = _k === void 0 ? 'name' : _k, _l = _a.optionValue, optionValue = _l === void 0 ? 'id' : _l, getChoiceText = _a.getChoiceText, getChoiceValue = _a.getChoiceValue, _m = _a.limitChoicesToValue, limitChoicesToValue = _m === void 0 ? false : _m, _o = _a.matchSuggestion, matchSuggestion = _o === void 0 ? defaultMatchSuggestion(getChoiceText) : _o, selectedItem = _a.selectedItem, _p = _a.suggestionLimit, suggestionLimit = _p === void 0 ? 0 : _p;\n    return function (filter) {\n        var suggestions = [];\n        // if an item is selected and matches the filter\n        if (selectedItem &&\n            !Array.isArray(selectedItem) &&\n            matchSuggestion(filter, selectedItem)) {\n            if (limitChoicesToValue) {\n                // display only the selected item\n                suggestions = choices.filter(function (choice) {\n                    return getChoiceValue(choice) === getChoiceValue(selectedItem);\n                });\n            }\n            else if (!allowDuplicates) {\n                // ignore the filter to show more choices\n                suggestions = removeAlreadySelectedSuggestions(choices, selectedItem, getChoiceValue);\n            }\n            else {\n                suggestions = choices;\n            }\n        }\n        else {\n            suggestions = choices.filter(function (choice) { return matchSuggestion(filter, choice); });\n            if (!allowDuplicates) {\n                suggestions = removeAlreadySelectedSuggestions(suggestions, selectedItem, getChoiceValue);\n            }\n        }\n        suggestions = limitSuggestions(suggestions, suggestionLimit);\n        var hasExactMatch = suggestions.some(function (suggestion) {\n            return matchSuggestion(filter, suggestion, true);\n        });\n        if (allowCreate) {\n            var filterIsSelectedItem = \n            // If the selectedItem is an array (for example AutocompleteArrayInput)\n            // we shouldn't try to match\n            !!selectedItem && !Array.isArray(selectedItem)\n                ? matchSuggestion(filter, selectedItem, true)\n                : false;\n            if (!hasExactMatch && !filterIsSelectedItem) {\n                suggestions.push(getSuggestion({\n                    optionText: optionText,\n                    optionValue: optionValue,\n                    text: createText,\n                    value: createValue,\n                }));\n            }\n        }\n        if (allowEmpty) {\n            suggestions.unshift(getSuggestion({\n                optionText: optionText,\n                optionValue: optionValue,\n                text: emptyText,\n                value: emptyValue,\n            }));\n        }\n        return suggestions;\n    };\n};\n/**\n * @example\n *\n * removeAlreadySelectedSuggestions(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n *  [{ id: 1, name: 'foo'}]\n * );\n *\n * // Will return [{ id: 2, name: 'bar' }]\n *\n * @param suggestions List of suggestions\n * @param selectedItems List of selection\n * @param getChoiceValue Converter function from suggestion to value\n */\nvar removeAlreadySelectedSuggestions = function (suggestions, selectedItems, getChoiceValue) {\n    if (!selectedItems) {\n        return suggestions;\n    }\n    var selectedValues = Array.isArray(selectedItems)\n        ? selectedItems.map(getChoiceValue)\n        : [getChoiceValue(selectedItems)];\n    return suggestions.filter(function (suggestion) { return !selectedValues.includes(getChoiceValue(suggestion)); });\n};\n/**\n * @example\n *\n * limitSuggestions(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n *  1\n * );\n *\n * // Will return [{ id: 1, name: 'foo' }]\n *\n * @param suggestions List of suggestions\n * @param limit\n */\nvar limitSuggestions = function (suggestions, limit) {\n    if (limit === void 0) { limit = 0; }\n    return Number.isInteger(limit) && limit > 0\n        ? suggestions.slice(0, limit)\n        : suggestions;\n};\n/**\n * addSuggestion(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n * );\n *\n * // Will return [{ id: null, name: '' }, { id: 1, name: 'foo' }, , { id: 2, name: 'bar' }]\n *\n * @param suggestions List of suggestions\n * @param options\n * @param options.optionText\n */\nvar getSuggestion = function (_a) {\n    var _b = _a.optionText, optionText = _b === void 0 ? 'name' : _b, _c = _a.optionValue, optionValue = _c === void 0 ? 'id' : _c, _d = _a.text, text = _d === void 0 ? '' : _d, _e = _a.value, value = _e === void 0 ? null : _e;\n    var suggestion = {};\n    set(suggestion, optionValue, value);\n    if (typeof optionText === 'string') {\n        set(suggestion, optionText, text);\n    }\n    return suggestion;\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,OAAO;AACnD,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,YAAY,QAAQ,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAC/B,IAAIC,WAAW,GAAGD,EAAE,CAACC,WAAW;IAAEC,eAAe,GAAGF,EAAE,CAACE,eAAe;IAAEC,UAAU,GAAGH,EAAE,CAACG,UAAU;IAAEC,OAAO,GAAGJ,EAAE,CAACI,OAAO;IAAEC,EAAE,GAAGL,EAAE,CAACM,UAAU;IAAEA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,kBAAkB,GAAGA,EAAE;IAAEE,EAAE,GAAGP,EAAE,CAACQ,WAAW;IAAEA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,UAAU,GAAGA,EAAE;IAAEE,EAAE,GAAGT,EAAE,CAACU,SAAS;IAAEA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAAEE,EAAE,GAAGX,EAAE,CAACY,UAAU;IAAEA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEE,mBAAmB,GAAGb,EAAE,CAACa,mBAAmB;IAAEC,eAAe,GAAGd,EAAE,CAACc,eAAe;IAAEC,UAAU,GAAGf,EAAE,CAACe,UAAU;IAAEC,WAAW,GAAGhB,EAAE,CAACgB,WAAW;IAAEC,YAAY,GAAGjB,EAAE,CAACiB,YAAY;IAAEC,EAAE,GAAGlB,EAAE,CAACmB,eAAe;IAAEA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;IAAEE,eAAe,GAAGpB,EAAE,CAACoB,eAAe;EACjpB,IAAIC,SAAS,GAAGvB,YAAY,EAAE;EAC9B,IAAIwB,EAAE,GAAGzB,UAAU,CAAC;MAChBkB,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA,WAAW;MACxBI,eAAe,EAAEA;IACrB,CAAC,CAAC;IAAEG,aAAa,GAAGD,EAAE,CAACC,aAAa;IAAEC,cAAc,GAAGF,EAAE,CAACE,cAAc;EACxE;EACA,IAAIC,cAAc,GAAG/B,WAAW,CAACgC,qBAAqB,CAAC;IACnDzB,WAAW,EAAEA,WAAW;IACxBC,eAAe,EAAEA,eAAe;IAChCC,UAAU,EAAEA,UAAU;IACtBC,OAAO,EAAEA,OAAO;IAChBE,UAAU,EAAEA,UAAU;IACtBE,WAAW,EAAEA,WAAW;IACxBE,SAAS,EAAEW,SAAS,CAACX,SAAS,EAAE;MAAEiB,CAAC,EAAEjB;IAAU,CAAC,CAAC;IACjDE,UAAU,EAAEA,UAAU;IACtBW,aAAa,EAAEA,aAAa;IAC5BC,cAAc,EAAEA,cAAc;IAC9BX,mBAAmB,EAAEA,mBAAmB;IACxCC,eAAe,EAAEA,eAAe;IAChCC,UAAU,EAAEA,UAAU;IACtBC,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAC1BE,eAAe,EAAEA;EACrB,CAAC,CAAC,EAAE,CACAlB,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,OAAO,EACPE,UAAU,EACVE,WAAW,EACXE,SAAS,EACTE,UAAU,EACVW,aAAa,EACbC,cAAc,EACdX,mBAAmB,EACnBC,eAAe,EACfC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZE,eAAe,EACfE,SAAS,CACZ,CAAC;EACF,OAAO;IACHE,aAAa,EAAEA,aAAa;IAC5BC,cAAc,EAAEA,cAAc;IAC9BC,cAAc,EAAEA;EACpB,CAAC;AACL,CAAC;AACD,eAAe1B,cAAc;AAC7B,IAAI6B,YAAY,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAChC,OAAOA,KAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC,GAAG,EAAE;AACpE,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA,IAAIC,sBAAsB,GAAG,SAAAA,CAAUR,aAAa,EAAE;EAAE,OAAO,UAAUS,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAE;IAChG,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;MAAEA,KAAK,GAAG,KAAK;IAAE;IACvC,IAAIC,cAAc,GAAGZ,aAAa,CAACU,UAAU,CAAC;IAC9C,IAAIG,cAAc,GAAGzC,cAAc,CAACwC,cAAc,CAAC;IACnD,IAAIE,KAAK,GAAGT,YAAY,CAACI,MAAM,CAAC;IAChC,OAAOI,cAAc,GACf,KAAK,GACLD,cAAc,IACZA,cAAc,CAACG,KAAK;IACpB;IACA;IACA,IAAIC,MAAM,CAACL,KAAK,GAAG,GAAG,GAAGG,KAAK,GAAG,GAAG,GAAGA,KAAK,EAAE,GAAG,CAAC,CAAC;EAC/D,CAAC;AAAE,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIX,qBAAqB,GAAG,SAAAA,CAAU1B,EAAE,EAAE;EAC7C,IAAIK,EAAE,GAAGL,EAAE,CAACC,WAAW;IAAEA,WAAW,GAAGI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IAAEE,EAAE,GAAGP,EAAE,CAACE,eAAe;IAAEA,eAAe,GAAGK,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IAAEE,EAAE,GAAGT,EAAE,CAACG,UAAU;IAAEA,UAAU,GAAGM,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IAAEE,EAAE,GAAGX,EAAE,CAACI,OAAO;IAAEA,OAAO,GAAGO,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAAEO,EAAE,GAAGlB,EAAE,CAACM,UAAU;IAAEA,UAAU,GAAGY,EAAE,KAAK,KAAK,CAAC,GAAG,kBAAkB,GAAGA,EAAE;IAAEI,EAAE,GAAGtB,EAAE,CAACQ,WAAW;IAAEA,WAAW,GAAGc,EAAE,KAAK,KAAK,CAAC,GAAG,UAAU,GAAGA,EAAE;IAAEkB,EAAE,GAAGxC,EAAE,CAACU,SAAS;IAAEA,SAAS,GAAG8B,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAAEC,EAAE,GAAGzC,EAAE,CAACY,UAAU;IAAEA,UAAU,GAAG6B,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEC,EAAE,GAAG1C,EAAE,CAACe,UAAU;IAAEA,UAAU,GAAG2B,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,EAAE;IAAEC,EAAE,GAAG3C,EAAE,CAACgB,WAAW;IAAEA,WAAW,GAAG2B,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEpB,aAAa,GAAGvB,EAAE,CAACuB,aAAa;IAAEC,cAAc,GAAGxB,EAAE,CAACwB,cAAc;IAAEoB,EAAE,GAAG5C,EAAE,CAACa,mBAAmB;IAAEA,mBAAmB,GAAG+B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IAAEC,EAAE,GAAG7C,EAAE,CAACc,eAAe;IAAEA,eAAe,GAAG+B,EAAE,KAAK,KAAK,CAAC,GAAGd,sBAAsB,CAACR,aAAa,CAAC,GAAGsB,EAAE;IAAE5B,YAAY,GAAGjB,EAAE,CAACiB,YAAY;IAAE6B,EAAE,GAAG9C,EAAE,CAACmB,eAAe;IAAEA,eAAe,GAAG2B,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;EACt9B,OAAO,UAAUd,MAAM,EAAE;IACrB,IAAIe,WAAW,GAAG,EAAE;IACpB;IACA,IAAI9B,YAAY,IACZ,CAAC+B,KAAK,CAACC,OAAO,CAAChC,YAAY,CAAC,IAC5BH,eAAe,CAACkB,MAAM,EAAEf,YAAY,CAAC,EAAE;MACvC,IAAIJ,mBAAmB,EAAE;QACrB;QACAkC,WAAW,GAAG3C,OAAO,CAAC4B,MAAM,CAAC,UAAUkB,MAAM,EAAE;UAC3C,OAAO1B,cAAc,CAAC0B,MAAM,CAAC,KAAK1B,cAAc,CAACP,YAAY,CAAC;QAClE,CAAC,CAAC;MACN,CAAC,MACI,IAAI,CAACf,eAAe,EAAE;QACvB;QACA6C,WAAW,GAAGI,gCAAgC,CAAC/C,OAAO,EAAEa,YAAY,EAAEO,cAAc,CAAC;MACzF,CAAC,MACI;QACDuB,WAAW,GAAG3C,OAAO;MACzB;IACJ,CAAC,MACI;MACD2C,WAAW,GAAG3C,OAAO,CAAC4B,MAAM,CAAC,UAAUkB,MAAM,EAAE;QAAE,OAAOpC,eAAe,CAACkB,MAAM,EAAEkB,MAAM,CAAC;MAAE,CAAC,CAAC;MAC3F,IAAI,CAAChD,eAAe,EAAE;QAClB6C,WAAW,GAAGI,gCAAgC,CAACJ,WAAW,EAAE9B,YAAY,EAAEO,cAAc,CAAC;MAC7F;IACJ;IACAuB,WAAW,GAAGK,gBAAgB,CAACL,WAAW,EAAE5B,eAAe,CAAC;IAC5D,IAAIkC,aAAa,GAAGN,WAAW,CAACO,IAAI,CAAC,UAAUrB,UAAU,EAAE;MACvD,OAAOnB,eAAe,CAACkB,MAAM,EAAEC,UAAU,EAAE,IAAI,CAAC;IACpD,CAAC,CAAC;IACF,IAAIhC,WAAW,EAAE;MACb,IAAIsD,oBAAoB;MACxB;MACA;MACA,CAAC,CAACtC,YAAY,IAAI,CAAC+B,KAAK,CAACC,OAAO,CAAChC,YAAY,CAAC,GACxCH,eAAe,CAACkB,MAAM,EAAEf,YAAY,EAAE,IAAI,CAAC,GAC3C,KAAK;MACX,IAAI,CAACoC,aAAa,IAAI,CAACE,oBAAoB,EAAE;QACzCR,WAAW,CAACS,IAAI,CAACC,aAAa,CAAC;UAC3B1C,UAAU,EAAEA,UAAU;UACtBC,WAAW,EAAEA,WAAW;UACxB0C,IAAI,EAAEpD,UAAU;UAChBuB,KAAK,EAAErB;QACX,CAAC,CAAC,CAAC;MACP;IACJ;IACA,IAAIL,UAAU,EAAE;MACZ4C,WAAW,CAACY,OAAO,CAACF,aAAa,CAAC;QAC9B1C,UAAU,EAAEA,UAAU;QACtBC,WAAW,EAAEA,WAAW;QACxB0C,IAAI,EAAEhD,SAAS;QACfmB,KAAK,EAAEjB;MACX,CAAC,CAAC,CAAC;IACP;IACA,OAAOmC,WAAW;EACtB,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,gCAAgC,GAAG,SAAAA,CAAUJ,WAAW,EAAEa,aAAa,EAAEpC,cAAc,EAAE;EACzF,IAAI,CAACoC,aAAa,EAAE;IAChB,OAAOb,WAAW;EACtB;EACA,IAAIc,cAAc,GAAGb,KAAK,CAACC,OAAO,CAACW,aAAa,CAAC,GAC3CA,aAAa,CAACE,GAAG,CAACtC,cAAc,CAAC,GACjC,CAACA,cAAc,CAACoC,aAAa,CAAC,CAAC;EACrC,OAAOb,WAAW,CAACf,MAAM,CAAC,UAAUC,UAAU,EAAE;IAAE,OAAO,CAAC4B,cAAc,CAACE,QAAQ,CAACvC,cAAc,CAACS,UAAU,CAAC,CAAC;EAAE,CAAC,CAAC;AACrH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAImB,gBAAgB,GAAG,SAAAA,CAAUL,WAAW,EAAEiB,KAAK,EAAE;EACjD,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IAAEA,KAAK,GAAG,CAAC;EAAE;EACnC,OAAOC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,GACrCjB,WAAW,CAACoB,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,GAC3BjB,WAAW;AACrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIU,aAAa,GAAG,SAAAA,CAAUzD,EAAE,EAAE;EAC9B,IAAIK,EAAE,GAAGL,EAAE,CAACe,UAAU;IAAEA,UAAU,GAAGV,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,EAAE;IAAEE,EAAE,GAAGP,EAAE,CAACgB,WAAW;IAAEA,WAAW,GAAGT,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEE,EAAE,GAAGT,EAAE,CAAC0D,IAAI;IAAEA,IAAI,GAAGjD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAAEE,EAAE,GAAGX,EAAE,CAAC6B,KAAK;IAAEA,KAAK,GAAGlB,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;EAC9N,IAAIsB,UAAU,GAAG,CAAC,CAAC;EACnBrC,GAAG,CAACqC,UAAU,EAAEjB,WAAW,EAAEa,KAAK,CAAC;EACnC,IAAI,OAAOd,UAAU,KAAK,QAAQ,EAAE;IAChCnB,GAAG,CAACqC,UAAU,EAAElB,UAAU,EAAE2C,IAAI,CAAC;EACrC;EACA,OAAOzB,UAAU;AACrB,CAAC"},"metadata":{},"sourceType":"module"}