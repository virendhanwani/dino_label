{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { useReducer, useEffect, useRef, useCallback } from 'react';\nimport { SORT_ASC, SORT_DESC } from '../reducer/admin/resource/list/queryReducer';\nvar sortReducer = function (state, action) {\n  switch (action.type) {\n    case 'SET_SORT':\n      return action.payload.sort;\n    case 'SET_SORT_FIELD':\n      {\n        var field = action.payload.field;\n        var order = state.field === field ? state.order === SORT_ASC ? SORT_DESC : SORT_ASC : SORT_ASC;\n        return {\n          field: field,\n          order: order\n        };\n      }\n    case 'SET_SORT_ORDER':\n      {\n        var order = action.payload.order;\n        return __assign(__assign({}, state), {\n          order: order\n        });\n      }\n    default:\n      return state;\n  }\n};\nexport var defaultSort = {\n  field: 'id',\n  order: 'DESC'\n};\n/**\n * Set the sort { field, order }\n * @name setSort\n * @function\n * @param {SortPayload} sort the sort object\n */\n/**\n * Set the sort field, swap the order if the field is the same\n * @name setSortField\n * @function\n * @param {string} field the sort field\n */\n/**\n * Set the sort order\n * @name setSortOrder\n * @function\n * @param {string} order The sort order, either ASC or DESC\n */\n/**\n * @typedef SortProps\n * @type {Object}\n * @property {Object} sort: the sort object.\n * @property {string} sort.field: the sort object.\n * @property {'ASC' | 'DESC'} sort.order: the sort object.\n * @property {setSort} setSort\n * @property {setSortField} setSortField\n * @property {setSortOrder} setSortOrder\n */\n/**\n * Hooks to provide sort state\n *\n * @example\n *\n * const { sort, setSort, setSortField, setSortOrder } = useSort({\n *      field: 'name',\n *      order: 'ASC',\n * });\n *\n * setSort({ field: 'name', order: 'ASC' });\n * // is the same as\n * setSortField('name');\n * setSortOrder('ASC');\n *\n * @param {Object} initialSort\n * @param {string} initialSort.field The initial sort field\n * @param {string} initialSort.order The initial sort order\n * @returns {SortProps} The sort props\n */\nvar useSortState = function (initialSort) {\n  if (initialSort === void 0) {\n    initialSort = defaultSort;\n  }\n  var _a = useReducer(sortReducer, initialSort),\n    sort = _a[0],\n    dispatch = _a[1];\n  var isFirstRender = useRef(true);\n  useEffect(function () {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    dispatch({\n      type: 'SET_SORT',\n      payload: {\n        sort: initialSort\n      }\n    });\n  }, [initialSort.field, initialSort.order]); // eslint-disable-line react-hooks/exhaustive-deps\n  return {\n    setSort: useCallback(function (sort) {\n      return dispatch({\n        type: 'SET_SORT',\n        payload: {\n          sort: sort\n        }\n      });\n    }, [dispatch]),\n    setSortField: useCallback(function (field) {\n      return dispatch({\n        type: 'SET_SORT_FIELD',\n        payload: {\n          field: field\n        }\n      });\n    }, [dispatch]),\n    setSortOrder: useCallback(function (order) {\n      return dispatch({\n        type: 'SET_SORT_ORDER',\n        payload: {\n          order: order\n        }\n      });\n    }, [dispatch]),\n    sort: sort\n  };\n};\nexport default useSortState;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useReducer","useEffect","useRef","useCallback","SORT_ASC","SORT_DESC","sortReducer","state","action","type","payload","sort","field","order","defaultSort","useSortState","initialSort","_a","dispatch","isFirstRender","current","setSort","setSortField","setSortOrder"],"sources":["/node_modules/ra-core/esm/controller/useSortState.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useReducer, useEffect, useRef, useCallback } from 'react';\nimport { SORT_ASC, SORT_DESC, } from '../reducer/admin/resource/list/queryReducer';\nvar sortReducer = function (state, action) {\n    switch (action.type) {\n        case 'SET_SORT':\n            return action.payload.sort;\n        case 'SET_SORT_FIELD': {\n            var field = action.payload.field;\n            var order = state.field === field\n                ? state.order === SORT_ASC\n                    ? SORT_DESC\n                    : SORT_ASC\n                : SORT_ASC;\n            return { field: field, order: order };\n        }\n        case 'SET_SORT_ORDER': {\n            var order = action.payload.order;\n            return __assign(__assign({}, state), { order: order });\n        }\n        default:\n            return state;\n    }\n};\nexport var defaultSort = { field: 'id', order: 'DESC' };\n/**\n * Set the sort { field, order }\n * @name setSort\n * @function\n * @param {SortPayload} sort the sort object\n */\n/**\n * Set the sort field, swap the order if the field is the same\n * @name setSortField\n * @function\n * @param {string} field the sort field\n */\n/**\n * Set the sort order\n * @name setSortOrder\n * @function\n * @param {string} order The sort order, either ASC or DESC\n */\n/**\n * @typedef SortProps\n * @type {Object}\n * @property {Object} sort: the sort object.\n * @property {string} sort.field: the sort object.\n * @property {'ASC' | 'DESC'} sort.order: the sort object.\n * @property {setSort} setSort\n * @property {setSortField} setSortField\n * @property {setSortOrder} setSortOrder\n */\n/**\n * Hooks to provide sort state\n *\n * @example\n *\n * const { sort, setSort, setSortField, setSortOrder } = useSort({\n *      field: 'name',\n *      order: 'ASC',\n * });\n *\n * setSort({ field: 'name', order: 'ASC' });\n * // is the same as\n * setSortField('name');\n * setSortOrder('ASC');\n *\n * @param {Object} initialSort\n * @param {string} initialSort.field The initial sort field\n * @param {string} initialSort.order The initial sort order\n * @returns {SortProps} The sort props\n */\nvar useSortState = function (initialSort) {\n    if (initialSort === void 0) { initialSort = defaultSort; }\n    var _a = useReducer(sortReducer, initialSort), sort = _a[0], dispatch = _a[1];\n    var isFirstRender = useRef(true);\n    useEffect(function () {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            return;\n        }\n        dispatch({ type: 'SET_SORT', payload: { sort: initialSort } });\n    }, [initialSort.field, initialSort.order]); // eslint-disable-line react-hooks/exhaustive-deps\n    return {\n        setSort: useCallback(function (sort) {\n            return dispatch({ type: 'SET_SORT', payload: { sort: sort } });\n        }, [dispatch]),\n        setSortField: useCallback(function (field) {\n            return dispatch({ type: 'SET_SORT_FIELD', payload: { field: field } });\n        }, [dispatch]),\n        setSortOrder: useCallback(function (order) {\n            return dispatch({ type: 'SET_SORT_ORDER', payload: { order: order } });\n        }, [dispatch]),\n        sort: sort,\n    };\n};\nexport default useSortState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}