{"ast":null,"code":"import * as React from 'react';\nimport { createContext, useContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\nexport var SaveContext = createContext(undefined);\nexport var SaveContextProvider = function (_a) {\n  var children = _a.children,\n    value = _a.value;\n  return React.createElement(SaveContext.Provider, {\n    value: value\n  }, children);\n};\n/**\n * Get the save() function and its status\n *\n * Used in forms.\n *\n * @example\n *\n * const {\n *     save,\n *     saving\n * } = useSaveContext();\n */\nexport var useSaveContext = function (props) {\n  var context = useContext(SaveContext);\n  if (!context || !context.save || !context.setOnFailure) {\n    /**\n     * The element isn't inside a <SaveContextProvider>\n     * To avoid breakage in that case, fallback to props\n     *\n     * @deprecated - to be removed in 4.0\n     */\n    if (process.env.NODE_ENV !== 'production') {\n      console.log(\"Edit or Create child components must be used inside a <SaveContextProvider>. Relying on props rather than context to get persistence related data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\n    }\n    return props;\n  }\n  return context;\n};\nexport var usePickSaveContext = function (context) {\n  var value = useMemo(function () {\n    return pick(context, ['save', 'saving', 'setOnFailure', 'setOnSuccess', 'setTransform', 'onSuccessRef', 'onFailureRef', 'transformRef']);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [context.save, context.saving, context.setOnFailure, context.setOnSuccess, context.setTransform, context.setTransform, context.onFailureRef, context.onSuccessRef, context.transformRef]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  return value;\n};","map":{"version":3,"names":["React","createContext","useContext","useMemo","pick","SaveContext","undefined","SaveContextProvider","_a","children","value","createElement","Provider","useSaveContext","props","context","save","setOnFailure","process","env","NODE_ENV","console","log","usePickSaveContext","saving","setOnSuccess","setTransform","onFailureRef","onSuccessRef","transformRef"],"sources":["/node_modules/ra-core/esm/controller/details/SaveContext.js"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\nexport var SaveContext = createContext(undefined);\nexport var SaveContextProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(SaveContext.Provider, { value: value }, children));\n};\n/**\n * Get the save() function and its status\n *\n * Used in forms.\n *\n * @example\n *\n * const {\n *     save,\n *     saving\n * } = useSaveContext();\n */\nexport var useSaveContext = function (props) {\n    var context = useContext(SaveContext);\n    if (!context || !context.save || !context.setOnFailure) {\n        /**\n         * The element isn't inside a <SaveContextProvider>\n         * To avoid breakage in that case, fallback to props\n         *\n         * @deprecated - to be removed in 4.0\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            console.log(\"Edit or Create child components must be used inside a <SaveContextProvider>. Relying on props rather than context to get persistence related data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\n        }\n        return props;\n    }\n    return context;\n};\nexport var usePickSaveContext = function (context) {\n    var value = useMemo(function () {\n        return pick(context, [\n            'save',\n            'saving',\n            'setOnFailure',\n            'setOnSuccess',\n            'setTransform',\n            'onSuccessRef',\n            'onFailureRef',\n            'transformRef',\n        ]);\n    }, \n    /* eslint-disable react-hooks/exhaustive-deps */\n    [\n        context.save,\n        context.saving,\n        context.setOnFailure,\n        context.setOnSuccess,\n        context.setTransform,\n        context.setTransform,\n        context.onFailureRef,\n        context.onSuccessRef,\n        context.transformRef,\n    ]\n    /* eslint-enable react-hooks/exhaustive-deps */\n    );\n    return value;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,IAAIC,WAAW,GAAGJ,aAAa,CAACK,SAAS,CAAC;AACjD,OAAO,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAC3C,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAQ;IAAEC,KAAK,GAAGF,EAAE,CAACE,KAAK;EAC5C,OAAQV,KAAK,CAACW,aAAa,CAACN,WAAW,CAACO,QAAQ,EAAE;IAAEF,KAAK,EAAEA;EAAM,CAAC,EAAED,QAAQ,CAAC;AACjF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,cAAc,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACzC,IAAIC,OAAO,GAAGb,UAAU,CAACG,WAAW,CAAC;EACrC,IAAI,CAACU,OAAO,IAAI,CAACA,OAAO,CAACC,IAAI,IAAI,CAACD,OAAO,CAACE,YAAY,EAAE;IACpD;AACR;AACA;AACA;AACA;AACA;IACQ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,gPAAgP,CAAC;IACjQ;IACA,OAAOR,KAAK;EAChB;EACA,OAAOC,OAAO;AAClB,CAAC;AACD,OAAO,IAAIQ,kBAAkB,GAAG,SAAAA,CAAUR,OAAO,EAAE;EAC/C,IAAIL,KAAK,GAAGP,OAAO,CAAC,YAAY;IAC5B,OAAOC,IAAI,CAACW,OAAO,EAAE,CACjB,MAAM,EACN,QAAQ,EACR,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,CACjB,CAAC;EACN,CAAC,EACD;EACA,CACIA,OAAO,CAACC,IAAI,EACZD,OAAO,CAACS,MAAM,EACdT,OAAO,CAACE,YAAY,EACpBF,OAAO,CAACU,YAAY,EACpBV,OAAO,CAACW,YAAY,EACpBX,OAAO,CAACW,YAAY,EACpBX,OAAO,CAACY,YAAY,EACpBZ,OAAO,CAACa,YAAY,EACpBb,OAAO,CAACc,YAAY;EAExB,gDACC;;EACD,OAAOnB,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module"}