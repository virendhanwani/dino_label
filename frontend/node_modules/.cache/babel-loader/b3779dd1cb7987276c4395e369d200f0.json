{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkUpdateWithConfirmButton from './BulkUpdateWithConfirmButton';\nimport BulkUpdateWithUndoButton from './BulkUpdateWithUndoButton';\n/**\n * Updates the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkUpdateButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkUpdateButton label=\"Reset Views\" data={{ views: 0 }} basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkUpdateButton = function (props) {\n  var mutationMode = props.mutationMode,\n    rest = __rest(props, [\"mutationMode\"]);\n  return mutationMode === 'undoable' ? React.createElement(BulkUpdateWithUndoButton, __assign({}, rest)) : React.createElement(BulkUpdateWithConfirmButton, __assign({\n    mutationMode: mutationMode\n  }, rest));\n};\nBulkUpdateButton.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  icon: PropTypes.element\n};\nBulkUpdateButton.defaultProps = {\n  mutationMode: 'undoable',\n  data: []\n};\nexport default BulkUpdateButton;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","BulkUpdateWithConfirmButton","BulkUpdateWithUndoButton","BulkUpdateButton","props","mutationMode","rest","createElement","propTypes","basePath","string","label","resource","selectedIds","arrayOf","any","oneOf","icon","element","defaultProps","data"],"sources":["/node_modules/ra-ui-materialui/esm/button/BulkUpdateButton.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkUpdateWithConfirmButton from './BulkUpdateWithConfirmButton';\nimport BulkUpdateWithUndoButton from './BulkUpdateWithUndoButton';\n/**\n * Updates the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkUpdateButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkUpdateButton label=\"Reset Views\" data={{ views: 0 }} basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkUpdateButton = function (props) {\n    var mutationMode = props.mutationMode, rest = __rest(props, [\"mutationMode\"]);\n    return mutationMode === 'undoable' ? (React.createElement(BulkUpdateWithUndoButton, __assign({}, rest))) : (React.createElement(BulkUpdateWithConfirmButton, __assign({ mutationMode: mutationMode }, rest)));\n};\nBulkUpdateButton.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    icon: PropTypes.element,\n};\nBulkUpdateButton.defaultProps = {\n    mutationMode: 'undoable',\n    data: [],\n};\nexport default BulkUpdateButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}