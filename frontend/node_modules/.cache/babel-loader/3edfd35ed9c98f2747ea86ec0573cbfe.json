{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableBody } from '@material-ui/core';\nimport classnames from 'classnames';\nimport { shallowEqual } from 'react-redux';\nimport DatagridRow, { PureDatagridRow } from './DatagridRow';\nvar DatagridBody = React.forwardRef(function (_a, ref) {\n  var basePath = _a.basePath,\n    children = _a.children,\n    classes = _a.classes,\n    className = _a.className,\n    data = _a.data,\n    expand = _a.expand,\n    hasBulkActions = _a.hasBulkActions,\n    hover = _a.hover,\n    ids = _a.ids,\n    onToggleItem = _a.onToggleItem,\n    resource = _a.resource,\n    row = _a.row,\n    rowClick = _a.rowClick,\n    rowStyle = _a.rowStyle,\n    selectedIds = _a.selectedIds,\n    isRowSelectable = _a.isRowSelectable,\n    rest = __rest(_a, [\"basePath\", \"children\", \"classes\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"ids\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"isRowSelectable\"]);\n  return React.createElement(TableBody, __assign({\n    ref: ref,\n    className: classnames('datagrid-body', className)\n  }, rest), ids.map(function (id, rowIndex) {\n    var _a;\n    return cloneElement(row, {\n      basePath: basePath,\n      classes: classes,\n      className: classnames(classes.row, (_a = {}, _a[classes.rowEven] = rowIndex % 2 === 0, _a[classes.rowOdd] = rowIndex % 2 !== 0, _a[classes.clickableRow] = rowClick, _a)),\n      expand: expand,\n      hasBulkActions: hasBulkActions && !!selectedIds,\n      hover: hover,\n      id: id,\n      key: id,\n      onToggleItem: onToggleItem,\n      record: data[id],\n      resource: resource,\n      rowClick: rowClick,\n      selectable: !isRowSelectable || isRowSelectable(data[id]),\n      selected: selectedIds === null || selectedIds === void 0 ? void 0 : selectedIds.includes(id),\n      style: rowStyle ? rowStyle(data[id], rowIndex) : null\n    }, children);\n  }));\n});\nDatagridBody.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.any,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  // @ts-ignore\n  data: PropTypes.object.isRequired,\n  // @ts-ignore\n  expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n  hasBulkActions: PropTypes.bool.isRequired,\n  hover: PropTypes.bool,\n  ids: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  row: PropTypes.element,\n  rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  rowStyle: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  styles: PropTypes.object,\n  isRowSelectable: PropTypes.func\n};\nDatagridBody.defaultProps = {\n  data: {},\n  hasBulkActions: false,\n  ids: [],\n  row: React.createElement(DatagridRow, null)\n};\n// trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\nDatagridBody.muiName = 'TableBody';\nvar areEqual = function (prevProps, nextProps) {\n  var _1 = prevProps.children,\n    _2 = prevProps.expand,\n    _3 = prevProps.row,\n    prevPropsWithoutChildren = __rest(prevProps, [\"children\", \"expand\", \"row\"]);\n  var _4 = nextProps.children,\n    _5 = nextProps.expand,\n    _6 = nextProps.row,\n    nextPropsWithoutChildren = __rest(nextProps, [\"children\", \"expand\", \"row\"]);\n  return shallowEqual(prevPropsWithoutChildren, nextPropsWithoutChildren);\n};\nexport var PureDatagridBody = memo(DatagridBody, areEqual);\n// trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\nPureDatagridBody.muiName = 'TableBody';\n// @ts-ignore\nPureDatagridBody.defaultProps = {\n  row: React.createElement(PureDatagridRow, null)\n};\nexport default DatagridBody;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","cloneElement","memo","PropTypes","TableBody","classnames","shallowEqual","DatagridRow","PureDatagridRow","DatagridBody","forwardRef","_a","ref","basePath","children","classes","className","data","expand","hasBulkActions","hover","ids","onToggleItem","resource","row","rowClick","rowStyle","selectedIds","isRowSelectable","rest","createElement","map","id","rowIndex","rowEven","rowOdd","clickableRow","key","record","selectable","selected","includes","style","propTypes","string","any","node","object","isRequired","oneOfType","element","elementType","bool","arrayOf","func","styles","defaultProps","muiName","areEqual","prevProps","nextProps","_1","_2","_3","prevPropsWithoutChildren","_4","_5","_6","nextPropsWithoutChildren","PureDatagridBody"],"sources":["/node_modules/ra-ui-materialui/esm/list/datagrid/DatagridBody.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableBody } from '@material-ui/core';\nimport classnames from 'classnames';\nimport { shallowEqual } from 'react-redux';\nimport DatagridRow, { PureDatagridRow } from './DatagridRow';\nvar DatagridBody = React.forwardRef(function (_a, ref) {\n    var basePath = _a.basePath, children = _a.children, classes = _a.classes, className = _a.className, data = _a.data, expand = _a.expand, hasBulkActions = _a.hasBulkActions, hover = _a.hover, ids = _a.ids, onToggleItem = _a.onToggleItem, resource = _a.resource, row = _a.row, rowClick = _a.rowClick, rowStyle = _a.rowStyle, selectedIds = _a.selectedIds, isRowSelectable = _a.isRowSelectable, rest = __rest(_a, [\"basePath\", \"children\", \"classes\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"ids\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"isRowSelectable\"]);\n    return (React.createElement(TableBody, __assign({ ref: ref, className: classnames('datagrid-body', className) }, rest), ids.map(function (id, rowIndex) {\n        var _a;\n        return cloneElement(row, {\n            basePath: basePath,\n            classes: classes,\n            className: classnames(classes.row, (_a = {},\n                _a[classes.rowEven] = rowIndex % 2 === 0,\n                _a[classes.rowOdd] = rowIndex % 2 !== 0,\n                _a[classes.clickableRow] = rowClick,\n                _a)),\n            expand: expand,\n            hasBulkActions: hasBulkActions && !!selectedIds,\n            hover: hover,\n            id: id,\n            key: id,\n            onToggleItem: onToggleItem,\n            record: data[id],\n            resource: resource,\n            rowClick: rowClick,\n            selectable: !isRowSelectable || isRowSelectable(data[id]),\n            selected: selectedIds === null || selectedIds === void 0 ? void 0 : selectedIds.includes(id),\n            style: rowStyle ? rowStyle(data[id], rowIndex) : null,\n        }, children);\n    })));\n});\nDatagridBody.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.any,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    // @ts-ignore\n    data: PropTypes.object.isRequired,\n    // @ts-ignore\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool.isRequired,\n    hover: PropTypes.bool,\n    ids: PropTypes.arrayOf(PropTypes.any).isRequired,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    row: PropTypes.element,\n    rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    rowStyle: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    styles: PropTypes.object,\n    isRowSelectable: PropTypes.func,\n};\nDatagridBody.defaultProps = {\n    data: {},\n    hasBulkActions: false,\n    ids: [],\n    row: React.createElement(DatagridRow, null),\n};\n// trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\nDatagridBody.muiName = 'TableBody';\nvar areEqual = function (prevProps, nextProps) {\n    var _1 = prevProps.children, _2 = prevProps.expand, _3 = prevProps.row, prevPropsWithoutChildren = __rest(prevProps, [\"children\", \"expand\", \"row\"]);\n    var _4 = nextProps.children, _5 = nextProps.expand, _6 = nextProps.row, nextPropsWithoutChildren = __rest(nextProps, [\"children\", \"expand\", \"row\"]);\n    return shallowEqual(prevPropsWithoutChildren, nextPropsWithoutChildren);\n};\nexport var PureDatagridBody = memo(DatagridBody, areEqual);\n// trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\nPureDatagridBody.muiName = 'TableBody';\n// @ts-ignore\nPureDatagridBody.defaultProps = {\n    row: React.createElement(PureDatagridRow, null),\n};\nexport default DatagridBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}