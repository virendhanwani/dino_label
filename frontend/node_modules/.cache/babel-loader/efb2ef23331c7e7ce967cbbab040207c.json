{"ast":null,"code":"/**\n * Fork of the https://github.com/ignatevdev/final-form-submit-errors\n *\n * In react-admin, errors might be objects with `message` and `args` properties which\n * are used for translation.\n * The original final-form-submit-errors mutator was considering those errors as form\n * nested field like `name.message` and `name.args`.\n * This version detects those objects.\n */\nexport function resetSubmitErrors(_a, state, _b) {\n  var _c = _a[0],\n    prev = _c.prev,\n    current = _c.current;\n  var getIn = _b.getIn,\n    setIn = _b.setIn;\n  // Reset the general submit error on any value change\n  if (state.formState.submitError) {\n    delete state.formState.submitError;\n  }\n  if (!isObjectEmpty(state.formState.submitErrors)) {\n    // Flatten nested errors object for easier comparison\n    var flatErrors = flatten(state.formState.submitErrors);\n    var changed_1 = [];\n    // Iterate over each error\n    Object.keys(flatErrors).forEach(function (key) {\n      // Compare the value for the error field path\n      if (getIn(prev, key) !== getIn(current, key)) {\n        changed_1.push(key);\n      }\n    });\n    // Reset the error on value change\n    if (changed_1.length) {\n      var newErrors_1 = state.formState.submitErrors;\n      changed_1.forEach(function (key) {\n        newErrors_1 = setIn(newErrors_1, key, null);\n      });\n      // Clear submit errors from empty objects and arrays\n      var cleanErrors = clean(newErrors_1);\n      state.formState.submitErrors = cleanErrors;\n    }\n  }\n}\nexport function clean(obj) {\n  var newObj = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key] && typeof obj[key] === 'object') {\n      var newVal = clean(obj[key]);\n      if (!isObjectEmpty(newVal) && newVal.length !== 0) {\n        newObj[key] = newVal;\n      }\n    } else if (obj[key] !== null) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\nexport function flatten(obj) {\n  var toReturn = {};\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n    if (typeof obj[i] === 'object' && obj[i] !== null && !isValidationError(obj[i])) {\n      var flatObject = flatten(obj[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) {\n          continue;\n        }\n        // Make a bracket array notation like some[1].array[0]\n        var key = (i + \".\" + x).split('.').reduce(function (str, value) {\n          if (/^\\[\\d\\]/.test(value)) {\n            return \"\" + str + value;\n          }\n          if (!isNaN(Number(value))) {\n            return str + \"[\" + value + \"]\";\n          }\n          if (str) {\n            return str + \".\" + value;\n          }\n          return value;\n        }, '');\n        toReturn[key] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = obj[i];\n    }\n  }\n  return toReturn;\n}\nexport var isValidationError = function (obj) {\n  return obj.message && obj.args;\n};\nexport function isObjectEmpty(obj) {\n  if (!obj) {\n    return true;\n  }\n  return Object.entries(obj).length === 0 && obj.constructor === Object;\n}\nexport default {\n  resetSubmitErrors: resetSubmitErrors\n};","map":{"version":3,"names":["resetSubmitErrors","_a","state","_b","_c","prev","current","getIn","setIn","formState","submitError","isObjectEmpty","submitErrors","flatErrors","flatten","changed_1","Object","keys","forEach","key","push","length","newErrors_1","cleanErrors","clean","obj","newObj","Array","isArray","newVal","toReturn","i","hasOwnProperty","isValidationError","flatObject","x","split","reduce","str","value","test","isNaN","Number","message","args","entries","constructor"],"sources":["/node_modules/ra-core/esm/form/submitErrorsMutators.js"],"sourcesContent":["/**\n * Fork of the https://github.com/ignatevdev/final-form-submit-errors\n *\n * In react-admin, errors might be objects with `message` and `args` properties which\n * are used for translation.\n * The original final-form-submit-errors mutator was considering those errors as form\n * nested field like `name.message` and `name.args`.\n * This version detects those objects.\n */\nexport function resetSubmitErrors(_a, state, _b) {\n    var _c = _a[0], prev = _c.prev, current = _c.current;\n    var getIn = _b.getIn, setIn = _b.setIn;\n    // Reset the general submit error on any value change\n    if (state.formState.submitError) {\n        delete state.formState.submitError;\n    }\n    if (!isObjectEmpty(state.formState.submitErrors)) {\n        // Flatten nested errors object for easier comparison\n        var flatErrors = flatten(state.formState.submitErrors);\n        var changed_1 = [];\n        // Iterate over each error\n        Object.keys(flatErrors).forEach(function (key) {\n            // Compare the value for the error field path\n            if (getIn(prev, key) !== getIn(current, key)) {\n                changed_1.push(key);\n            }\n        });\n        // Reset the error on value change\n        if (changed_1.length) {\n            var newErrors_1 = state.formState.submitErrors;\n            changed_1.forEach(function (key) {\n                newErrors_1 = setIn(newErrors_1, key, null);\n            });\n            // Clear submit errors from empty objects and arrays\n            var cleanErrors = clean(newErrors_1);\n            state.formState.submitErrors = cleanErrors;\n        }\n    }\n}\nexport function clean(obj) {\n    var newObj = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach(function (key) {\n        if (obj[key] && typeof obj[key] === 'object') {\n            var newVal = clean(obj[key]);\n            if (!isObjectEmpty(newVal) && newVal.length !== 0) {\n                newObj[key] = newVal;\n            }\n        }\n        else if (obj[key] !== null) {\n            newObj[key] = obj[key];\n        }\n    });\n    return newObj;\n}\nexport function flatten(obj) {\n    var toReturn = {};\n    for (var i in obj) {\n        if (!obj.hasOwnProperty(i)) {\n            continue;\n        }\n        if (typeof obj[i] === 'object' &&\n            obj[i] !== null &&\n            !isValidationError(obj[i])) {\n            var flatObject = flatten(obj[i]);\n            for (var x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) {\n                    continue;\n                }\n                // Make a bracket array notation like some[1].array[0]\n                var key = (i + \".\" + x).split('.').reduce(function (str, value) {\n                    if (/^\\[\\d\\]/.test(value)) {\n                        return \"\" + str + value;\n                    }\n                    if (!isNaN(Number(value))) {\n                        return str + \"[\" + value + \"]\";\n                    }\n                    if (str) {\n                        return str + \".\" + value;\n                    }\n                    return value;\n                }, '');\n                toReturn[key] = flatObject[x];\n            }\n        }\n        else {\n            toReturn[i] = obj[i];\n        }\n    }\n    return toReturn;\n}\nexport var isValidationError = function (obj) { return obj.message && obj.args; };\nexport function isObjectEmpty(obj) {\n    if (!obj) {\n        return true;\n    }\n    return Object.entries(obj).length === 0 && obj.constructor === Object;\n}\nexport default {\n    resetSubmitErrors: resetSubmitErrors,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}