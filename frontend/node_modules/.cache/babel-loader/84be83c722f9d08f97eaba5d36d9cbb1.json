{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { useDelete } from '../../dataProvider';\nimport { CRUD_DELETE } from '../../actions';\nimport { useRefresh, useNotify, useRedirect } from '../../sideEffect';\nimport { useResourceContext } from '../../core';\n/**\n * Prepare a set of callbacks for a delete button guarded by confirmation dialog\n *\n * @example\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     basePath,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const {\n *         open,\n *         loading,\n *         handleDialogOpen,\n *         handleDialogClose,\n *         handleDelete,\n *     } = useDeleteWithConfirmController({\n *         resource,\n *         record,\n *         redirect,\n *         basePath,\n *         onClick,\n *     });\n *\n *     return (\n *         <Fragment>\n *             <Button\n *                 onClick={handleDialogOpen}\n *                 label=\"ra.action.delete\"\n *                 {...rest}\n *             >\n *                 {icon}\n *             </Button>\n *             <Confirm\n *                 isOpen={open}\n *                 loading={loading}\n *                 title=\"ra.message.delete_title\"\n *                 content=\"ra.message.delete_content\"\n *                 translateOptions={{\n *                     name: resource,\n *                     id: record.id,\n *                 }}\n *                 onConfirm={handleDelete}\n *                 onClose={handleDialogClose}\n *             />\n *         </Fragment>\n *     );\n * };\n */\nvar useDeleteWithConfirmController = function (props) {\n  var record = props.record,\n    redirectTo = props.redirect,\n    basePath = props.basePath,\n    mutationMode = props.mutationMode,\n    onClick = props.onClick,\n    onSuccess = props.onSuccess,\n    onFailure = props.onFailure;\n  var resource = useResourceContext(props);\n  var _a = useState(false),\n    open = _a[0],\n    setOpen = _a[1];\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var refresh = useRefresh();\n  var _b = useDelete(resource, null, null, {\n      action: CRUD_DELETE,\n      onSuccess: function (response) {\n        setOpen(false);\n        if (onSuccess === undefined) {\n          notify('ra.notification.deleted', {\n            type: 'info',\n            messageArgs: {\n              smart_count: 1\n            },\n            undoable: mutationMode === 'undoable'\n          });\n          redirect(redirectTo, basePath || \"/\" + resource);\n          refresh();\n        } else {\n          onSuccess(response);\n        }\n      },\n      onFailure: function (error) {\n        setOpen(false);\n        if (onFailure === undefined) {\n          notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n            type: 'warning',\n            messageArgs: {\n              _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n            }\n          });\n          refresh();\n        } else {\n          onFailure(error);\n        }\n      },\n      mutationMode: mutationMode\n    }),\n    deleteOne = _b[0],\n    loading = _b[1].loading;\n  var handleDialogOpen = function (e) {\n    setOpen(true);\n    e.stopPropagation();\n  };\n  var handleDialogClose = function (e) {\n    setOpen(false);\n    e.stopPropagation();\n  };\n  var handleDelete = useCallback(function (event) {\n    event.stopPropagation();\n    deleteOne({\n      payload: {\n        id: record.id,\n        previousData: record\n      }\n    });\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [deleteOne, onClick, record]);\n  return {\n    open: open,\n    loading: loading,\n    handleDialogOpen: handleDialogOpen,\n    handleDialogClose: handleDialogClose,\n    handleDelete: handleDelete\n  };\n};\nexport default useDeleteWithConfirmController;","map":{"version":3,"names":["useState","useCallback","useDelete","CRUD_DELETE","useRefresh","useNotify","useRedirect","useResourceContext","useDeleteWithConfirmController","props","record","redirectTo","redirect","basePath","mutationMode","onClick","onSuccess","onFailure","resource","_a","open","setOpen","notify","refresh","_b","action","response","undefined","type","messageArgs","smart_count","undoable","error","message","_","deleteOne","loading","handleDialogOpen","e","stopPropagation","handleDialogClose","handleDelete","event","payload","id","previousData"],"sources":["/node_modules/ra-core/esm/controller/button/useDeleteWithConfirmController.js"],"sourcesContent":["import { useState, useCallback, } from 'react';\nimport { useDelete } from '../../dataProvider';\nimport { CRUD_DELETE } from '../../actions';\nimport { useRefresh, useNotify, useRedirect, } from '../../sideEffect';\nimport { useResourceContext } from '../../core';\n/**\n * Prepare a set of callbacks for a delete button guarded by confirmation dialog\n *\n * @example\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     basePath,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const {\n *         open,\n *         loading,\n *         handleDialogOpen,\n *         handleDialogClose,\n *         handleDelete,\n *     } = useDeleteWithConfirmController({\n *         resource,\n *         record,\n *         redirect,\n *         basePath,\n *         onClick,\n *     });\n *\n *     return (\n *         <Fragment>\n *             <Button\n *                 onClick={handleDialogOpen}\n *                 label=\"ra.action.delete\"\n *                 {...rest}\n *             >\n *                 {icon}\n *             </Button>\n *             <Confirm\n *                 isOpen={open}\n *                 loading={loading}\n *                 title=\"ra.message.delete_title\"\n *                 content=\"ra.message.delete_content\"\n *                 translateOptions={{\n *                     name: resource,\n *                     id: record.id,\n *                 }}\n *                 onConfirm={handleDelete}\n *                 onClose={handleDialogClose}\n *             />\n *         </Fragment>\n *     );\n * };\n */\nvar useDeleteWithConfirmController = function (props) {\n    var record = props.record, redirectTo = props.redirect, basePath = props.basePath, mutationMode = props.mutationMode, onClick = props.onClick, onSuccess = props.onSuccess, onFailure = props.onFailure;\n    var resource = useResourceContext(props);\n    var _a = useState(false), open = _a[0], setOpen = _a[1];\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var refresh = useRefresh();\n    var _b = useDelete(resource, null, null, {\n        action: CRUD_DELETE,\n        onSuccess: function (response) {\n            setOpen(false);\n            if (onSuccess === undefined) {\n                notify('ra.notification.deleted', {\n                    type: 'info',\n                    messageArgs: { smart_count: 1 },\n                    undoable: mutationMode === 'undoable',\n                });\n                redirect(redirectTo, basePath || \"/\" + resource);\n                refresh();\n            }\n            else {\n                onSuccess(response);\n            }\n        },\n        onFailure: function (error) {\n            setOpen(false);\n            if (onFailure === undefined) {\n                notify(typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error', {\n                    type: 'warning',\n                    messageArgs: {\n                        _: typeof error === 'string'\n                            ? error\n                            : error && error.message\n                                ? error.message\n                                : undefined,\n                    },\n                });\n                refresh();\n            }\n            else {\n                onFailure(error);\n            }\n        },\n        mutationMode: mutationMode,\n    }), deleteOne = _b[0], loading = _b[1].loading;\n    var handleDialogOpen = function (e) {\n        setOpen(true);\n        e.stopPropagation();\n    };\n    var handleDialogClose = function (e) {\n        setOpen(false);\n        e.stopPropagation();\n    };\n    var handleDelete = useCallback(function (event) {\n        event.stopPropagation();\n        deleteOne({\n            payload: { id: record.id, previousData: record },\n        });\n        if (typeof onClick === 'function') {\n            onClick(event);\n        }\n    }, [deleteOne, onClick, record]);\n    return { open: open, loading: loading, handleDialogOpen: handleDialogOpen, handleDialogClose: handleDialogClose, handleDelete: handleDelete };\n};\nexport default useDeleteWithConfirmController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}