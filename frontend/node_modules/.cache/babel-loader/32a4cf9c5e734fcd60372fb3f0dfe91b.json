{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport InputHelperText from './InputHelperText';\n/**\n * Convert Date object to String\n *\n * @param {Date} value value to convert\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\n */\nvar convertDateToString = function (value) {\n  if (!(value instanceof Date) || isNaN(value.getDate())) return '';\n  var pad = '00';\n  var yyyy = value.getFullYear().toString();\n  var MM = (value.getMonth() + 1).toString();\n  var dd = value.getDate().toString();\n  return yyyy + \"-\" + (pad + MM).slice(-2) + \"-\" + (pad + dd).slice(-2);\n};\nvar dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\nvar defaultInputLabelProps = {\n  shrink: true\n};\nvar getStringFromDate = function (value) {\n  // null, undefined and empty string values should not go through dateFormatter\n  // otherwise, it returns undefined and will make the input an uncontrolled one.\n  if (value == null || value === '') {\n    return '';\n  }\n  if (value instanceof Date) {\n    return convertDateToString(value);\n  }\n  // valid dates should not be converted\n  if (dateRegex.test(value)) {\n    return value;\n  }\n  return convertDateToString(new Date(value));\n};\n/**\n * Form input to edit a Date string value in the \"YYYY-MM-DD\" format (e.g. '2021-06-23').\n *\n * Renders a date picker (the exact UI depends on the browser).\n *\n * @example\n * import { Edit, SimpleForm, DateInput } from 'react-admin';\n *\n * const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <DateInput source=\"published_at\" />\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * // If the initial value is a Date object, DateInput converts it to a string\n * // but you must pass a custom parse method to convert the form value\n * // (which is always a date string) back to a Date object.\n * <DateInput source=\"published_at\" parse={val => new Date(val)} />\n */\nvar DateInput = function (_a) {\n  var defaultValue = _a.defaultValue,\n    _b = _a.format,\n    format = _b === void 0 ? getStringFromDate : _b,\n    initialValue = _a.initialValue,\n    label = _a.label,\n    name = _a.name,\n    options = _a.options,\n    source = _a.source,\n    resource = _a.resource,\n    helperText = _a.helperText,\n    _c = _a.margin,\n    margin = _c === void 0 ? 'dense' : _c,\n    onBlur = _a.onBlur,\n    onChange = _a.onChange,\n    onFocus = _a.onFocus,\n    parse = _a.parse,\n    validate = _a.validate,\n    _d = _a.variant,\n    variant = _d === void 0 ? 'filled' : _d,\n    rest = __rest(_a, [\"defaultValue\", \"format\", \"initialValue\", \"label\", \"name\", \"options\", \"source\", \"resource\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\", \"variant\"]);\n  var _e = useInput(__assign({\n      defaultValue: defaultValue,\n      format: format,\n      initialValue: initialValue,\n      name: name,\n      onBlur: onBlur,\n      onChange: onChange,\n      onFocus: onFocus,\n      parse: parse,\n      resource: resource,\n      source: source,\n      validate: validate\n    }, rest)),\n    id = _e.id,\n    input = _e.input,\n    isRequired = _e.isRequired,\n    meta = _e.meta;\n  var error = meta.error,\n    submitError = meta.submitError,\n    touched = meta.touched;\n  return React.createElement(TextField, __assign({\n    id: id\n  }, input, {\n    // Workaround https://github.com/final-form/react-final-form/issues/529\n    // & https://github.com/final-form/react-final-form/issues/431\n    value: format(input.value) || '',\n    variant: variant,\n    margin: margin,\n    type: \"date\",\n    error: !!(touched && (error || submitError)),\n    helperText: React.createElement(InputHelperText, {\n      touched: touched,\n      error: error || submitError,\n      helperText: helperText\n    }),\n    label: React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    }),\n    InputLabelProps: defaultInputLabelProps\n  }, options, sanitizeInputRestProps(rest)));\n};\nDateInput.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  options: PropTypes.object,\n  resource: PropTypes.string,\n  source: PropTypes.string\n};\nDateInput.defaultProps = {\n  options: {}\n};\nexport default DateInput;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","TextField","useInput","FieldTitle","sanitizeInputRestProps","InputHelperText","convertDateToString","value","Date","isNaN","getDate","pad","yyyy","getFullYear","toString","MM","getMonth","dd","slice","dateRegex","defaultInputLabelProps","shrink","getStringFromDate","test","DateInput","_a","defaultValue","_b","format","initialValue","label","name","options","source","resource","helperText","_c","margin","onBlur","onChange","onFocus","parse","validate","_d","variant","rest","_e","id","input","isRequired","meta","error","submitError","touched","createElement","type","InputLabelProps","propTypes","oneOfType","string","bool","object","defaultProps"],"sources":["/node_modules/ra-ui-materialui/esm/input/DateInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport InputHelperText from './InputHelperText';\n/**\n * Convert Date object to String\n *\n * @param {Date} value value to convert\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\n */\nvar convertDateToString = function (value) {\n    if (!(value instanceof Date) || isNaN(value.getDate()))\n        return '';\n    var pad = '00';\n    var yyyy = value.getFullYear().toString();\n    var MM = (value.getMonth() + 1).toString();\n    var dd = value.getDate().toString();\n    return yyyy + \"-\" + (pad + MM).slice(-2) + \"-\" + (pad + dd).slice(-2);\n};\nvar dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\nvar defaultInputLabelProps = { shrink: true };\nvar getStringFromDate = function (value) {\n    // null, undefined and empty string values should not go through dateFormatter\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\n    if (value == null || value === '') {\n        return '';\n    }\n    if (value instanceof Date) {\n        return convertDateToString(value);\n    }\n    // valid dates should not be converted\n    if (dateRegex.test(value)) {\n        return value;\n    }\n    return convertDateToString(new Date(value));\n};\n/**\n * Form input to edit a Date string value in the \"YYYY-MM-DD\" format (e.g. '2021-06-23').\n *\n * Renders a date picker (the exact UI depends on the browser).\n *\n * @example\n * import { Edit, SimpleForm, DateInput } from 'react-admin';\n *\n * const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <DateInput source=\"published_at\" />\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * // If the initial value is a Date object, DateInput converts it to a string\n * // but you must pass a custom parse method to convert the form value\n * // (which is always a date string) back to a Date object.\n * <DateInput source=\"published_at\" parse={val => new Date(val)} />\n */\nvar DateInput = function (_a) {\n    var defaultValue = _a.defaultValue, _b = _a.format, format = _b === void 0 ? getStringFromDate : _b, initialValue = _a.initialValue, label = _a.label, name = _a.name, options = _a.options, source = _a.source, resource = _a.resource, helperText = _a.helperText, _c = _a.margin, margin = _c === void 0 ? 'dense' : _c, onBlur = _a.onBlur, onChange = _a.onChange, onFocus = _a.onFocus, parse = _a.parse, validate = _a.validate, _d = _a.variant, variant = _d === void 0 ? 'filled' : _d, rest = __rest(_a, [\"defaultValue\", \"format\", \"initialValue\", \"label\", \"name\", \"options\", \"source\", \"resource\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\", \"variant\"]);\n    var _e = useInput(__assign({ defaultValue: defaultValue, format: format, initialValue: initialValue, name: name, onBlur: onBlur, onChange: onChange, onFocus: onFocus, parse: parse, resource: resource, source: source, validate: validate }, rest)), id = _e.id, input = _e.input, isRequired = _e.isRequired, meta = _e.meta;\n    var error = meta.error, submitError = meta.submitError, touched = meta.touched;\n    return (React.createElement(TextField, __assign({ id: id }, input, { \n        // Workaround https://github.com/final-form/react-final-form/issues/529\n        // & https://github.com/final-form/react-final-form/issues/431\n        value: format(input.value) || '', variant: variant, margin: margin, type: \"date\", error: !!(touched && (error || submitError)), helperText: React.createElement(InputHelperText, { touched: touched, error: error || submitError, helperText: helperText }), label: React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired }), InputLabelProps: defaultInputLabelProps }, options, sanitizeInputRestProps(rest))));\n};\nDateInput.propTypes = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n};\nDateInput.defaultProps = {\n    options: {},\n};\nexport default DateInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}