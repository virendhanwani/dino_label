{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport ListPaginationContext from './ListPaginationContext';\n/**\n * Hook to read the list controller props from the ListContext.\n *\n * Must be used within a <ListContextProvider> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @typedef {Object} ListPaginationContextValue\n * @prop {integer}  total the total number of results for the current filters, excluding pagination. Useful to build the pagination controls. e.g. 23\n * @prop {integer}  page the current page. Starts at 1\n * @prop {Function} setPage a callback to change the page, e.g. setPage(3)\n * @prop {integer}  perPage the number of results per page. Defaults to 25\n * @prop {Function} setPerPage a callback to change the number of results per page, e.g. setPerPage(25)\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @returns {ListPaginationContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nvar useListPaginationContext = function (props) {\n  var context = useContext(ListPaginationContext);\n  return useMemo(function () {\n    return defaults({}, props != null ? extractListPaginationContextProps(props) : {}, context);\n  }, [context, props]);\n};\n/**\n * Extract only the list controller props\n *\n * @param {Object} props Props passed to the useListContext hook\n *\n * @returns {ListControllerResult} List controller props\n */\nvar extractListPaginationContextProps = function (_a) {\n  var loading = _a.loading,\n    page = _a.page,\n    perPage = _a.perPage,\n    setPage = _a.setPage,\n    setPerPage = _a.setPerPage,\n    total = _a.total,\n    resource = _a.resource;\n  return {\n    loading: loading,\n    page: page,\n    perPage: perPage,\n    setPage: setPage,\n    setPerPage: setPerPage,\n    total: total,\n    resource: resource\n  };\n};\nexport default useListPaginationContext;","map":{"version":3,"names":["useContext","useMemo","defaults","ListPaginationContext","useListPaginationContext","props","context","extractListPaginationContextProps","_a","loading","page","perPage","setPage","setPerPage","total","resource"],"sources":["/node_modules/ra-core/esm/controller/useListPaginationContext.js"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport ListPaginationContext from './ListPaginationContext';\n/**\n * Hook to read the list controller props from the ListContext.\n *\n * Must be used within a <ListContextProvider> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @typedef {Object} ListPaginationContextValue\n * @prop {integer}  total the total number of results for the current filters, excluding pagination. Useful to build the pagination controls. e.g. 23\n * @prop {integer}  page the current page. Starts at 1\n * @prop {Function} setPage a callback to change the page, e.g. setPage(3)\n * @prop {integer}  perPage the number of results per page. Defaults to 25\n * @prop {Function} setPerPage a callback to change the number of results per page, e.g. setPerPage(25)\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @returns {ListPaginationContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nvar useListPaginationContext = function (props) {\n    var context = useContext(ListPaginationContext);\n    return useMemo(function () {\n        return defaults({}, props != null ? extractListPaginationContextProps(props) : {}, context);\n    }, [context, props]);\n};\n/**\n * Extract only the list controller props\n *\n * @param {Object} props Props passed to the useListContext hook\n *\n * @returns {ListControllerResult} List controller props\n */\nvar extractListPaginationContextProps = function (_a) {\n    var loading = _a.loading, page = _a.page, perPage = _a.perPage, setPage = _a.setPage, setPerPage = _a.setPerPage, total = _a.total, resource = _a.resource;\n    return ({\n        loading: loading,\n        page: page,\n        perPage: perPage,\n        setPage: setPage,\n        setPerPage: setPerPage,\n        total: total,\n        resource: resource,\n    });\n};\nexport default useListPaginationContext;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,wBAAwB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC5C,IAAIC,OAAO,GAAGN,UAAU,CAACG,qBAAqB,CAAC;EAC/C,OAAOF,OAAO,CAAC,YAAY;IACvB,OAAOC,QAAQ,CAAC,CAAC,CAAC,EAAEG,KAAK,IAAI,IAAI,GAAGE,iCAAiC,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC,EAAEC,OAAO,CAAC;EAC/F,CAAC,EAAE,CAACA,OAAO,EAAED,KAAK,CAAC,CAAC;AACxB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,iCAAiC,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAClD,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAO;IAAEC,IAAI,GAAGF,EAAE,CAACE,IAAI;IAAEC,OAAO,GAAGH,EAAE,CAACG,OAAO;IAAEC,OAAO,GAAGJ,EAAE,CAACI,OAAO;IAAEC,UAAU,GAAGL,EAAE,CAACK,UAAU;IAAEC,KAAK,GAAGN,EAAE,CAACM,KAAK;IAAEC,QAAQ,GAAGP,EAAE,CAACO,QAAQ;EAC1J,OAAQ;IACJN,OAAO,EAAEA,OAAO;IAChBC,IAAI,EAAEA,IAAI;IACVC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,UAAU,EAAEA,UAAU;IACtBC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACd,CAAC;AACL,CAAC;AACD,eAAeX,wBAAwB"},"metadata":{},"sourceType":"module"}