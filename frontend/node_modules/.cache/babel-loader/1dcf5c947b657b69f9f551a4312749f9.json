{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport uniq from 'lodash/uniq';\nimport { CRUD_GET_LIST_SUCCESS, CRUD_CREATE_SUCCESS } from '../../../../actions';\nimport { DELETE, DELETE_MANY } from '../../../../core';\nvar initialState = [];\n/**\n * List of the ids of the latest loaded page, regardless of params\n *\n * When loading the list for the first time, useListController grabs the ids\n * from the cachedRequests reducer (not this ids reducer). It's only when the user\n * changes page, sort, or filter, that the useListController hook uses the ids\n * reducer, so as to show the previous list of results while loading the new\n * list (instead of displaying a blank page each time the list params change).\n *\n * @see useListController\n *\n */\nvar idsReducer = function (previousState, action) {\n  if (previousState === void 0) {\n    previousState = initialState;\n  }\n  if (action.meta && action.meta.optimistic) {\n    if (action.meta.fetch === DELETE) {\n      var index = previousState.map(function (el) {\n        return el === action.payload.id;\n      }) // eslint-disable-line eqeqeq\n      .indexOf(true);\n      if (index === -1) {\n        return previousState;\n      }\n      return __spreadArray(__spreadArray([], previousState.slice(0, index), true), previousState.slice(index + 1), true);\n    }\n    if (action.meta.fetch === DELETE_MANY) {\n      var newState = previousState.filter(function (el) {\n        return !action.payload.ids.includes(el);\n      });\n      return newState;\n    }\n  }\n  switch (action.type) {\n    case CRUD_GET_LIST_SUCCESS:\n      return action.payload.data.map(function (_a) {\n        var id = _a.id;\n        return id;\n      });\n    case CRUD_CREATE_SUCCESS:\n      return uniq(__spreadArray([action.payload.data.id], previousState, true));\n    default:\n      return previousState;\n  }\n};\nexport default idsReducer;\nexport var getIds = function (state) {\n  return state;\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","uniq","CRUD_GET_LIST_SUCCESS","CRUD_CREATE_SUCCESS","DELETE","DELETE_MANY","initialState","idsReducer","previousState","action","meta","optimistic","fetch","index","map","el","payload","id","indexOf","newState","filter","ids","includes","type","data","_a","getIds","state"],"sources":["/node_modules/ra-core/esm/reducer/admin/resource/list/ids.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport uniq from 'lodash/uniq';\nimport { CRUD_GET_LIST_SUCCESS, CRUD_CREATE_SUCCESS, } from '../../../../actions';\nimport { DELETE, DELETE_MANY } from '../../../../core';\nvar initialState = [];\n/**\n * List of the ids of the latest loaded page, regardless of params\n *\n * When loading the list for the first time, useListController grabs the ids\n * from the cachedRequests reducer (not this ids reducer). It's only when the user\n * changes page, sort, or filter, that the useListController hook uses the ids\n * reducer, so as to show the previous list of results while loading the new\n * list (instead of displaying a blank page each time the list params change).\n *\n * @see useListController\n *\n */\nvar idsReducer = function (previousState, action) {\n    if (previousState === void 0) { previousState = initialState; }\n    if (action.meta && action.meta.optimistic) {\n        if (action.meta.fetch === DELETE) {\n            var index = previousState\n                .map(function (el) { return el === action.payload.id; }) // eslint-disable-line eqeqeq\n                .indexOf(true);\n            if (index === -1) {\n                return previousState;\n            }\n            return __spreadArray(__spreadArray([], previousState.slice(0, index), true), previousState.slice(index + 1), true);\n        }\n        if (action.meta.fetch === DELETE_MANY) {\n            var newState = previousState.filter(function (el) { return !action.payload.ids.includes(el); });\n            return newState;\n        }\n    }\n    switch (action.type) {\n        case CRUD_GET_LIST_SUCCESS:\n            return action.payload.data.map(function (_a) {\n                var id = _a.id;\n                return id;\n            });\n        case CRUD_CREATE_SUCCESS:\n            return uniq(__spreadArray([action.payload.data.id], previousState, true));\n        default:\n            return previousState;\n    }\n};\nexport default idsReducer;\nexport var getIds = function (state) { return state; };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}