{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { cloneElement } from 'react';\nimport useAuthenticated from './useAuthenticated';\n/**\n * Restrict access to children to authenticated users.\n * Redirects anonymous users to the login page.\n *\n * Use it to decorate your custom page components to require\n * authentication.\n *\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @see useAuthenticated\n *\n * @example\n *     import { Authenticated } from 'react-admin';\n *\n *     const CustomRoutes = [\n *         <Route path=\"/foo\" render={() =>\n *             <Authenticated authParams={{ foo: 'bar' }}>\n *                 <Foo />\n *             </Authenticated>\n *         } />\n *     ];\n *     const App = () => (\n *         <Admin customRoutes={customRoutes}>\n *             ...\n *         </Admin>\n *     );\n */\nvar Authenticated = function (props) {\n  var authParams = props.authParams,\n    children = props.children,\n    location = props.location,\n    // kept for backwards compatibility, unused\n    rest = __rest(props, [\"authParams\", \"children\", \"location\"]);\n  useAuthenticated(authParams);\n  // render the child even though the useAuthenticated() call isn't finished (optimistic rendering)\n  // the above hook will log out if the authProvider doesn't validate that the user is authenticated\n  return cloneElement(children, rest);\n};\nexport default Authenticated;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","cloneElement","useAuthenticated","Authenticated","props","authParams","children","location","rest"],"sources":["/node_modules/ra-core/esm/auth/Authenticated.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { cloneElement } from 'react';\nimport useAuthenticated from './useAuthenticated';\n/**\n * Restrict access to children to authenticated users.\n * Redirects anonymous users to the login page.\n *\n * Use it to decorate your custom page components to require\n * authentication.\n *\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @see useAuthenticated\n *\n * @example\n *     import { Authenticated } from 'react-admin';\n *\n *     const CustomRoutes = [\n *         <Route path=\"/foo\" render={() =>\n *             <Authenticated authParams={{ foo: 'bar' }}>\n *                 <Foo />\n *             </Authenticated>\n *         } />\n *     ];\n *     const App = () => (\n *         <Admin customRoutes={customRoutes}>\n *             ...\n *         </Admin>\n *     );\n */\nvar Authenticated = function (props) {\n    var authParams = props.authParams, children = props.children, location = props.location, // kept for backwards compatibility, unused\n    rest = __rest(props, [\"authParams\", \"children\", \"location\"]);\n    useAuthenticated(authParams);\n    // render the child even though the useAuthenticated() call isn't finished (optimistic rendering)\n    // the above hook will log out if the authProvider doesn't validate that the user is authenticated\n    return cloneElement(children, rest);\n};\nexport default Authenticated;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAC/ED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACf,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAC/D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IACpE,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAC1ER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACzB;EACJ,OAAOR,CAAC;AACZ,CAAC;AACD,SAASW,YAAY,QAAQ,OAAO;AACpC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACjC,IAAIC,UAAU,GAAGD,KAAK,CAACC,UAAU;IAAEC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IAAEC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IAAE;IACzFC,IAAI,GAAGrB,MAAM,CAACiB,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;EAC5DF,gBAAgB,CAACG,UAAU,CAAC;EAC5B;EACA;EACA,OAAOJ,YAAY,CAACK,QAAQ,EAAEE,IAAI,CAAC;AACvC,CAAC;AACD,eAAeL,aAAa"},"metadata":{},"sourceType":"module"}